{
  "version": 3,
  "sources": ["../../../../../../../node_modules/varint/encode.js", "../../../../../../../node_modules/varint/decode.js", "../../../../../../../node_modules/varint/length.js", "../../../../../../../node_modules/varint/index.js", "../../../../../../../node_modules/err-code/index.js", "../../../../../../../node_modules/is-electron/index.js", "../../../../../../../node_modules/ipfs-utils/src/env.js", "../../../../../../../node_modules/@libp2p/logger/node_modules/ms/index.js", "../../../../../../../node_modules/@libp2p/logger/node_modules/debug/src/common.js", "../../../../../../../node_modules/@libp2p/logger/node_modules/debug/src/browser.js", "../../../../../../../node_modules/ipfs-utils/src/http/error.js", "../../../../../../../node_modules/node-fetch/browser.js", "../../../../../../../node_modules/ipfs-utils/node_modules/native-fetch/src/index.js", "../../../../../../../node_modules/ipfs-utils/src/fetch.browser.js", "../../../../../../../node_modules/ipfs-utils/src/http/fetch.browser.js", "../../../../../../../node_modules/is-plain-obj/index.js", "../../../../../../../node_modules/merge-options/index.js", "../../../../../../../node_modules/iso-url/src/url-browser.js", "../../../../../../../node_modules/iso-url/src/relative.js", "../../../../../../../node_modules/iso-url/index.js", "../../../../../../../node_modules/any-signal/index.js", "../../../../../../../node_modules/ipfs-utils/src/http.js", "../../../../../../../node_modules/it-peekable/index.js", "../../../../../../../node_modules/browser-readablestream-to-it/index.js", "../../../../../../../node_modules/it-all/index.js", "../../../../../../../node_modules/it-map/index.js", "../../../../../../../node_modules/@protobufjs/aspromise/index.js", "../../../../../../../node_modules/@protobufjs/base64/index.js", "../../../../../../../node_modules/@protobufjs/eventemitter/index.js", "../../../../../../../node_modules/@protobufjs/float/index.js", "../../../../../../../node_modules/@protobufjs/inquire/index.js", "../../../../../../../node_modules/@protobufjs/utf8/index.js", "../../../../../../../node_modules/@protobufjs/pool/index.js", "../../../../../../../node_modules/protobufjs/src/util/longbits.js", "../../../../../../../node_modules/protobufjs/src/util/minimal.js", "../../../../../../../node_modules/protobufjs/src/writer.js", "../../../../../../../node_modules/protobufjs/src/writer_buffer.js", "../../../../../../../node_modules/protobufjs/src/reader.js", "../../../../../../../node_modules/protobufjs/src/reader_buffer.js", "../../../../../../../node_modules/protobufjs/src/rpc/service.js", "../../../../../../../node_modules/protobufjs/src/rpc.js", "../../../../../../../node_modules/protobufjs/src/roots.js", "../../../../../../../node_modules/protobufjs/src/index-minimal.js", "../../../../../../../node_modules/protobufjs/minimal.js", "../../../../../../../node_modules/it-first/index.js", "../../../../../../../node_modules/it-last/index.js", "../../../../../../../node_modules/stream-to-it/source.js", "../../../../../../../node_modules/blob-to-it/index.js", "browser-external:ipfs-utils/src/files/glob-source.js", "../../../../../../../node_modules/ipfs-utils/src/files/url-source.js", "../../../../../../../node_modules/ipfs-core-utils/src/multibases.js", "../../../../../../../node_modules/ipfs-core-utils/src/multicodecs.js", "../../../../../../../node_modules/ipfs-core-utils/src/multihashes.js", "../../../../../../../node_modules/@ipld/dag-pb/esm/src/index.js", "../../../../../../../node_modules/multiformats/esm/vendor/varint.js", "../../../../../../../node_modules/multiformats/esm/src/varint.js", "../../../../../../../node_modules/multiformats/esm/src/bytes.js", "../../../../../../../node_modules/multiformats/esm/src/hashes/digest.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base58.js", "../../../../../../../node_modules/multiformats/esm/vendor/base-x.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base32.js", "../../../../../../../node_modules/multiformats/esm/src/cid.js", "../../../../../../../node_modules/@ipld/dag-pb/esm/src/pb-decode.js", "../../../../../../../node_modules/@ipld/dag-pb/esm/src/pb-encode.js", "../../../../../../../node_modules/@ipld/dag-pb/esm/src/util.js", "../../../../../../../node_modules/@ipld/dag-cbor/esm/index.js", "../../../../../../../node_modules/cborg/esm/lib/is.js", "../../../../../../../node_modules/cborg/esm/lib/token.js", "../../../../../../../node_modules/cborg/esm/lib/byte-utils.js", "../../../../../../../node_modules/cborg/esm/lib/bl.js", "../../../../../../../node_modules/cborg/esm/lib/common.js", "../../../../../../../node_modules/cborg/esm/lib/0uint.js", "../../../../../../../node_modules/cborg/esm/lib/1negint.js", "../../../../../../../node_modules/cborg/esm/lib/2bytes.js", "../../../../../../../node_modules/cborg/esm/lib/3string.js", "../../../../../../../node_modules/cborg/esm/lib/4array.js", "../../../../../../../node_modules/cborg/esm/lib/5map.js", "../../../../../../../node_modules/cborg/esm/lib/6tag.js", "../../../../../../../node_modules/cborg/esm/lib/7float.js", "../../../../../../../node_modules/cborg/esm/lib/jump.js", "../../../../../../../node_modules/cborg/esm/lib/encode.js", "../../../../../../../node_modules/cborg/esm/lib/decode.js", "../../../../../../../node_modules/@ipld/dag-json/esm/index.js", "../../../../../../../node_modules/multiformats/esm/src/hashes/hasher.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base64.js", "../../../../../../../node_modules/cborg/esm/lib/json/encode.js", "../../../../../../../node_modules/cborg/esm/lib/json/decode.js", "../../../../../../../node_modules/dag-jose/src/index.ts", "../../../../../../../node_modules/dag-jose/src/utils.ts", "../../../../../../../node_modules/dag-jose/src/signing.ts", "../../../../../../../node_modules/dag-jose/src/encryption.ts", "../../../../../../../node_modules/multiformats/esm/src/hashes/identity.js", "../../../../../../../node_modules/multiformats/esm/src/bases/identity.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base2.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base8.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base10.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base16.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base36.js", "../../../../../../../node_modules/multiformats/esm/src/bases/base256emoji.js", "../../../../../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../../../../../../../node_modules/multiformats/esm/src/codecs/raw.js", "../../../../../../../node_modules/multiformats/esm/src/codecs/json.js", "../../../../../../../node_modules/multiformats/esm/src/basics.js", "../../../../../../../node_modules/ip-regex/index.js", "../../../../../../../node_modules/function-timeout/browser.js", "../../../../../../../node_modules/is-regexp/index.js", "../../../../../../../node_modules/clone-regexp/index.js", "../../../../../../../node_modules/super-regex/index.js", "../../../../../../../node_modules/is-ip/index.js", "../../../../../../../node_modules/uint8arrays/esm/src/alloc.js", "../../../../../../../node_modules/uint8arrays/esm/src/util/bases.js", "../../../../../../../node_modules/uint8arrays/esm/src/to-string.js", "../../../../../../../node_modules/@multiformats/multiaddr/src/ip.ts", "../../../../../../../node_modules/@multiformats/multiaddr/src/protocols-table.ts", "../../../../../../../node_modules/@multiformats/multiaddr/src/convert.ts", "../../../../../../../node_modules/uint8arrays/esm/src/from-string.js", "../../../../../../../node_modules/uint8arrays/esm/src/concat.js", "../../../../../../../node_modules/@multiformats/multiaddr/src/codec.ts", "../../../../../../../node_modules/@multiformats/multiaddr/src/index.ts", "../../../../../../../node_modules/uint8arrays/esm/src/equals.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/core.js", "../../../../../../../node_modules/parse-duration/index.mjs", "../../../../../../../node_modules/@libp2p/logger/src/index.ts", "../../../../../../../node_modules/merge-options/index.mjs", "../../../../../../../node_modules/@multiformats/multiaddr-to-uri/src/index.ts", "../../../../../../../node_modules/ipfs-core-utils/src/to-url-string.js", "../../../../../../../node_modules/ipfs-core-utils/src/agent.browser.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/configure.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/mode-to-string.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/parse-mtime.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/to-url-search-params.js", "../../../../../../../node_modules/ipfs-http-client/src/bitswap/wantlist.js", "../../../../../../../node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js", "../../../../../../../node_modules/@libp2p/peer-id/src/index.ts", "../../../../../../../node_modules/@libp2p/interface-peer-id/src/index.ts", "../../../../../../../node_modules/ipfs-http-client/src/bitswap/stat.js", "../../../../../../../node_modules/ipfs-http-client/src/bitswap/unwant.js", "../../../../../../../node_modules/ipfs-http-client/src/bitswap/index.js", "../../../../../../../node_modules/ipfs-http-client/src/block/get.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/normalise-content.browser.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/utils.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js", "../../../../../../../node_modules/ipfs-unixfs/src/index.js", "../../../../../../../node_modules/ipfs-unixfs/src/unixfs.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js", "../../../../../../../node_modules/ipfs-core-utils/src/mode-to-string.js", "../../../../../../../node_modules/ipfs-core-utils/src/multipart-request.browser.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/abort-signal.js", "../../../../../../../node_modules/ipfs-http-client/src/block/put.js", "../../../../../../../node_modules/ipfs-http-client/src/block/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/block/stat.js", "../../../../../../../node_modules/ipfs-http-client/src/block/index.js", "../../../../../../../node_modules/ipfs-http-client/src/bootstrap/add.js", "../../../../../../../node_modules/ipfs-http-client/src/bootstrap/clear.js", "../../../../../../../node_modules/ipfs-http-client/src/bootstrap/list.js", "../../../../../../../node_modules/ipfs-http-client/src/bootstrap/reset.js", "../../../../../../../node_modules/ipfs-http-client/src/bootstrap/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/bootstrap/index.js", "../../../../../../../node_modules/ipfs-http-client/src/config/profiles/apply.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/object-to-camel.js", "../../../../../../../node_modules/ipfs-http-client/src/config/profiles/list.js", "../../../../../../../node_modules/ipfs-http-client/src/config/profiles/index.js", "../../../../../../../node_modules/ipfs-http-client/src/config/get.js", "../../../../../../../node_modules/ipfs-http-client/src/config/get-all.js", "../../../../../../../node_modules/ipfs-http-client/src/config/replace.js", "../../../../../../../node_modules/ipfs-http-client/src/config/set.js", "../../../../../../../node_modules/ipfs-http-client/src/config/index.js", "../../../../../../../node_modules/ipfs-http-client/src/dag/export.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/resolve.js", "../../../../../../../node_modules/ipfs-http-client/src/dag/get.js", "../../../../../../../node_modules/ipfs-http-client/src/dag/import.js", "../../../../../../../node_modules/ipfs-http-client/src/dag/put.js", "../../../../../../../node_modules/ipfs-http-client/src/dag/resolve.js", "../../../../../../../node_modules/ipfs-http-client/src/dag/index.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/response-types.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/map-event.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/find-peer.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/find-provs.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/get.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/provide.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/put.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/query.js", "../../../../../../../node_modules/ipfs-http-client/src/dht/index.js", "../../../../../../../node_modules/ipfs-http-client/src/diag/cmds.js", "../../../../../../../node_modules/ipfs-http-client/src/diag/net.js", "../../../../../../../node_modules/ipfs-http-client/src/diag/sys.js", "../../../../../../../node_modules/ipfs-http-client/src/diag/index.js", "../../../../../../../node_modules/ipfs-http-client/src/files/chmod.js", "../../../../../../../node_modules/ipfs-http-client/src/files/cp.js", "../../../../../../../node_modules/ipfs-http-client/src/files/flush.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js", "../../../../../../../node_modules/ipfs-http-client/src/files/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/files/mkdir.js", "../../../../../../../node_modules/ipfs-http-client/src/files/mv.js", "../../../../../../../node_modules/ipfs-http-client/src/files/read.js", "../../../../../../../node_modules/ipfs-http-client/src/files/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/files/stat.js", "../../../../../../../node_modules/ipfs-http-client/src/files/touch.js", "../../../../../../../node_modules/ipfs-http-client/src/files/write.js", "../../../../../../../node_modules/ipfs-http-client/src/files/index.js", "../../../../../../../node_modules/ipfs-http-client/src/key/export.js", "../../../../../../../node_modules/ipfs-http-client/src/key/gen.js", "../../../../../../../node_modules/ipfs-http-client/src/key/import.js", "../../../../../../../node_modules/ipfs-http-client/src/key/info.js", "../../../../../../../node_modules/ipfs-http-client/src/key/list.js", "../../../../../../../node_modules/ipfs-http-client/src/key/rename.js", "../../../../../../../node_modules/ipfs-http-client/src/key/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/key/index.js", "../../../../../../../node_modules/ipfs-http-client/src/log/level.js", "../../../../../../../node_modules/ipfs-http-client/src/log/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/log/tail.js", "../../../../../../../node_modules/ipfs-http-client/src/log/index.js", "../../../../../../../node_modules/ipfs-http-client/src/name/publish.js", "../../../../../../../node_modules/ipfs-http-client/src/name/resolve.js", "../../../../../../../node_modules/ipfs-http-client/src/name/pubsub/cancel.js", "../../../../../../../node_modules/ipfs-http-client/src/name/pubsub/state.js", "../../../../../../../node_modules/ipfs-http-client/src/name/pubsub/subs.js", "../../../../../../../node_modules/ipfs-http-client/src/name/pubsub/index.js", "../../../../../../../node_modules/ipfs-http-client/src/name/index.js", "../../../../../../../node_modules/ipfs-http-client/src/object/data.js", "../../../../../../../node_modules/ipfs-http-client/src/object/get.js", "../../../../../../../node_modules/ipfs-http-client/src/object/links.js", "../../../../../../../node_modules/ipfs-http-client/src/object/new.js", "../../../../../../../node_modules/ipfs-http-client/src/object/put.js", "../../../../../../../node_modules/ipfs-http-client/src/object/stat.js", "../../../../../../../node_modules/ipfs-http-client/src/object/patch/add-link.js", "../../../../../../../node_modules/ipfs-http-client/src/object/patch/append-data.js", "../../../../../../../node_modules/ipfs-http-client/src/object/patch/rm-link.js", "../../../../../../../node_modules/ipfs-http-client/src/object/patch/set-data.js", "../../../../../../../node_modules/ipfs-http-client/src/object/patch/index.js", "../../../../../../../node_modules/ipfs-http-client/src/object/index.js", "../../../../../../../node_modules/ipfs-core-utils/src/pins/normalise-input.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/add-all.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/add.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/rm-all.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/utils.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/add.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/rm-all.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/service/utils.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/service/add.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/service/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/service/rm.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/service/index.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/remote/index.js", "../../../../../../../node_modules/ipfs-http-client/src/pin/index.js", "../../../../../../../node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/peers.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/publish.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/subscribe.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/unsubscribe.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js", "../../../../../../../node_modules/ipfs-http-client/src/pubsub/index.js", "../../../../../../../node_modules/ipfs-http-client/src/refs/local.js", "../../../../../../../node_modules/ipfs-http-client/src/refs/index.js", "../../../../../../../node_modules/ipfs-http-client/src/repo/gc.js", "../../../../../../../node_modules/ipfs-http-client/src/repo/stat.js", "../../../../../../../node_modules/ipfs-http-client/src/repo/version.js", "../../../../../../../node_modules/ipfs-http-client/src/repo/index.js", "../../../../../../../node_modules/ipfs-http-client/src/stats/bw.js", "../../../../../../../node_modules/ipfs-http-client/src/stats/index.js", "../../../../../../../node_modules/ipfs-http-client/src/swarm/addrs.js", "../../../../../../../node_modules/ipfs-http-client/src/swarm/connect.js", "../../../../../../../node_modules/ipfs-http-client/src/swarm/disconnect.js", "../../../../../../../node_modules/ipfs-http-client/src/swarm/local-addrs.js", "../../../../../../../node_modules/ipfs-http-client/src/swarm/peers.js", "../../../../../../../node_modules/ipfs-http-client/src/swarm/index.js", "../../../../../../../node_modules/ipfs-http-client/src/add-all.js", "../../../../../../../node_modules/ipfs-http-client/src/add.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/normalise-content.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js", "../../../../../../../node_modules/ipfs-core-utils/src/files/normalise-input-single.js", "../../../../../../../node_modules/ipfs-http-client/src/cat.js", "../../../../../../../node_modules/ipfs-http-client/src/commands.js", "../../../../../../../node_modules/ipfs-http-client/src/dns.js", "../../../../../../../node_modules/ipfs-http-client/src/get-endpoint-config.js", "../../../../../../../node_modules/ipfs-http-client/src/get.js", "../../../../../../../node_modules/ipfs-http-client/src/id.js", "../../../../../../../node_modules/ipfs-http-client/src/is-online.js", "../../../../../../../node_modules/ipfs-http-client/src/ls.js", "../../../../../../../node_modules/ipfs-http-client/src/mount.js", "../../../../../../../node_modules/ipfs-http-client/src/ping.js", "../../../../../../../node_modules/ipfs-http-client/src/resolve.js", "../../../../../../../node_modules/ipfs-http-client/src/start.js", "../../../../../../../node_modules/ipfs-http-client/src/stop.js", "../../../../../../../node_modules/ipfs-http-client/src/version.js", "../../../../../../../node_modules/ipfs-http-client/src/index.js"],
  "sourcesContent": ["module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n", "// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to false\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n", "'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict'\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n", "\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;", "'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n", "'use strict'\n\n/**\n * @typedef {globalThis.Headers} Headers\n * @typedef {globalThis.Request} Request\n * @typedef {globalThis.Response} Response\n */\n\n// use window.fetch if it is available, fall back to node-fetch if not\nmodule.exports = require('native-fetch')\n", "'use strict'\n\nconst { TimeoutError, AbortError } = require('./error')\n// @ts-expect-error\nconst { Response, Request, Headers, default: fetch } = require('../fetch')\n\n/**\n * @typedef {import('../types').FetchOptions} FetchOptions\n * @typedef {import('../types').ProgressFn} ProgressFn\n */\n\n/**\n * Fetch with progress\n *\n * @param {string | Request} url\n * @param {FetchOptions} [options]\n * @returns {Promise<ResponseWithURL>}\n */\nconst fetchWithProgress = (url, options = {}) => {\n  const request = new XMLHttpRequest()\n  request.open(options.method || 'GET', url.toString(), true)\n\n  const { timeout, headers } = options\n\n  if (timeout && timeout > 0 && timeout < Infinity) {\n    request.timeout = timeout\n  }\n\n  if (options.overrideMimeType != null) {\n    request.overrideMimeType(options.overrideMimeType)\n  }\n\n  if (headers) {\n    for (const [name, value] of new Headers(headers)) {\n      request.setRequestHeader(name, value)\n    }\n  }\n\n  if (options.signal) {\n    options.signal.onabort = () => request.abort()\n  }\n\n  if (options.onUploadProgress) {\n    request.upload.onprogress = options.onUploadProgress\n  }\n\n  // Note: Need to use `arraybuffer` here instead of `blob` because `Blob`\n  // instances coming from JSDOM are not compatible with `Response` from\n  // node-fetch (which is the setup we get when testing with jest because\n  // it uses JSDOM which does not provide a global fetch\n  // https://github.com/jsdom/jsdom/issues/1724)\n  request.responseType = 'arraybuffer'\n\n  return new Promise((resolve, reject) => {\n    /**\n     * @param {Event} event\n     */\n    const handleEvent = (event) => {\n      switch (event.type) {\n        case 'error': {\n          resolve(Response.error())\n          break\n        }\n        case 'load': {\n          resolve(\n            new ResponseWithURL(request.responseURL, request.response, {\n              status: request.status,\n              statusText: request.statusText,\n              headers: parseHeaders(request.getAllResponseHeaders())\n            })\n          )\n          break\n        }\n        case 'timeout': {\n          reject(new TimeoutError())\n          break\n        }\n        case 'abort': {\n          reject(new AbortError())\n          break\n        }\n        default: {\n          break\n        }\n      }\n    }\n    request.onerror = handleEvent\n    request.onload = handleEvent\n    request.ontimeout = handleEvent\n    request.onabort = handleEvent\n\n    // @ts-expect-error options.body can be a node readable stream, which isn't compatible with XHR, but this\n    // file is a browser override so you won't get a node readable stream so ignore the error\n    request.send(options.body)\n  })\n}\n\nconst fetchWithStreaming = fetch\n\n/**\n * @param {string | Request} url\n * @param {FetchOptions} options\n */\nconst fetchWith = (url, options = {}) =>\n  (options.onUploadProgress != null)\n    ? fetchWithProgress(url, options)\n    : fetchWithStreaming(url, options)\n\n/**\n * Parse Headers from a XMLHttpRequest\n *\n * @param {string} input\n * @returns {Headers}\n */\nconst parseHeaders = (input) => {\n  const headers = new Headers()\n  for (const line of input.trim().split(/[\\r\\n]+/)) {\n    const index = line.indexOf(': ')\n    if (index > 0) {\n      headers.set(line.slice(0, index), line.slice(index + 1))\n    }\n  }\n\n  return headers\n}\n\nclass ResponseWithURL extends Response {\n  /**\n   * @param {string} url\n   * @param {BodyInit} body\n   * @param {ResponseInit} options\n   */\n  constructor (url, body, options) {\n    super(body, options)\n    Object.defineProperty(this, 'url', { value: url })\n  }\n}\n\nmodule.exports = {\n  fetch: fetchWith,\n  Request,\n  Headers\n}\n", "'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n", "'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n", "'use strict'\n\nconst isReactNative =\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n\nfunction getDefaultBase () {\n  if (isReactNative) {\n    return 'http://localhost'\n  }\n  // in some environments i.e. cloudflare workers location is not available\n  if (!self.location) {\n    return ''\n  }\n\n  return self.location.protocol + '//' + self.location.host\n}\n\nconst URL = self.URL\nconst defaultBase = getDefaultBase()\n\nclass URLWithLegacySupport {\n  constructor (url = '', base = defaultBase) {\n    this.super = new URL(url, base)\n    this.path = this.pathname + this.search\n    this.auth =\n            this.username && this.password\n              ? this.username + ':' + this.password\n              : null\n\n    this.query =\n            this.search && this.search.startsWith('?')\n              ? this.search.slice(1)\n              : null\n  }\n\n  get hash () {\n    return this.super.hash\n  }\n\n  get host () {\n    return this.super.host\n  }\n\n  get hostname () {\n    return this.super.hostname\n  }\n\n  get href () {\n    return this.super.href\n  }\n\n  get origin () {\n    return this.super.origin\n  }\n\n  get password () {\n    return this.super.password\n  }\n\n  get pathname () {\n    return this.super.pathname\n  }\n\n  get port () {\n    return this.super.port\n  }\n\n  get protocol () {\n    return this.super.protocol\n  }\n\n  get search () {\n    return this.super.search\n  }\n\n  get searchParams () {\n    return this.super.searchParams\n  }\n\n  get username () {\n    return this.super.username\n  }\n\n  set hash (hash) {\n    this.super.hash = hash\n  }\n\n  set host (host) {\n    this.super.host = host\n  }\n\n  set hostname (hostname) {\n    this.super.hostname = hostname\n  }\n\n  set href (href) {\n    this.super.href = href\n  }\n\n  set password (password) {\n    this.super.password = password\n  }\n\n  set pathname (pathname) {\n    this.super.pathname = pathname\n  }\n\n  set port (port) {\n    this.super.port = port\n  }\n\n  set protocol (protocol) {\n    this.super.protocol = protocol\n  }\n\n  set search (search) {\n    this.super.search = search\n  }\n\n  set username (username) {\n    this.super.username = username\n  }\n\n  /**\n   * @param {any} o\n   */\n  static createObjectURL (o) {\n    return URL.createObjectURL(o)\n  }\n\n  /**\n   * @param {string} o\n   */\n  static revokeObjectURL (o) {\n    URL.revokeObjectURL(o)\n  }\n\n  toJSON () {\n    return this.super.toJSON()\n  }\n\n  toString () {\n    return this.super.toString()\n  }\n\n  format () {\n    return this.toString()\n  }\n}\n\n/**\n * @param {string | import('url').UrlObject} obj\n */\nfunction format (obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj)\n\n    return url.toString()\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass =\n            // @ts-ignore its not supported in node but we normalise\n            obj.username && obj.password\n              // @ts-ignore its not supported in node but we normalise\n              ? `${obj.username}:${obj.password}@`\n              : ''\n    const auth = obj.auth ? obj.auth + '@' : ''\n    const port = obj.port ? ':' + obj.port : ''\n    const protocol = obj.protocol ? obj.protocol + '//' : ''\n    const host = obj.host || ''\n    const hostname = obj.hostname || ''\n    const search = obj.search || (obj.query ? '?' + obj.query : '')\n    const hash = obj.hash || ''\n    const pathname = obj.pathname || ''\n    // @ts-ignore - path is not supported in node but we normalise\n    const path = obj.path || pathname + search\n\n    return `${protocol}${userPass || auth}${\n            host || hostname + port\n        }${path}${hash}`\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n}\n", "'use strict'\n\nconst { URLWithLegacySupport, format } = require('./url')\n\n/**\n * @param {string | undefined} url\n * @param {any} [location]\n * @param {any} [protocolMap]\n * @param {any} [defaultProtocol]\n */\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n  let protocol = location.protocol\n    ? location.protocol.replace(':', '')\n    : 'http'\n\n  // Check protocol map\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':'\n  let urlParsed\n\n  try {\n    urlParsed = new URLWithLegacySupport(url)\n  } catch (err) {\n    urlParsed = {}\n  }\n\n  const base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  })\n\n  return new URLWithLegacySupport(url, format(base)).toString()\n}\n", "'use strict'\n\nconst {\n  URLWithLegacySupport,\n  format,\n  URLSearchParams,\n  defaultBase\n} = require('./src/url')\nconst relative = require('./src/relative')\n\nmodule.exports = {\n  URL: URLWithLegacySupport,\n  URLSearchParams,\n  format,\n  relative,\n  defaultBase\n}\n", "/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\nfunction anySignal (signals) {\n  const controller = new globalThis.AbortController()\n\n  function onAbort () {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue\n    if (signal.aborted) {\n      onAbort()\n      break\n    }\n    signal.addEventListener('abort', onAbort)\n  }\n\n  return controller.signal\n}\n\nmodule.exports = anySignal\nmodule.exports.anySignal = anySignal\n", "/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n", "'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n", "'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n", "'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n", "'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n", "'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n", "module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n", "/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"ipfs-utils/src/files/glob-source.js\" has been externalized for browser compatibility. Cannot access \"ipfs-utils/src/files/glob-source.js.${key}\" in client code.`)\n    }\n  }\n}))", "'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n", "/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nexport class Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n", "/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nexport class Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n", "/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nexport class Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n", "import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}", "const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];", "import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}", "import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);", "const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}", "class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};", "export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}", "import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}", "const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}", "import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};", "import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};", "import { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport * as cborgJson from 'cborg/json';\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const cidString = cid.toString();\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.string, cidString, cidString.length),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction bytesEncoder(bytes) {\n  const bytesString = base64.encode(bytes).slice(1);\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, 'bytes', 5),\n    new Token(Type.string, bytesString, bytesString.length),\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder,\n    Buffer: bytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  constructor(data, options) {\n    super(data, options);\n    this.tokenBuffer = [];\n  }\n  done() {\n    return this.tokenBuffer.length === 0 && super.done();\n  }\n  _next() {\n    if (this.tokenBuffer.length > 0) {\n      return this.tokenBuffer.pop();\n    }\n    return super.next();\n  }\n  next() {\n    const token = this._next();\n    if (token.type === Type.map) {\n      const keyToken = this._next();\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next();\n        if (valueToken.type === Type.string) {\n          const breakToken = this._next();\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form');\n          }\n          this.tokenBuffer.push(valueToken);\n          return new Token(Type.tag, 42, 0);\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next();\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next();\n            if (innerValueToken.type === Type.string) {\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next();\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form');\n                }\n              }\n              const bytes = base64.decode(`m${ innerValueToken.value }`);\n              return new Token(Type.bytes, bytes, innerValueToken.value.length);\n            }\n            this.tokenBuffer.push(innerValueToken);\n          }\n          this.tokenBuffer.push(innerKeyToken);\n        }\n        this.tokenBuffer.push(valueToken);\n      }\n      this.tokenBuffer.push(keyToken);\n    }\n    return token;\n  }\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[42] = CID.parse;\nexport const name = 'dag-json';\nexport const code = 297;\nexport const encode = node => cborgJson.encode(node, encodeOptions);\nexport const decode = data => {\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) });\n  return cborgJson.decode(data, options);\n};", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};", "import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};", null, null, null, null, "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "const word = '[a-fA-F\\\\d:]';\n\nconst boundry = options => options && options.includeBoundaries\n\t? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n\t: '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\n\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ipRegex = options => options && options.exact\n\t? v46Exact\n\t: new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\n\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\n\nexport default ipRegex;\n", "// Even though the browser version is a no-op, we wrap it to ensure consistent behavior.\nexport default function functionTimeout(function_) {\n\tconst wrappedFunction = (...arguments_) => function_(...arguments_);\n\n\tObject.defineProperty(wrappedFunction, 'name', {\n\t\tvalue: `functionTimeout(${function_.name || '<anonymous>'})`,\n\t\tconfigurable: true,\n\t});\n\n\treturn wrappedFunction;\n}\n\nexport function isTimeoutError() {\n\treturn false;\n}\n", "const {toString} = Object.prototype;\n\nexport default function isRegexp(value) {\n\treturn toString.call(value) === '[object RegExp]';\n}\n", "import isRegexp from 'is-regexp';\n\nconst flagMap = {\n\tglobal: 'g',\n\tignoreCase: 'i',\n\tmultiline: 'm',\n\tdotAll: 's',\n\tsticky: 'y',\n\tunicode: 'u'\n};\n\nexport default function clonedRegexp(regexp, options = {}) {\n\tif (!isRegexp(regexp)) {\n\t\tthrow new TypeError('Expected a RegExp instance');\n\t}\n\n\tconst flags = Object.keys(flagMap).map(flag => (\n\t\t(typeof options[flag] === 'boolean' ? options[flag] : regexp[flag]) ? flagMap[flag] : ''\n\t)).join('');\n\n\tconst clonedRegexp = new RegExp(options.source || regexp.source, flags);\n\n\tclonedRegexp.lastIndex = typeof options.lastIndex === 'number' ?\n\t\toptions.lastIndex :\n\t\tregexp.lastIndex;\n\n\treturn clonedRegexp;\n}\n", "import functionTimeout, {isTimeoutError} from 'function-timeout';\nimport timeSpan from 'time-span';\nimport cloneRegexp from 'clone-regexp'; // TODO: Use `structuredClone` instead when targeting Node.js 18.\n\nconst resultToMatch = result => ({\n\tmatch: result[0],\n\tindex: result.index,\n\tgroups: result.slice(1),\n\tnamedGroups: result.groups ?? {},\n\tinput: result.input,\n});\n\nexport function isMatch(regex, string, {timeout} = {}) {\n\ttry {\n\t\treturn functionTimeout(() => cloneRegexp(regex).test(string), {timeout})();\n\t} catch (error) {\n\t\tif (isTimeoutError(error)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function firstMatch(regex, string, {timeout} = {}) {\n\ttry {\n\t\tconst result = functionTimeout(() => cloneRegexp(regex).exec(string), {timeout})();\n\n\t\tif (result === null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn resultToMatch(result);\n\t} catch (error) {\n\t\tif (isTimeoutError(error)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function matches(regex, string, {timeout = Number.POSITIVE_INFINITY, matchTimeout = Number.POSITIVE_INFINITY} = {}) {\n\tif (!regex.global) {\n\t\tthrow new Error('The regex must have the global flag, otherwise, use `firstMatch()` instead');\n\t}\n\n\treturn {\n\t\t* [Symbol.iterator]() {\n\t\t\ttry {\n\t\t\t\tconst matches = string.matchAll(regex); // The regex is only executed when iterated over.\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst nextMatch = functionTimeout(() => matches.next(), {timeout: (timeout !== Number.POSITIVE_INFINITY || matchTimeout !== Number.POSITIVE_INFINITY) ? Math.min(timeout, matchTimeout) : undefined}); // `matches.next` must be called within an arrow function so that it doesn't loose its context.\n\n\t\t\t\t\tconst end = timeSpan();\n\t\t\t\t\tconst {value, done} = nextMatch();\n\t\t\t\t\ttimeout -= Math.ceil(end());\n\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tyield resultToMatch(value);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!isTimeoutError(error)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n", "import ipRegex from 'ip-regex';\nimport {isMatch} from 'super-regex';\n\nconst maxIPv4Length = 15;\nconst maxIPv6Length = 45;\n\nconst options = {\n\ttimeout: 400,\n};\n\nexport function isIP(string) {\n\treturn isMatch(ipRegex({exact: true}), string.slice(0, maxIPv6Length), options);\n}\n\nexport function isIPv6(string) {\n\treturn isMatch(ipRegex.v6({exact: true}), string.slice(0, maxIPv6Length), options);\n}\n\nexport function isIPv4(string) {\n\treturn isMatch(ipRegex.v4({exact: true}), string.slice(0, maxIPv4Length), options);\n}\n\nexport function ipVersion(string) {\n\treturn isIP(string) ? (isIPv6(string) ? 6 : 4) : undefined;\n}\n", "export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", null, null, null, "import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}", null, null, "export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}", "\n/* eslint-env browser */\n\nimport { isMultiaddr } from '@multiformats/multiaddr'\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js'\nimport parseDuration from 'parse-duration'\nimport { logger } from '@libp2p/logger'\nimport HTTP from 'ipfs-utils/src/http.js'\nimport mergeOpts from 'merge-options'\nimport { toUrlString } from 'ipfs-core-utils/to-url-string'\nimport getAgent from 'ipfs-core-utils/agent'\n\nconst log = logger('ipfs-http-client:lib:error-handler')\nconst merge = mergeOpts.bind({ ignoreUndefined: true })\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url)\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nexport const errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (/** @type {any} */ err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nexport class Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-expect-error server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.get\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.put\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.delete\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nexport const HTTPError = HTTP.HTTPError\n", "let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['\u00B5s'] =\r\nparse['\u03BCs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n", null, "/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n", null, "import { multiaddr } from '@multiformats/multiaddr'\nimport { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n\n/**\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nexport function toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = multiaddrToUri(multiaddr(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n", "\nexport default () => {}\n", "\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n", "\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n", "import errCode from 'err-code'\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n", "import { modeToString } from './mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((/** @type {any} */ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlist = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlist\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlistForPeer = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlistForPeer\n})\n", null, null, "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((/** @type {string} */ str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createUnwant = configure(api => {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n", "import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createStat } from './stat.js'\nimport { createUnwant } from './unwant.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBitswap (config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {BlockAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return new Uint8Array(await res.arrayBuffer())\n  }\n  return get\n})\n", "import errCode from 'err-code'\nimport itPeekable from 'it-peekable'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport all from 'it-all'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream\n} from './utils.js'\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n", "/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nexport function isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nexport function isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nexport function isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nexport const isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n", "import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if (isBytes(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n", "import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n", "/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n", "import { normaliseContent } from './normalise-content.browser.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nexport function normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return normaliseCandidateMultiple(input, normaliseContent, true)\n}\n", "\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n", "\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nimport { normaliseInput } from './files/normalise-input-multiple.browser.js'\nimport { modeToString } from './mode-to-string.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nexport async function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n", "import { anySignal } from 'any-signal'\n\n/**\n * @param {any[]} signals\n * @returns {AbortSignal[]}\n */\nfunction filter (signals) {\n  return signals.filter(Boolean)\n}\n\n/**\n * @param  {...AbortSignal|undefined} signals\n */\nexport function abortSignal (...signals) {\n  return anySignal(filter(signals))\n}\n", "import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (/** @type {any} */ err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface (removed) {\n  /** @type {RmResult} */\n  const out = {\n    cid: CID.parse(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BlockAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Key), size: data.Size }\n  }\n\n  return stat\n})\n", "import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBlock (config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createAdd = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  async function add (addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return add\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createClear = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return clear\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return list\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createReset = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return reset\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"rm\"]}\n   */\n  async function rm (addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return rm\n})\n", "import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBootstrap (config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  }\n}\n", "import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createApply = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n", "\n/**\n * Convert object properties to camel case.\n * NOT recursive!\n * e.g.\n * AgentVersion => agentVersion\n * ID => id\n *\n * @param {Record<string, any>} obj\n */\nexport function objectToCamel (obj) {\n  if (obj == null) {\n    return obj\n  }\n\n  const caps = /^[A-Z]+$/\n\n  /** @type {Record<string, any>} */\n  const output = {}\n\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) { // all caps\n      camelObj[k.toLowerCase()] = obj[k]\n    } else if (caps.test(k[0])) { // pascal\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\n    } else {\n      camelObj[k] = obj[k]\n    }\n    return camelObj\n  }, output)\n}\n", "import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => objectToCamel(profile))\n  }\n  return list\n})\n", "import { createApply } from './apply.js'\nimport { createList } from './list.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createProfiles (config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGetAll = configure(api => {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data\n  }\n\n  return getAll\n})\n", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createReplace = configure(api => {\n  /**\n   * @type {ConfigAPI[\"replace\"]}\n   */\n  const replace = async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n\n  return replace\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createSet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"set\"]}\n   */\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type')\n    }\n\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n\n  return set\n})\n\n/**\n * @param {*} key\n * @param {*} value\n */\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return { arg: [key, value.toString()], bool: true }\n    case 'string':\n      return { arg: [key, value] }\n    default:\n      return { arg: [key, JSON.stringify(value)], json: true }\n  }\n}\n", "import { createProfiles } from './profiles/index.js'\nimport { createGet } from './get.js'\nimport { createGetAll } from './get-all.js'\nimport { createReplace } from './replace.js'\nimport { createSet } from './set.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createConfig (config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n", "import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nexport async function * resolve (cid, path, codecs, getBlock, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await getBlock(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    const cid = CID.asCID(value)\n\n    if (cid) {\n      lastCid = cid\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { resolve } from '../lib/resolve.js'\nimport first from 'it-first'\nimport last from 'it-last'\nimport errCode from 'err-code'\nimport { createGet as createBlockGet } from '../block/get.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts)\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve\n          ? await first(resolve(cid, options.path, codecs, getBlock, options))\n          : await last(resolve(cid, options.path, codecs, getBlock, options))\n        /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n        const result = (entry)\n\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n        }\n\n        return result\n      }\n\n      const codec = await codecs.getCodec(cid.code)\n      const block = await getBlock(cid, options)\n      const node = codec.decode(block)\n\n      return {\n        value: node,\n        remainderPath: ''\n      }\n    }\n\n    return get\n  })\n\n  return fn(options)\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function * dagImport (source, options = {}) {\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body } = await multipartRequest(source, controller, options.headers)\n\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    })\n\n    for await (const { Root } of res.ndjson()) {\n      if (Root !== undefined) {\n        const { Cid: { '/': Cid }, PinErrorMsg } = Root\n\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        }\n      }\n    }\n  }\n\n  return dagImport\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    /**\n     * @type {DAGAPI[\"put\"]}\n     */\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      }\n\n      let serialized\n\n      if (settings.inputCodec) {\n        // if you supply an inputCodec, we assume you're passing in a raw, encoded\n        // block using that codec, so we'll just pass that on to the server and let\n        // it deal with the decode/encode/store cycle\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        serialized = dagNode\n      } else {\n        // if you don't supply an inputCodec, we assume you've passed in a JavaScript\n        // object you want to have encoded using storeCodec, so we'll prepare it for\n        // you if we have the codec\n        const storeCodec = await codecs.getCodec(settings.storeCodec)\n        serialized = storeCodec.encode(dagNode)\n        // now we have a serialized form, the server should be told to receive it\n        // in that format\n        settings.inputCodec = settings.storeCodec\n      }\n\n      // allow aborting requests on body errors\n      const controller = new AbortController()\n      const signal = abortSignal(controller.signal, settings.signal)\n\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...(\n          await multipartRequest([serialized], controller, settings.headers)\n        )\n      })\n      const data = await res.json()\n\n      return CID.parse(data.Cid['/'])\n    }\n\n    return put\n  })\n\n  return fn(options)\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n", "import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createDag (codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  }\n}\n", "\n// Response types are defined here =\n// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24\nexport const SendingQuery = 0\nexport const PeerResponse = 1\nexport const FinalPeer = 2\nexport const QueryError = 3\nexport const Provider = 4\nexport const Value = 5\nexport const AddingPeer = 6\nexport const DialingPeer = 7\n", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport {\n  SendingQuery,\n  PeerResponse,\n  FinalPeer,\n  QueryError,\n  Provider,\n  Value,\n  AddingPeer,\n  DialingPeer\n} from './response-types.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {{Type: number, ID: string, Extra: string, Responses: {ID: string, Addrs: string[]}[]}} event\n * @returns {import('ipfs-core-types/src/dht').QueryEvent}\n */\nexport const mapEvent = (event) => {\n  if (event.Type === SendingQuery) {\n    return {\n      name: 'SENDING_QUERY',\n      type: event.Type\n    }\n  }\n\n  if (event.Type === PeerResponse) {\n    return {\n      from: peerIdFromString(event.ID),\n      name: 'PEER_RESPONSE',\n      type: event.Type,\n      // TODO: how to infer this from the go-ipfs response\n      messageType: 0,\n      // TODO: how to infer this from the go-ipfs response\n      messageName: 'PUT_VALUE',\n      closer: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] })),\n      providers: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n      // TODO: how to infer this from the go-ipfs response\n      // record: ???\n    }\n  }\n\n  if (event.Type === FinalPeer) {\n    // dht.query ends with a FinalPeer event with no Responses\n    /** @type {import('@libp2p/interface-peer-info').PeerInfo} */\n    let peer = {\n      // @ts-expect-error go-ipfs does not return this\n      id: event.ID ?? peerIdFromString(event.ID),\n      /** @type {Multiaddr[]} */\n      multiaddrs: [],\n      protocols: []\n    }\n\n    if (event.Responses && event.Responses.length) {\n      // dht.findPeer has the result in the Responses field\n      peer = {\n        id: peerIdFromString(event.Responses[0].ID),\n        multiaddrs: event.Responses[0].Addrs.map(addr => multiaddr(addr)),\n        protocols: []\n      }\n    }\n\n    return {\n      name: 'FINAL_PEER',\n      type: event.Type,\n      peer\n    }\n  }\n\n  if (event.Type === QueryError) {\n    return {\n      name: 'QUERY_ERROR',\n      type: event.Type,\n      error: new Error(event.Extra)\n    }\n  }\n\n  if (event.Type === Provider) {\n    return {\n      name: 'PROVIDER',\n      type: event.Type,\n      providers: event.Responses.map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n    }\n  }\n\n  if (event.Type === Value) {\n    return {\n      name: 'VALUE',\n      type: event.Type,\n      value: uint8ArrayFromString(event.Extra, 'base64pad')\n    }\n  }\n\n  if (event.Type === AddingPeer) {\n    const peers = event.Responses.map(({ ID }) => peerIdFromString(ID))\n\n    if (!peers.length) {\n      throw new Error('No peer found')\n    }\n\n    return {\n      name: 'ADDING_PEER',\n      type: event.Type,\n      peer: peers[0]\n    }\n  }\n\n  if (event.Type === DialingPeer) {\n    return {\n      name: 'DIALING_PEER',\n      type: event.Type,\n      peer: peerIdFromString(event.ID)\n    }\n  }\n\n  throw new Error('Unknown DHT event type')\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindPeer = configure(api => {\n  /**\n   * @type {DHTAPI[\"findPeer\"]}\n   */\n  async function * findPeer (peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findPeer\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindProvs = configure(api => {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  async function * findProvs (cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findProvs\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function * get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return get\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...(\n        await multipartRequest([value], controller, options.headers)\n      )\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return put\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createQuery = configure(api => {\n  /**\n   * @type {DHTAPI[\"query\"]}\n   */\n  async function * query (peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return query\n})\n", "import { createFindPeer } from './find-peer.js'\nimport { createFindProvs } from './find-provs.js'\nimport { createGet } from './get.js'\nimport { createProvide } from './provide.js'\nimport { createPut } from './put.js'\nimport { createQuery } from './query.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDht (config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createCmds = configure(api => {\n  /**\n   * @type {DiagAPI[\"cmds\"]}\n   */\n  async function cmds (options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return cmds\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createNet = configure(api => {\n  /**\n   * @type {DiagAPI[\"net\"]}\n   */\n  async function net (options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    return res.json()\n  }\n  return net\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createSys = configure(api => {\n  /**\n   * @type {DiagAPI[\"sys\"]}\n   */\n  async function sys (options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return sys\n})\n", "import { createCmds } from './cmds.js'\nimport { createNet } from './net.js'\nimport { createSys } from './sys.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDiag (config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createCp = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createFlush = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return CID.parse(data.Cid)\n  }\n  return flush\n})\n", "import { objectToCamel } from './object-to-camel.js'\n\n/**\n * @param {Record<string, any>} entry\n */\nexport function objectToCamelWithMetadata (entry) {\n  const file = objectToCamel(entry)\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\n    file.mode = parseInt(file.mode, 8)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\n    file.mtime = {\n      secs: file.mtime,\n      nsecs: file.mtimeNsecs || 0\n    }\n\n    delete file.mtimeNsecs\n  }\n\n  return file\n}\n", "import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\nexport const createLs = configure(api => {\n  /**\n   * @type {FilesAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path')\n    }\n\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${path}` : path,\n        // default long to true, diverges from go-ipfs where its false by default\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      // go-ipfs does not yet support the \"stream\" option\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry))\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result))\n      }\n    }\n  }\n  return ls\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash)\n  }\n\n  delete entry.hash\n\n  entry.type = entry.type === 1 ? 'directory' : 'file'\n\n  return entry\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMkdir = configure(api => {\n  /**\n   * @type {FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir (path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return mkdir\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMv = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {FilesAPI[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const body = await res.text()\n    // we don't expect text body to be ever present\n    // (if so, it means an error such as https://github.com/ipfs/go-ipfs/issues/8606)\n    if (body !== '') {\n      /** @type {Error} */\n      const error = new HTTP.HTTPError(res)\n      error.message = body\n      throw error\n    }\n  }\n  return rm\n})\n", "import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {FilesAPI[\"stat\"]}\n   */\n  async function stat (path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    data.WithLocality = data.WithLocality || false\n    return toCoreInterface(objectToCamelWithMetadata(data))\n  }\n  return stat\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  entry.cid = CID.parse(entry.hash)\n  delete entry.hash\n  return entry\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createTouch = configure(api => {\n  /**\n   * @type {FilesAPI[\"touch\"]}\n   */\n  async function touch (path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return touch\n})\n", "import { modeToString } from '../lib/mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createWrite = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n", "import { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createLs } from './ls.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRead } from './read.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\nimport { createTouch } from './touch.js'\nimport { createWrite } from './write.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createFiles (config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options = { type: 'Ed25519' }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return gen\n})\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n", "import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Keys || []).map((/** @type {any} **/ k) => objectToCamel(k))\n  }\n  return list\n})\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRename = configure(api => {\n  /**\n   * @type {KeyAPI[\"rename\"]}\n   */\n  async function rename (oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return rename\n})\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data.Keys[0])\n  }\n  return rm\n})\n", "import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createKey (config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  }\n}\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLevel = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  async function level (subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return level\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n    return data.Strings\n  }\n  return ls\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createTail = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  async function * tail (options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return tail\n})\n", "import { createLevel } from './level.js'\nimport { createLs } from './ls.js'\nimport { createTail } from './tail.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createLog (config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  }\n}\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish (path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return publish\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n", "import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return cancel\n})\n", "import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createState = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return state\n})\n", "import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createSubs = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  async function subs (options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Strings || []\n  }\n  return subs\n})\n", "import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPubsub (config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  }\n}\n", "import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { createPubsub } from './pubsub/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createName (config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  }\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n  return data\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ObjectAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map((/** @type {any} */ link) => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    }\n  }\n  return get\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createLinks = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createNew = configure(api => {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  async function newObject (options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return newObject\n})\n", "import { configure } from '../lib/configure.js'\nimport { createPut as createDagPut } from '../dag/put.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = createDagPut(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const output = await res.json()\n\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    }\n  }\n  return stat\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAddLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"addLink\"]}\n   */\n  async function addLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || '',\n          // @ts-expect-error loose types\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n\n  return addLink\n})\n", "import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAppendData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return appendData\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createRmLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return rmLink\n})\n", "import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createSetData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return setData\n})\n", "import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPatch (config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  }\n}\n", "import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { createPatch } from './patch/index.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createObject (codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  }\n}\n", "import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n    if (first.done) return iterator\n\n    // Iterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<{ cid: CID recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (Symbol.asyncIterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createAddAll = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n", "import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createAdd (config) {\n  const all = createAddAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return add\n  })(config)\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {string} type\n * @param {string} cid\n * @param {Record<string, string>} metadata\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  }\n\n  if (metadata) {\n    pin.metadata = metadata\n  }\n\n  return pin\n}\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PinAPI[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {any[]} */\n    let paths = []\n\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths]\n    }\n\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${path}`),\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) { // non-streaming response\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata)\n        }\n        return\n      }\n\n      yield toPin(pin.Type, pin.Cid, pin.Metadata)\n    }\n  }\n  return ls\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createRmAll = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n", "import { createRmAll } from './rm-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport const createRm = (config) => {\n  const all = createRmAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    async function rm (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return rm\n  })(config)\n}\n", "import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport const encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport const encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport const encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport const encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n", "import { encodeAddParams, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  async function add (cid, { timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({ cid, ...query })\n    })\n\n    return decodePin(await response.json())\n  }\n\n  return add\n}\n", "import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n", "import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningAPI[\"rm\"]}\n   */\n  async function rm ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    })\n  }\n\n  return rm\n}\n", "import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRmAll (client) {\n  /**\n   * @type {RemotePiningAPI[\"rmAll\"]}\n   */\n  async function rmAll ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    })\n  }\n\n  return rmAll\n}\n", "/**\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n */\n\n/**\n * @param {URL} url\n */\nexport function encodeEndpoint (url) {\n  const href = String(url)\n  if (href === 'undefined') {\n    throw Error('endpoint is required')\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n}\n\n/**\n * @param {any} json\n * @returns {RemotePinServiceWithStat}\n */\nexport function decodeRemoteService (json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...(json.Stat && { stat: decodeStat(json.Stat) })\n  }\n}\n\n/**\n * @param {any} json\n * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n */\nexport function decodeStat (json) {\n  switch (json.Status) {\n    case 'valid': {\n      const { Pinning, Pinned, Queued, Failed } = json.PinCount\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      }\n    }\n    case 'invalid': {\n      return { status: 'invalid' }\n    }\n    default: {\n      return { status: json.Status }\n    }\n  }\n}\n", "import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { encodeEndpoint } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  async function add (name, options) {\n    const { endpoint, key, headers, timeout, signal } = options\n\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, encodeEndpoint(endpoint), key]\n      }),\n      headers\n    })\n  }\n\n  return add\n}\n", "import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { decodeRemoteService } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const { stat, headers, timeout, signal } = options\n\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    })\n\n    /** @type {{RemoteServices: object[]}} */\n    const { RemoteServices } = await response.json()\n\n    return RemoteServices.map(decodeRemoteService)\n  }\n\n  return ls\n}\n", "import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n", "import { Client } from '../../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../../../types').Options} config\n */\nexport function createService (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  }\n}\n", "import { Client } from '../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\nimport { createService } from './service/index.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createRemote (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  }\n}\n", "import { createAddAll } from './add-all.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRmAll } from './rm-all.js'\nimport { createRm } from './rm.js'\nimport { createRemote } from './remote/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPin (config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  }\n}\n", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { Strings } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return rpcArrayToTextArray(Strings) || []\n  }\n  return ls\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return peers\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return publish\n})\n", "import { logger } from '@libp2p/logger'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc, rpcToText, rpcToBytes, rpcToBigInt } from '../lib/http-rpc-wire-format.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\nconst log = logger('ipfs-http-client:pubsub:subscribe')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {(err: Error, fatal: boolean, msg?: Message) => void} ErrorHandlerFn\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions & { onError?: ErrorHandlerFn }>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createSubscribe = (options, subsTracker) => {\n  return configure((api) => {\n    /**\n     * @type {PubsubAPI[\"subscribe\"]}\n     */\n    async function subscribe (topic, handler, options = {}) { // eslint-disable-line require-await\n      options.signal = subsTracker.subscribe(topic, handler, options.signal)\n\n      /** @type {(value?: any) => void} */\n      let done\n      /** @type {(error: Error) => void} */\n      let fail\n\n      const result = new Promise((resolve, reject) => {\n        done = resolve\n        fail = reject\n      })\n\n      // In Firefox, the initial call to fetch does not resolve until some data\n      // is received. If this doesn't happen within 1 second assume success\n      const ffWorkaround = setTimeout(() => done(), 1000)\n\n      // Do this async to not block Firefox\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      })\n        .catch((err) => {\n          // Initial subscribe fail, ensure we clean up\n          subsTracker.unsubscribe(topic, handler)\n\n          fail(err)\n        })\n        .then((response) => {\n          clearTimeout(ffWorkaround)\n\n          if (!response) {\n            // if there was no response, the subscribe failed\n            return\n          }\n\n          readMessages(response, {\n            onMessage: (message) => {\n              if (!handler) {\n                return\n              }\n\n              if (typeof handler === 'function') {\n                handler(message)\n                return\n              }\n\n              if (typeof handler.handleEvent === 'function') {\n                handler.handleEvent(message)\n              }\n            },\n            onEnd: () => subsTracker.unsubscribe(topic, handler),\n            onError: options.onError\n          })\n\n          done()\n        })\n\n      return result\n    }\n    return subscribe\n  })(options)\n}\n\n/**\n * @param {import('ipfs-utils/src/types').ExtendedResponse} response\n * @param {object} options\n * @param {(message: Message) => void} options.onMessage\n * @param {() => void} options.onEnd\n * @param {ErrorHandlerFn} [options.onError]\n */\nasync function readMessages (response, { onMessage, onEnd, onError }) {\n  onError = onError || log\n\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue\n        }\n\n        if (msg.from != null && msg.seqno != null) {\n          onMessage({\n            type: 'signed',\n            from: peerIdFromString(msg.from),\n            data: rpcToBytes(msg.data),\n            sequenceNumber: rpcToBigInt(msg.seqno),\n            topic: rpcToText(msg.topicIDs[0]),\n            key: rpcToBytes(msg.key ?? 'u'),\n            signature: rpcToBytes(msg.signature ?? 'u')\n          })\n        } else {\n          onMessage({\n            type: 'unsigned',\n            data: rpcToBytes(msg.data),\n            topic: rpcToText(msg.topicIDs[0])\n          })\n        }\n      } catch (/** @type {any} */ err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`\n        onError(err, false, msg) // Not fatal\n      }\n    }\n  } catch (/** @type {any} */ err) {\n    if (!isAbortError(err)) {\n      onError(err, true) // Fatal\n    }\n  } finally {\n    onEnd()\n  }\n}\n\n/**\n * @param {Error & {type?:string}} error\n * @returns {boolean}\n */\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true\n    // It is `abort` in Electron instead of `aborted`\n    case 'abort':\n      return true\n    default:\n      // FIXME: In testing with Chrome, err.type is undefined (should not be!)\n      // Temporarily use the name property instead.\n      return error.name === 'AbortError'\n  }\n}\n", "\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createUnsubscribe = (options, subsTracker) => {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler) {\n    subsTracker.unsubscribe(topic, handler)\n  }\n  return unsubscribe\n}\n", "\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport class SubscriptionTracker {\n  constructor () {\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map()\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  subscribe (topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || []\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\n    }\n\n    return controller.signal\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} [handler]\n   */\n  unsubscribe (topic, handler) {\n    const subs = this._subs.get(topic) || []\n    let unsubs\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => s.controller.abort())\n  }\n}\n", "import { createLs } from './ls.js'\nimport { createPeers } from './peers.js'\nimport { createPublish } from './publish.js'\nimport { createSubscribe } from './subscribe.js'\nimport { createUnsubscribe } from './unsubscribe.js'\nimport { SubscriptionTracker } from './subscription-tracker.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPubsub (config) {\n  const subscriptionTracker = new SubscriptionTracker()\n\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  }\n}\n", "import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createLocal = configure(api => {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: objectToCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return refsLocal\n})\n", "import { CID } from 'multiformats/cid'\nimport { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { createLocal } from './local.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createRefs = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function * (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args]\n\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  })\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n", "import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createRepo (config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  }\n}\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nexport const createBw = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n", "import { createStat as createBitswap } from '../bitswap/stat.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createBw } from './bw.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createStats (config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  }\n}\n", "import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  async function addrs (options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Addrs: Record<string, string[]> }} */\n    const { Addrs } = await res.json()\n\n    return Object.keys(Addrs).map(id => ({\n      id: peerIdFromString(id),\n      addrs: (Addrs[id] || []).map(a => multiaddr(a))\n    }))\n  }\n  return addrs\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createConnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"connect\"]}\n   */\n  async function connect (addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return connect\n})\n", "import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createDisconnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return disconnect\n})\n", "import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createLocalAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Strings: string[] }} */\n    const { Strings } = await res.json()\n\n    return (Strings || []).map(a => multiaddr(a))\n  }\n  return localAddrs\n})\n", "import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */\n    const { Peers } = await res.json()\n\n    return (Peers || []).map(peer => {\n      return {\n        addr: multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n  return peers\n})\n", "import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createSwarm (config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  }\n}\n", "import { CID } from 'multiformats/cid'\nimport { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { abortSignal } from './lib/abort-signal.js'\n\n/**\n * @typedef {import('ipfs-utils/src/types').ProgressFn} IPFSUtilsHttpUploadProgressFn\n * @typedef {import('ipfs-core-types/src/root').AddProgressFn} IPFSCoreAddProgressFn\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n * @typedef {import('ipfs-core-types/src/root').AddResult} AddResult\n */\n\nexport const createAddAll = configure((api) => {\n  /**\n   * @type {RootAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body, total, parts } =\n      await multipartRequest(source, controller, options.headers)\n\n    // In browser response body only starts streaming once upload is\n    // complete, at which point all the progress updates are invalid. If\n    // length of the content is computable we can interpret progress from\n    // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`\n    // in which case we disable progress updates to be written out.\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function'\n      ? createProgressHandler(total, parts, options.progress)\n      : [undefined, undefined]\n\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    })\n\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file)\n\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file)\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name)\n      }\n    }\n  }\n  return addAll\n})\n\n/**\n * Returns simple progress callback when content length isn't computable or a\n * progress event handler that calculates progress from upload progress events.\n *\n * @param {number} total\n * @param {{name:string, start:number, end:number}[]|null} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}\n */\nconst createProgressHandler = (total, parts, progress) =>\n  parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined]\n\n/**\n * Creates a progress handler that interpolates progress from upload progress\n * events and total size of the content that is added.\n *\n * @param {number} size - actual content size\n * @param {{name:string, start:number, end:number}[]} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {IPFSUtilsHttpUploadProgressFn}\n */\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0\n  const count = parts.length\n  return ({ loaded, total }) => {\n    // Derive position from the current progress.\n    const position = Math.floor(loaded / total * size)\n    while (index < count) {\n      const { start, end, name } = parts[index]\n      // If within current part range report progress and break the loop\n      if (position < end) {\n        progress(position - start, name)\n        break\n      // If passed current part range report final byte for the chunk and\n      // move to next one.\n      } else {\n        progress(end - start, name)\n        index += 1\n      }\n    }\n  }\n}\n\n/**\n * @param {object} input\n * @param {string} input.name\n * @param {string} input.hash\n * @param {string} input.size\n * @param {string} [input.mode]\n * @param {number} [input.mtime]\n * @param {number} [input.mtimeNsecs]\n */\nfunction toCoreInterface ({ name, hash, size, mode, mtime, mtimeNsecs }) {\n  /** @type {AddResult} */\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  }\n\n  if (mode != null) {\n    output.mode = parseInt(mode, 8)\n  }\n\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    }\n  }\n\n  return output\n}\n", "import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from './lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport function createAdd (options) {\n  const all = createAddAll(options)\n  return configure(() => {\n    /**\n     * @type {RootAPI[\"add\"]}\n     */\n    async function add (input, options = {}) {\n      // @ts-expect-error - last may return undefined if source is empty\n      return await last(all(normaliseInput(input), options))\n    }\n    return add\n  })(options)\n}\n", "import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport blobToIt from 'blob-to-it'\nimport itPeekable from 'it-peekable'\nimport all from 'it-all'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js'\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    return blobToIt(input)\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n", "import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    // @ts-expect-error it's (async)iterable\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n", "import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateSingle(input, normaliseContent)\n}\n", "import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCat = configure(api => {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return cat\n})\n", "import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCommands = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n", "import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n", "import { configure } from './lib/configure.js'\n\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '')\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    }\n  }\n})\n", "import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n", "import { objectToCamel } from './lib/object-to-camel.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createId = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id (options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...objectToCamel(data)\n    }\n\n    output.id = peerIdFromString(output.id)\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map((/** @type {string} */ ma) => multiaddr(ma))\n    }\n\n    // @ts-expect-error server output is not typed\n    return output\n  }\n  return id\n})\n", "import { createId } from './id.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport const createIsOnline = options => {\n  const id = createId(options)\n\n  /**\n   * @type {RootAPI[\"isOnline\"]}\n   */\n  async function isOnline (options = {}) {\n    const res = await id(options)\n\n    return Boolean(res && res.addresses && res.addresses.length)\n  }\n  return isOnline\n}\n", "import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { createStat } from './files/stat.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createLs = configure((api, opts) => {\n  /**\n   * @type {RootAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    const pathStr = `${path instanceof Uint8Array ? CID.decode(path) : path}`\n\n    /**\n     * @param {*} link\n     */\n    async function mapLink (link) {\n      let hash = link.Hash\n\n      if (hash.includes('/')) {\n        // the hash is a path, but we need the CID\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\n        const stats = await createStat(opts)(ipfsPath)\n\n        hash = stats.cid\n      } else {\n        hash = CID.parse(hash)\n      }\n\n      /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      }\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8)\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        }\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs\n        }\n      }\n\n      return entry\n    }\n\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      const links = result.Links\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      if (!links.length) {\n        // no links, this is a file, yield a single result\n        yield mapLink(result)\n\n        return\n      }\n\n      yield * links.map(mapLink)\n    }\n  }\n  return ls\n})\n\n/**\n * @param {any} link\n */\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'file'\n  }\n}\n", "import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createMount = configure(api => {\n  /**\n   * @type {RootAPI[\"mount\"]}\n   */\n  async function mount (options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return mount\n})\n", "import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createPing = configure(api => {\n  /**\n   * @type {RootAPI[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n  return ping\n})\n", "import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  async function resolve (path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Path } = await res.json()\n    return Path\n  }\n  return resolve\n})\n", "import { configure } from './lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStart = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n", "import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n", "import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RootAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    }\n  }\n\n  return version\n})\n", "/* eslint-env browser */\n\nimport { Multibases } from 'ipfs-core-utils/multibases'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { createBitswap } from './bitswap/index.js'\nimport { createBlock } from './block/index.js'\nimport { createBootstrap } from './bootstrap/index.js'\nimport { createConfig } from './config/index.js'\nimport { createDag } from './dag/index.js'\nimport { createDht } from './dht/index.js'\nimport { createDiag } from './diag/index.js'\nimport { createFiles } from './files/index.js'\nimport { createKey } from './key/index.js'\nimport { createLog } from './log/index.js'\nimport { createName } from './name/index.js'\nimport { createObject } from './object/index.js'\nimport { createPin } from './pin/index.js'\nimport { createPubsub } from './pubsub/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createRepo } from './repo/index.js'\nimport { createStats } from './stats/index.js'\nimport { createSwarm } from './swarm/index.js'\nimport { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createCat } from './cat.js'\nimport { createCommands } from './commands.js'\nimport { createDns } from './dns.js'\nimport { createGetEndpointConfig } from './get-endpoint-config.js'\nimport { createGet } from './get.js'\nimport { createId } from './id.js'\nimport { createIsOnline } from './is-online.js'\nimport { createLs } from './ls.js'\nimport { createMount } from './mount.js'\nimport { createPing } from './ping.js'\nimport { createResolve } from './resolve.js'\nimport { createStart } from './start.js'\nimport { createStop } from './stop.js'\nimport { createVersion } from './version.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\n\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('./types').EndpointConfig} EndpointConfig\n * @typedef {import('./types').IPFSHTTPClient} IPFSHTTPClient\n */\n\n/**\n * @param {Options} options\n */\nexport function create (options = {}) {\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {MultibaseCodec[]} */\n  const multibaseCodecs = Object.values(bases);\n\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  })\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  /** @type {MultihashHasher[]} */\n  const multihashHashers = Object.values(hashes);\n\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  })\n\n  /** @type {IPFSHTTPClient} */\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  }\n\n  return client\n}\n\nexport { CID } from 'multiformats/cid'\nexport { multiaddr } from '@multiformats/multiaddr'\nexport { default as urlSource } from 'ipfs-utils/src/files/url-source.js'\nexport const globSource = globSourceImport\n"],
  "mappings": ";;;;;;;;AAAA;AAAA,8CAAAA,UAAAC,SAAA;AAAA,IAAAA,QAAO,UAAUC;AAEjB,QAAIC,OAAM;AAAV,QACIC,QAAO;AADX,QAEIC,UAAS,CAACD;AAFd,QAGIE,OAAM,KAAK,IAAI,GAAG,EAAE;AAExB,aAASJ,SAAO,KAAK,KAAK,QAAQ;AAChC,UAAI,OAAO,oBAAoB,MAAM,OAAO,kBAAkB;AAC5D,QAAAA,SAAO,QAAQ;AACf,cAAM,IAAI,WAAW,yBAAyB;AAAA,MAChD;AACA,YAAM,OAAO,CAAC;AACd,eAAS,UAAU;AACnB,UAAI,YAAY;AAEhB,aAAM,OAAOI,MAAK;AAChB,YAAI,YAAa,MAAM,MAAQH;AAC/B,eAAO;AAAA,MACT;AACA,aAAM,MAAME,SAAQ;AAClB,YAAI,YAAa,MAAM,MAAQF;AAC/B,iBAAS;AAAA,MACX;AACA,UAAI,UAAU,MAAM;AAEpB,MAAAD,SAAO,QAAQ,SAAS,YAAY;AAEpC,aAAO;AAAA,IACT;AAAA;AAAA;;;AC7BA;AAAA,8CAAAK,UAAAC,SAAA;AAAA,IAAAA,QAAO,UAAUC;AAEjB,QAAIC,OAAM;AAAV,QACIC,QAAO;AAEX,aAASF,MAAKG,MAAK,QAAQ;AACzB,UAAI,MAAS,GACT,SAAS,UAAU,GACnB,QAAS,GACT,UAAU,QACV,GACA,IAAIA,KAAI;AAEZ,SAAG;AACD,YAAI,WAAW,KAAK,QAAQ,IAAI;AAC9B,UAAAH,MAAK,QAAQ;AACb,gBAAM,IAAI,WAAW,yBAAyB;AAAA,QAChD;AACA,YAAIG,KAAI;AACR,eAAO,QAAQ,MACV,IAAID,UAAS,SACb,IAAIA,SAAQ,KAAK,IAAI,GAAG,KAAK;AAClC,iBAAS;AAAA,MACX,SAAS,KAAKD;AAEd,MAAAD,MAAK,QAAQ,UAAU;AAEvB,aAAO;AAAA,IACT;AAAA;AAAA;;;AC5BA;AAAA,8CAAAI,UAAAC,SAAA;AACA,QAAIC,MAAK,KAAK,IAAI,GAAI,CAAC;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AAEvB,IAAAT,QAAO,UAAU,SAAU,OAAO;AAChC,aACE,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACb,QAAQC,MAAK,IACA;AAAA,IAEjB;AAAA;AAAA;;;ACxBA;AAAA,6CAAAC,UAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU;AAAA,MACb,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACpB;AAAA;AAAA;;;ACJA;AAAA,+CAAAC,UAAAC,SAAA;AAAA;AAcA,aAAS,OAAO,KAAK,OAAO;AACxB,iBAAW,OAAO,OAAO;AACrB,eAAO,eAAe,KAAK,KAAK;AAAA,UAC5B,OAAO,MAAM;AAAA,UACb,YAAY;AAAA,UACZ,cAAc;AAAA,QAClB,CAAC;AAAA,MACL;AAEA,aAAO;AAAA,IACX;AASA,aAAS,YAAY,KAAKC,OAAM,OAAO;AACnC,UAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACjC,cAAM,IAAI,UAAU,kCAAkC;AAAA,MAC1D;AAEA,UAAI,CAAC,OAAO;AACR,gBAAQ,CAAC;AAAA,MACb;AAEA,UAAI,OAAOA,UAAS,UAAU;AAC1B,gBAAQA;AACR,QAAAA,QAAO;AAAA,MACX;AAEA,UAAIA,OAAM;AACN,cAAM,OAAOA;AAAA,MACjB;AAEA,UAAI;AACA,eAAO,OAAO,KAAK,KAAK;AAAA,MAC5B,SAAS,GAAP;AACE,cAAM,UAAU,IAAI;AACpB,cAAM,QAAQ,IAAI;AAElB,cAAM,WAAW,WAAY;AAAA,QAAC;AAE9B,iBAAS,YAAY,OAAO,OAAO,OAAO,eAAe,GAAG,CAAC;AAG7D,cAAM,SAAS,OAAO,IAAI,SAAS,GAAG,KAAK;AAE3C,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,IAAAD,QAAO,UAAU;AAAA;AAAA;;;ACpEjB;AAAA,kDAAAE,UAAAC,SAAA;AACA,aAAS,aAAa;AAElB,UAAI,OAAO,WAAW,eAAe,OAAO,OAAO,YAAY,YAAY,OAAO,QAAQ,SAAS,YAAY;AAC3G,eAAO;AAAA,MACX;AAGA,UAAI,OAAO,YAAY,eAAe,OAAO,QAAQ,aAAa,YAAY,CAAC,CAAC,QAAQ,SAAS,UAAU;AACvG,eAAO;AAAA,MACX;AAGA,UAAI,OAAO,cAAc,YAAY,OAAO,UAAU,cAAc,YAAY,UAAU,UAAU,QAAQ,UAAU,KAAK,GAAG;AAC1H,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAEA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACpBjB;AAAA,mDAAAC,UAAAC,SAAA;AAAA;AACA,QAAM,aAAa;AAEnB,QAAM,kBAAkB,OAAO,WAAW,YAAY,OAAO,aAAa,YAAY,SAAS,aAAa;AAE5G,QAAM,cAAc,WAAW;AAC/B,QAAM,aAAa,mBAAmB,CAAC;AACvC,QAAM,mBAAmB,eAAe,CAAC;AACzC,QAAM,uBAAuB,eAAe;AAC5C,QAAM,UAAU,OAAO,cAAY,cAAc,OAAO,YAAY,eAAe,OAAO,QAAQ,YAAY,eAAe,QAAQ,QAAQ,SAAS,UAAU,CAAC;AAEjK,QAAM,eAAe,OAAO,kBAAkB,cAAc,OAAO,SAAS,eAAe,OAAO,sBAAsB,eAAe,gBAAgB;AACvJ,QAAM,UAAU,OAAO,YAAY,eAAe,OAAO,QAAQ,QAAQ,eAAe;AACxF,QAAM,kBAAkB,OAAO,cAAc,eAAe,UAAU,YAAY;AAElF,IAAAA,QAAO,UAAU;AAAA,MACf,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,QAAQ;AAAA,MAIR,WAAW;AAAA,MACX,aAAa;AAAA,MACb,cAAc;AAAA,MACd,eAAe;AAAA,IACjB;AAAA;AAAA;;;AC5BA;AAAA,qEAAAC,UAAAC,SAAA;AAIA,QAAI,IAAI;AACR,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AACZ,QAAI,IAAI,IAAI;AAgBZ,IAAAA,QAAO,UAAU,SAAS,KAAKC,UAAS;AACtC,MAAAA,WAAUA,YAAW,CAAC;AACtB,UAAI,OAAO,OAAO;AAClB,UAAI,SAAS,YAAY,IAAI,SAAS,GAAG;AACvC,eAAOC,OAAM,GAAG;AAAA,MAClB,WAAW,SAAS,YAAY,SAAS,GAAG,GAAG;AAC7C,eAAOD,SAAQ,OAAO,QAAQ,GAAG,IAAI,SAAS,GAAG;AAAA,MACnD;AACA,YAAM,IAAI;AAAA,QACR,0DACE,KAAK,UAAU,GAAG;AAAA,MACtB;AAAA,IACF;AAUA,aAASC,OAAM,KAAK;AAClB,YAAM,OAAO,GAAG;AAChB,UAAI,IAAI,SAAS,KAAK;AACpB;AAAA,MACF;AACA,UAAI,QAAQ,mIAAmI;AAAA,QAC7I;AAAA,MACF;AACA,UAAI,CAAC,OAAO;AACV;AAAA,MACF;AACA,UAAI,IAAI,WAAW,MAAM,EAAE;AAC3B,UAAI,QAAQ,MAAM,MAAM,MAAM,YAAY;AAC1C,cAAQ;AAAA,aACD;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,IAAI;AAAA,aACR;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO;AAAA;AAEP,iBAAO;AAAA;AAAA,IAEb;AAUA,aAAS,SAAS,IAAI;AACpB,UAAI,QAAQ,KAAK,IAAI,EAAE;AACvB,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,UAAI,SAAS,GAAG;AACd,eAAO,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,MAC9B;AACA,aAAO,KAAK;AAAA,IACd;AAUA,aAAS,QAAQ,IAAI;AACnB,UAAI,QAAQ,KAAK,IAAI,EAAE;AACvB,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,KAAK;AAAA,MACnC;AACA,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,MAAM;AAAA,MACpC;AACA,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,QAAQ;AAAA,MACtC;AACA,UAAI,SAAS,GAAG;AACd,eAAO,OAAO,IAAI,OAAO,GAAG,QAAQ;AAAA,MACtC;AACA,aAAO,KAAK;AAAA,IACd;AAMA,aAAS,OAAO,IAAI,OAAO,GAAGC,OAAM;AAClC,UAAI,WAAW,SAAS,IAAI;AAC5B,aAAO,KAAK,MAAM,KAAK,CAAC,IAAI,MAAMA,SAAQ,WAAW,MAAM;AAAA,IAC7D;AAAA;AAAA;;;ACjKA;AAAA,6EAAAC,UAAAC,SAAA;AAMA,aAAS,MAAM,KAAK;AACnB,kBAAY,QAAQ;AACpB,kBAAY,UAAU;AACtB,kBAAY,SAASC;AACrB,kBAAY,UAAU;AACtB,kBAAY,SAAS;AACrB,kBAAY,UAAU;AACtB,kBAAY,WAAW;AACvB,kBAAY,UAAU;AAEtB,aAAO,KAAK,GAAG,EAAE,QAAQ,SAAO;AAC/B,oBAAY,OAAO,IAAI;AAAA,MACxB,CAAC;AAMD,kBAAY,QAAQ,CAAC;AACrB,kBAAY,QAAQ,CAAC;AAOrB,kBAAY,aAAa,CAAC;AAQ1B,eAAS,YAAY,WAAW;AAC/B,YAAI,OAAO;AAEX,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,kBAAS,QAAQ,KAAK,OAAQ,UAAU,WAAW,CAAC;AACpD,kBAAQ;AAAA,QACT;AAEA,eAAO,YAAY,OAAO,KAAK,IAAI,IAAI,IAAI,YAAY,OAAO;AAAA,MAC/D;AACA,kBAAY,cAAc;AAS1B,eAAS,YAAY,WAAW;AAC/B,YAAI;AACJ,YAAI,iBAAiB;AACrB,YAAI;AACJ,YAAI;AAEJ,iBAASC,UAAS,MAAM;AAEvB,cAAI,CAACA,OAAM,SAAS;AACnB;AAAA,UACD;AAEA,gBAAMC,QAAOD;AAGb,gBAAM,OAAO,OAAO,IAAI,KAAK,CAAC;AAC9B,gBAAM,KAAK,QAAQ,YAAY;AAC/B,UAAAC,MAAK,OAAO;AACZ,UAAAA,MAAK,OAAO;AACZ,UAAAA,MAAK,OAAO;AACZ,qBAAW;AAEX,eAAK,KAAK,YAAY,OAAO,KAAK,EAAE;AAEpC,cAAI,OAAO,KAAK,OAAO,UAAU;AAEhC,iBAAK,QAAQ,IAAI;AAAA,UAClB;AAGA,cAAI,QAAQ;AACZ,eAAK,KAAK,KAAK,GAAG,QAAQ,iBAAiB,CAAC,OAAO,WAAW;AAE7D,gBAAI,UAAU,MAAM;AACnB,qBAAO;AAAA,YACR;AACA;AACA,kBAAM,YAAY,YAAY,WAAW;AACzC,gBAAI,OAAO,cAAc,YAAY;AACpC,oBAAM,MAAM,KAAK;AACjB,sBAAQ,UAAU,KAAKA,OAAM,GAAG;AAGhC,mBAAK,OAAO,OAAO,CAAC;AACpB;AAAA,YACD;AACA,mBAAO;AAAA,UACR,CAAC;AAGD,sBAAY,WAAW,KAAKA,OAAM,IAAI;AAEtC,gBAAM,QAAQA,MAAK,OAAO,YAAY;AACtC,gBAAM,MAAMA,OAAM,IAAI;AAAA,QACvB;AAEA,QAAAD,OAAM,YAAY;AAClB,QAAAA,OAAM,YAAY,YAAY,UAAU;AACxC,QAAAA,OAAM,QAAQ,YAAY,YAAY,SAAS;AAC/C,QAAAA,OAAM,SAAS;AACf,QAAAA,OAAM,UAAU,YAAY;AAE5B,eAAO,eAAeA,QAAO,WAAW;AAAA,UACvC,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,KAAK,MAAM;AACV,gBAAI,mBAAmB,MAAM;AAC5B,qBAAO;AAAA,YACR;AACA,gBAAI,oBAAoB,YAAY,YAAY;AAC/C,gCAAkB,YAAY;AAC9B,6BAAe,YAAY,QAAQ,SAAS;AAAA,YAC7C;AAEA,mBAAO;AAAA,UACR;AAAA,UACA,KAAK,OAAK;AACT,6BAAiB;AAAA,UAClB;AAAA,QACD,CAAC;AAGD,YAAI,OAAO,YAAY,SAAS,YAAY;AAC3C,sBAAY,KAAKA,MAAK;AAAA,QACvB;AAEA,eAAOA;AAAA,MACR;AAEA,eAAS,OAAO,WAAW,WAAW;AACrC,cAAM,WAAW,YAAY,KAAK,aAAa,OAAO,cAAc,cAAc,MAAM,aAAa,SAAS;AAC9G,iBAAS,MAAM,KAAK;AACpB,eAAO;AAAA,MACR;AASA,eAAS,OAAO,YAAY;AAC3B,oBAAY,KAAK,UAAU;AAC3B,oBAAY,aAAa;AAEzB,oBAAY,QAAQ,CAAC;AACrB,oBAAY,QAAQ,CAAC;AAErB,YAAI;AACJ,cAAM,SAAS,OAAO,eAAe,WAAW,aAAa,IAAI,MAAM,QAAQ;AAC/E,cAAM,MAAM,MAAM;AAElB,aAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACzB,cAAI,CAAC,MAAM,IAAI;AAEd;AAAA,UACD;AAEA,uBAAa,MAAM,GAAG,QAAQ,OAAO,KAAK;AAE1C,cAAI,WAAW,OAAO,KAAK;AAC1B,wBAAY,MAAM,KAAK,IAAI,OAAO,MAAM,WAAW,MAAM,CAAC,IAAI,GAAG,CAAC;AAAA,UACnE,OAAO;AACN,wBAAY,MAAM,KAAK,IAAI,OAAO,MAAM,aAAa,GAAG,CAAC;AAAA,UAC1D;AAAA,QACD;AAAA,MACD;AAQA,eAAS,UAAU;AAClB,cAAM,aAAa;AAAA,UAClB,GAAG,YAAY,MAAM,IAAI,WAAW;AAAA,UACpC,GAAG,YAAY,MAAM,IAAI,WAAW,EAAE,IAAI,eAAa,MAAM,SAAS;AAAA,QACvE,EAAE,KAAK,GAAG;AACV,oBAAY,OAAO,EAAE;AACrB,eAAO;AAAA,MACR;AASA,eAAS,QAAQE,OAAM;AACtB,YAAIA,MAAKA,MAAK,SAAS,OAAO,KAAK;AAClC,iBAAO;AAAA,QACR;AAEA,YAAI;AACJ,YAAI;AAEJ,aAAK,IAAI,GAAG,MAAM,YAAY,MAAM,QAAQ,IAAI,KAAK,KAAK;AACzD,cAAI,YAAY,MAAM,GAAG,KAAKA,KAAI,GAAG;AACpC,mBAAO;AAAA,UACR;AAAA,QACD;AAEA,aAAK,IAAI,GAAG,MAAM,YAAY,MAAM,QAAQ,IAAI,KAAK,KAAK;AACzD,cAAI,YAAY,MAAM,GAAG,KAAKA,KAAI,GAAG;AACpC,mBAAO;AAAA,UACR;AAAA,QACD;AAEA,eAAO;AAAA,MACR;AASA,eAAS,YAAY,QAAQ;AAC5B,eAAO,OAAO,SAAS,EACrB,UAAU,GAAG,OAAO,SAAS,EAAE,SAAS,CAAC,EACzC,QAAQ,WAAW,GAAG;AAAA,MACzB;AASA,eAASH,QAAO,KAAK;AACpB,YAAI,eAAe,OAAO;AACzB,iBAAO,IAAI,SAAS,IAAI;AAAA,QACzB;AACA,eAAO;AAAA,MACR;AAMA,eAAS,UAAU;AAClB,gBAAQ,KAAK,uIAAuI;AAAA,MACrJ;AAEA,kBAAY,OAAO,YAAY,KAAK,CAAC;AAErC,aAAO;AAAA,IACR;AAEA,IAAAD,QAAO,UAAU;AAAA;AAAA;;;ACjRjB;AAAA,8EAAAK,UAAAC,SAAA;AAMA,IAAAD,SAAQ,aAAa;AACrB,IAAAA,SAAQ,OAAO;AACf,IAAAA,SAAQ,OAAO;AACf,IAAAA,SAAQ,YAAY;AACpB,IAAAA,SAAQ,UAAU,aAAa;AAC/B,IAAAA,SAAQ,WAAW,MAAM;AACxB,UAAI,SAAS;AAEb,aAAO,MAAM;AACZ,YAAI,CAAC,QAAQ;AACZ,mBAAS;AACT,kBAAQ,KAAK,uIAAuI;AAAA,QACrJ;AAAA,MACD;AAAA,IACD,GAAG;AAMH,IAAAA,SAAQ,SAAS;AAAA,MAChaAAS,YAAY;AAIpB,UAAI,OAAO,WAAW,eAAe,OAAO,YAAY,OAAO,QAAQ,SAAS,cAAc,OAAO,QAAQ,SAAS;AACrH,eAAO;AAAA,MACR;AAGA,UAAI,OAAO,cAAc,eAAe,UAAU,aAAa,UAAU,UAAU,YAAY,EAAE,MAAM,uBAAuB,GAAG;AAChI,eAAO;AAAA,MACR;AAIA,aAAQ,OAAO,aAAa,eAAe,SAAS,mBAAmB,SAAS,gBAAgB,SAAS,SAAS,gBAAgB,MAAM,oBAEtI,OAAO,WAAW,eAAe,OAAO,YAAY,OAAO,QAAQ,WAAY,OAAO,QAAQ,aAAa,OAAO,QAAQ,UAG1H,OAAO,cAAc,eAAe,UAAU,aAAa,UAAU,UAAU,YAAY,EAAE,MAAM,gBAAgB,KAAK,SAAS,OAAO,IAAI,EAAE,KAAK,MAEnJ,OAAO,cAAc,eAAe,UAAU,aAAa,UAAU,UAAU,YAAY,EAAE,MAAM,oBAAoB;AAAA,IAC1H;AAQA,aAAS,WAAW,MAAM;AACzB,WAAK,MAAM,KAAK,YAAY,OAAO,MAClC,KAAK,aACJ,KAAK,YAAY,QAAQ,OAC1B,KAAK,MACJ,KAAK,YAAY,QAAQ,OAC1B,MAAMC,QAAO,QAAQ,SAAS,KAAK,IAAI;AAExC,UAAI,CAAC,KAAK,WAAW;AACpB;AAAA,MACD;AAEA,YAAM,IAAI,YAAY,KAAK;AAC3B,WAAK,OAAO,GAAG,GAAG,GAAG,gBAAgB;AAKrC,UAAI,QAAQ;AACZ,UAAI,QAAQ;AACZ,WAAK,GAAG,QAAQ,eAAe,WAAS;AACvC,YAAI,UAAU,MAAM;AACnB;AAAA,QACD;AACA;AACA,YAAI,UAAU,MAAM;AAGnB,kBAAQ;AAAA,QACT;AAAA,MACD,CAAC;AAED,WAAK,OAAO,OAAO,GAAG,CAAC;AAAA,IACxB;AAUA,IAAAD,SAAQ,MAAM,QAAQ,SAAS,QAAQ,QAAQ,MAAM;AAAA,IAAC;AAQtD,aAAS,KAAK,YAAY;AACzB,UAAI;AACH,YAAI,YAAY;AACf,UAAAA,SAAQ,QAAQ,QAAQ,SAAS,UAAU;AAAA,QAC5C,OAAO;AACN,UAAAA,SAAQ,QAAQ,WAAW,OAAO;AAAA,QACnC;AAAA,MACD,SAAS,OAAP;AAAA,MAGF;AAAA,IACD;AAQA,aAAS,OAAO;AACf,UAAI;AACJ,UAAI;AACH,YAAIA,SAAQ,QAAQ,QAAQ,OAAO;AAAA,MACpC,SAAS,OAAP;AAAA,MAGF;AAGA,UAAI,CAAC,KAAK,OAAO,YAAY,eAAe,SAAS,SAAS;AAC7D,YAAI,QAAQ,IAAI;AAAA,MACjB;AAEA,aAAO;AAAA,IACR;AAaA,aAAS,eAAe;AACvB,UAAI;AAGH,eAAO;AAAA,MACR,SAAS,OAAP;AAAA,MAGF;AAAA,IACD;AAEA,IAAAC,QAAO,UAAU,iBAAoBD,QAAO;AAE5C,QAAM,EAAC,WAAU,IAAIC,QAAO;AAM5B,eAAW,IAAI,SAAU,GAAG;AAC3B,UAAI;AACH,eAAO,KAAK,UAAU,CAAC;AAAA,MACxB,SAAS,OAAP;AACD,eAAO,iCAAiC,MAAM;AAAA,MAC/C;AAAA,IACD;AAAA;AAAA;;;AC5QA;AAAA,0DAAAC,UAAA;AAAA;AAEA,QAAM,eAAN,cAA2B,MAAM;AAAA,MAC/B,YAAa,UAAU,qBAAqB;AAC1C,cAAM,OAAO;AACb,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAAA,SAAQ,eAAe;AAEvB,QAAM,aAAN,cAAyB,MAAM;AAAA,MAC7B,YAAa,UAAU,8BAA8B;AACnD,cAAM,OAAO;AACb,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AACA,IAAAA,SAAQ,aAAa;AAErB,QAAMC,aAAN,cAAwB,MAAM;AAAA,MAI5B,YAAa,UAAU;AACrB,cAAM,SAAS,UAAU;AACzB,aAAK,OAAO;AACZ,aAAK,WAAW;AAAA,MAClB;AAAA,IACF;AACA,IAAAD,SAAQ,YAAYC;AAAA;AAAA;;;AC5BpB,IAAAC,mBAAA;AAAA,mDAAAC,UAAAC,SAAA;AAAA;AAGA,QAAI,YAAY,WAAY;AAI3B,UAAI,OAAO,SAAS,aAAa;AAAE,eAAO;AAAA,MAAM;AAChD,UAAI,OAAO,WAAW,aAAa;AAAE,eAAO;AAAA,MAAQ;AACpD,UAAI,OAAOC,YAAW,aAAa;AAAE,eAAOA;AAAA,MAAQ;AACpD,YAAM,IAAI,MAAM,gCAAgC;AAAA,IACjD;AAEA,QAAIA,UAAS,UAAU;AAEvB,IAAAD,QAAO,UAAUD,WAAUE,QAAO;AAGlC,QAAIA,QAAO,OAAO;AACjB,MAAAF,SAAQ,UAAUE,QAAO,MAAM,KAAKA,OAAM;AAAA,IAC3C;AAEA,IAAAF,SAAQ,UAAUE,QAAO;AACzB,IAAAF,SAAQ,UAAUE,QAAO;AACzB,IAAAF,SAAQ,WAAWE,QAAO;AAAA;AAAA;;;ACxB1B;AAAA,+EAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,WAAW,SAAS,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU;AACvF,MAAAA,QAAO,UAAU;AAAA,QACf,SAAS,WAAW;AAAA,QACpB,SAAS,WAAW;AAAA,QACpB,SAAS,WAAW;AAAA,QACpB,UAAU,WAAW;AAAA,MACvB;AAAA,IACF,OAAO;AACL,MAAAA,QAAO,UAAU;AAAA,QACf,SAAS,mBAAsB;AAAA,QAC/B,SAAS,mBAAsB;AAAA,QAC/B,SAAS,mBAAsB;AAAA,QAC/B,UAAU,mBAAsB;AAAA,MAClC;AAAA,IACF;AAAA;AAAA;;;AChBA;AAAA,6DAAAC,UAAAC,SAAA;AAAA;AASA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACTjB,IAAAC,yBAAA;AAAA,kEAAAC,UAAAC,SAAA;AAAA;AAEA,QAAM,EAAE,cAAc,WAAW,IAAI;AAErC,QAAM,EAAE,UAAAC,WAAU,SAAS,SAAS,SAAS,MAAM,IAAI;AAcvD,QAAM,oBAAoB,CAAC,KAAKC,WAAU,CAAC,MAAM;AAC/C,YAAM,UAAU,IAAI,eAAe;AACnC,cAAQ,KAAKA,SAAQ,UAAU,OAAO,IAAI,SAAS,GAAG,IAAI;AAE1D,YAAM,EAAE,SAAS,QAAQ,IAAIA;AAE7B,UAAI,WAAW,UAAU,KAAK,UAAU,UAAU;AAChD,gBAAQ,UAAU;AAAA,MACpB;AAEA,UAAIA,SAAQ,oBAAoB,MAAM;AACpC,gBAAQ,iBAAiBA,SAAQ,gBAAgB;AAAA,MACnD;AAEA,UAAI,SAAS;AACX,mBAAW,CAACC,OAAM,KAAK,KAAK,IAAI,QAAQ,OAAO,GAAG;AAChD,kBAAQ,iBAAiBA,OAAM,KAAK;AAAA,QACtC;AAAA,MACF;AAEA,UAAID,SAAQ,QAAQ;AAClB,QAAAA,SAAQ,OAAO,UAAU,MAAM,QAAQ,MAAM;AAAA,MAC/C;AAEA,UAAIA,SAAQ,kBAAkB;AAC5B,gBAAQ,OAAO,aAAaA,SAAQ;AAAA,MACtC;AAOA,cAAQ,eAAe;AAEvB,aAAO,IAAI,QAAQ,CAACE,UAAS,WAAW;AAItC,cAAM,cAAc,CAAC,UAAU;AAC7B,kBAAQ,MAAM;AAAA,iBACP,SAAS;AACZ,cAAAA,SAAQH,UAAS,MAAM,CAAC;AACxB;AAAA,YACF;AAAA,iBACK,QAAQ;AACX,cAAAG;AAAA,gBACE,IAAI,gBAAgB,QAAQ,aAAa,QAAQ,UAAU;AAAA,kBACzD,QAAQ,QAAQ;AAAA,kBAChB,YAAY,QAAQ;AAAA,kBACpB,SAAS,aAAa,QAAQ,sBAAsB,CAAC;AAAA,gBACvD,CAAC;AAAA,cACH;AACA;AAAA,YACF;AAAA,iBACK,WAAW;AACd,qBAAO,IAAI,aAAa,CAAC;AACzB;AAAA,YACF;AAAA,iBACK,SAAS;AACZ,qBAAO,IAAI,WAAW,CAAC;AACvB;AAAA,YACF;AAAA,qBACS;AACP;AAAA,YACF;AAAA;AAAA,QAEJ;AACA,gBAAQ,UAAU;AAClB,gBAAQ,SAAS;AACjB,gBAAQ,YAAY;AACpB,gBAAQ,UAAU;AAIlB,gBAAQ,KAAKF,SAAQ,IAAI;AAAA,MAC3B,CAAC;AAAA,IACH;AAEA,QAAM,qBAAqB;AAM3B,QAAM,YAAY,CAAC,KAAKA,WAAU,CAAC,MAChCA,SAAQ,oBAAoB,OACzB,kBAAkB,KAAKA,QAAO,IAC9B,mBAAmB,KAAKA,QAAO;AAQrC,QAAM,eAAe,CAAC,UAAU;AAC9B,YAAM,UAAU,IAAI,QAAQ;AAC5B,iBAAW,QAAQ,MAAM,KAAK,EAAE,MAAM,SAAS,GAAG;AAChD,cAAM,QAAQ,KAAK,QAAQ,IAAI;AAC/B,YAAI,QAAQ,GAAG;AACb,kBAAQ,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG,KAAK,MAAM,QAAQ,CAAC,CAAC;AAAA,QACzD;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,QAAM,kBAAN,cAA8BD,UAAS;AAAA,MAMrC,YAAa,KAAK,MAAMC,UAAS;AAC/B,cAAM,MAAMA,QAAO;AACnB,eAAO,eAAe,MAAM,OAAO,EAAE,OAAO,IAAI,CAAC;AAAA,MACnD;AAAA,IACF;AAEA,IAAAF,QAAO,UAAU;AAAA,MACf,OAAO;AAAA,MACP;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC9IA;AAAA,mDAAAK,UAAAC,SAAA;AAAA;AAEA,IAAAA,QAAO,UAAU,WAAS;AACzB,UAAI,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,mBAAmB;AAChE,eAAO;AAAA,MACR;AAEA,YAAM,YAAY,OAAO,eAAe,KAAK;AAC7C,aAAO,cAAc,QAAQ,cAAc,OAAO;AAAA,IACnD;AAAA;AAAA;;;ACTA;AAAA,oDAAAC,UAAAC,SAAA;AAAA;AACA,QAAM,iBAAiB;AAEvB,QAAM,EAAC,eAAc,IAAI,OAAO;AAChC,QAAM,EAAC,qBAAoB,IAAI;AAC/B,QAAM,iBAAiB,CAAC,QAAQC,OAAM,UAAU,OAAO,eAAe,QAAQA,OAAM;AAAA,MACnF;AAAA,MACA,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,cAAc;AAAA,IACf,CAAC;AAED,QAAMC,cAAaH;AACnB,QAAM,sBAAsB;AAAA,MAC3B,cAAc;AAAA,MACd,iBAAiB;AAAA,IAClB;AAEA,QAAM,+BAA+B,WAAS;AAC7C,YAAM,OAAO,CAAC;AAEd,iBAAW,OAAO,OAAO;AACxB,YAAI,eAAe,KAAK,OAAO,GAAG,GAAG;AACpC,eAAK,KAAK,GAAG;AAAA,QACd;AAAA,MACD;AAGA,UAAI,OAAO,uBAAuB;AACjC,cAAM,UAAU,OAAO,sBAAsB,KAAK;AAElD,mBAAWI,WAAU,SAAS;AAC7B,cAAI,qBAAqB,KAAK,OAAOA,OAAM,GAAG;AAC7C,iBAAK,KAAKA,OAAM;AAAA,UACjB;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAEA,aAAS,MAAM,OAAO;AACrB,UAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,eAAO,WAAW,KAAK;AAAA,MACxB;AAEA,UAAI,eAAe,KAAK,GAAG;AAC1B,eAAO,kBAAkB,KAAK;AAAA,MAC/B;AAEA,aAAO;AAAA,IACR;AAEA,aAAS,WAAW,OAAO;AAC1B,YAAM,SAAS,MAAM,MAAM,GAAG,CAAC;AAE/B,mCAA6B,KAAK,EAAE,QAAQ,SAAO;AAClD,uBAAe,QAAQ,KAAK,MAAM,MAAM,IAAI,CAAC;AAAA,MAC9C,CAAC;AAED,aAAO;AAAA,IACR;AAEA,aAAS,kBAAkB,QAAQ;AAClC,YAAM,SAAS,OAAO,eAAe,MAAM,MAAM,OAAO,uBAAO,OAAO,IAAI,IAAI,CAAC;AAE/E,mCAA6B,MAAM,EAAE,QAAQ,SAAO;AACnD,uBAAe,QAAQ,KAAK,MAAM,OAAO,IAAI,CAAC;AAAA,MAC/C,CAAC;AAED,aAAO;AAAA,IACR;AASA,QAAM,YAAY,CAAC,QAAQ,QAAQ,MAAM,WAAW;AACnD,WAAK,QAAQ,SAAO;AACnB,YAAI,OAAO,OAAO,SAAS,eAAe,OAAO,iBAAiB;AACjE;AAAA,QACD;AAGA,YAAI,OAAO,UAAU,OAAO,SAAS,OAAO,eAAe,MAAM,GAAG;AACnE,yBAAe,QAAQ,KAAKC,OAAM,OAAO,MAAM,OAAO,MAAM,MAAM,CAAC;AAAA,QACpE,OAAO;AACN,yBAAe,QAAQ,KAAK,MAAM,OAAO,IAAI,CAAC;AAAA,QAC/C;AAAA,MACD,CAAC;AAED,aAAO;AAAA,IACR;AAUA,QAAM,eAAe,CAAC,QAAQ,QAAQ,WAAW;AAChD,UAAI,SAAS,OAAO,MAAM,GAAG,CAAC;AAC9B,UAAI,cAAc;AAElB,OAAC,QAAQ,MAAM,EAAE,QAAQ,WAAS;AACjC,cAAM,UAAU,CAAC;AAGjB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,cAAI,CAAC,eAAe,KAAK,OAAO,CAAC,GAAG;AACnC;AAAA,UACD;AAEA,kBAAQ,KAAK,OAAO,CAAC,CAAC;AAEtB,cAAI,UAAU,QAAQ;AAErB,2BAAe,QAAQ,eAAe,MAAM,EAAE;AAAA,UAC/C,OAAO;AACN,2BAAe,QAAQ,eAAe,MAAM,MAAM,EAAE,CAAC;AAAA,UACtD;AAAA,QACD;AAGA,iBAAS,UAAU,QAAQ,OAAO,6BAA6B,KAAK,EAAE,OAAO,SAAO,CAAC,QAAQ,SAAS,GAAG,CAAC,GAAG,MAAM;AAAA,MACpH,CAAC;AAED,aAAO;AAAA,IACR;AAQA,aAASA,OAAM,QAAQ,QAAQ,QAAQ;AACtC,UAAI,OAAO,gBAAgB,MAAM,QAAQ,MAAM,KAAK,MAAM,QAAQ,MAAM,GAAG;AAC1E,eAAO,aAAa,QAAQ,QAAQ,MAAM;AAAA,MAC3C;AAEA,UAAI,CAAC,eAAe,MAAM,KAAK,CAAC,eAAe,MAAM,GAAG;AACvD,eAAO,MAAM,MAAM;AAAA,MACpB;AAEA,aAAO,UAAU,QAAQ,QAAQ,6BAA6B,MAAM,GAAG,MAAM;AAAA,IAC9E;AAEA,IAAAJ,QAAO,UAAU,YAAaK,UAAS;AACtC,YAAM,SAASD,OAAM,MAAM,mBAAmB,GAAI,SAASF,eAAc,QAAS,CAAC,GAAG,mBAAmB;AACzG,UAAI,SAAS,EAAC,GAAG,CAAC,EAAC;AAEnB,iBAAW,UAAUG,UAAS;AAC7B,YAAI,WAAW,QAAW;AACzB;AAAA,QACD;AAEA,YAAI,CAAC,eAAe,MAAM,GAAG;AAC5B,gBAAM,IAAI,UAAU,MAAM,SAAS,2BAA2B;AAAA,QAC/D;AAEA,iBAASD,OAAM,QAAQ,EAAC,GAAG,OAAM,GAAG,MAAM;AAAA,MAC3C;AAEA,aAAO,OAAO;AAAA,IACf;AAAA;AAAA;;;AC1KA;AAAA,wDAAAE,UAAAC,SAAA;AAAA;AAEA,QAAM,gBACF,OAAO,cAAc,eACrB,UAAU,YAAY;AAE1B,aAAS,iBAAkB;AACzB,UAAI,eAAe;AACjB,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,KAAK,UAAU;AAClB,eAAO;AAAA,MACT;AAEA,aAAO,KAAK,SAAS,WAAW,OAAO,KAAK,SAAS;AAAA,IACvD;AAEA,QAAMC,OAAM,KAAK;AACjB,QAAM,cAAc,eAAe;AAEnC,QAAM,uBAAN,MAA2B;AAAA,MACzB,YAAa,MAAM,IAAIC,QAAO,aAAa;AACzC,aAAK,QAAQ,IAAID,KAAI,KAAKC,KAAI;AAC9B,aAAK,OAAO,KAAK,WAAW,KAAK;AACjC,aAAK,OACG,KAAK,YAAY,KAAK,WAClB,KAAK,WAAW,MAAM,KAAK,WAC3B;AAEZ,aAAK,QACG,KAAK,UAAU,KAAK,OAAO,WAAW,GAAG,IACrC,KAAK,OAAO,MAAM,CAAC,IACnB;AAAA,MACd;AAAA,MAEA,IAAI,OAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,OAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,OAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,OAAQ;AACV,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,SAAU;AACZ,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,eAAgB;AAClB,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,WAAY;AACd,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,MAEA,IAAI,KAAM,MAAM;AACd,aAAK,MAAM,OAAO;AAAA,MACpB;AAAA,MAEA,IAAI,KAAM,MAAM;AACd,aAAK,MAAM,OAAO;AAAA,MACpB;AAAA,MAEA,IAAI,SAAU,UAAU;AACtB,aAAK,MAAM,WAAW;AAAA,MACxB;AAAA,MAEA,IAAI,KAAM,MAAM;AACd,aAAK,MAAM,OAAO;AAAA,MACpB;AAAA,MAEA,IAAI,SAAU,UAAU;AACtB,aAAK,MAAM,WAAW;AAAA,MACxB;AAAA,MAEA,IAAI,SAAU,UAAU;AACtB,aAAK,MAAM,WAAW;AAAA,MACxB;AAAA,MAEA,IAAI,KAAM,MAAM;AACd,aAAK,MAAM,OAAO;AAAA,MACpB;AAAA,MAEA,IAAI,SAAU,UAAU;AACtB,aAAK,MAAM,WAAW;AAAA,MACxB;AAAA,MAEA,IAAI,OAAQ,QAAQ;AAClB,aAAK,MAAM,SAAS;AAAA,MACtB;AAAA,MAEA,IAAI,SAAU,UAAU;AACtB,aAAK,MAAM,WAAW;AAAA,MACxB;AAAA,MAKA,OAAO,gBAAiB,GAAG;AACzB,eAAOD,KAAI,gBAAgB,CAAC;AAAA,MAC9B;AAAA,MAKA,OAAO,gBAAiB,GAAG;AACzB,QAAAA,KAAI,gBAAgB,CAAC;AAAA,MACvB;AAAA,MAEA,SAAU;AACR,eAAO,KAAK,MAAM,OAAO;AAAA,MAC3B;AAAA,MAEA,WAAY;AACV,eAAO,KAAK,MAAM,SAAS;AAAA,MAC7B;AAAA,MAEA,SAAU;AACR,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAKA,aAAS,OAAQ,KAAK;AACpB,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,MAAM,IAAIA,KAAI,GAAG;AAEvB,eAAO,IAAI,SAAS;AAAA,MACtB;AAEA,UAAI,EAAE,eAAeA,OAAM;AACzB,cAAM,WAEE,IAAI,YAAY,IAAI,WAEhB,GAAG,IAAI,YAAY,IAAI,cACvB;AACZ,cAAM,OAAO,IAAI,OAAO,IAAI,OAAO,MAAM;AACzC,cAAM,OAAO,IAAI,OAAO,MAAM,IAAI,OAAO;AACzC,cAAM,WAAW,IAAI,WAAW,IAAI,WAAW,OAAO;AACtD,cAAM,OAAO,IAAI,QAAQ;AACzB,cAAM,WAAW,IAAI,YAAY;AACjC,cAAM,SAAS,IAAI,WAAW,IAAI,QAAQ,MAAM,IAAI,QAAQ;AAC5D,cAAM,OAAO,IAAI,QAAQ;AACzB,cAAM,WAAW,IAAI,YAAY;AAEjC,cAAM,OAAO,IAAI,QAAQ,WAAW;AAEpC,eAAO,GAAG,WAAW,YAAY,OACzB,QAAQ,WAAW,OACpB,OAAO;AAAA,MAChB;AAAA,IACF;AAEA,IAAAD,QAAO,UAAU;AAAA,MACf;AAAA,MACA,iBAAiB,KAAK;AAAA,MACtB;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AC9LA;AAAA,qDAAAG,UAAAC,SAAA;AAAA;AAEA,QAAM,EAAE,sBAAsB,OAAO,IAAI;AAQzC,IAAAA,QAAO,UAAU,CAAC,KAAKC,YAAW,CAAC,GAAG,cAAc,CAAC,GAAG,oBAAoB;AAC1E,UAAI,WAAWA,UAAS,WACpBA,UAAS,SAAS,QAAQ,KAAK,EAAE,IACjC;AAGJ,kBAAY,YAAY,aAAa,mBAAmB,YAAY;AACpE,UAAI;AAEJ,UAAI;AACF,oBAAY,IAAI,qBAAqB,GAAG;AAAA,MAC1C,SAAS,KAAP;AACA,oBAAY,CAAC;AAAA,MACf;AAEA,YAAMC,QAAO,OAAO,OAAO,CAAC,GAAGD,WAAU;AAAA,QACvC,UAAU,YAAY,UAAU;AAAA,QAChC,MAAMA,UAAS,QAAQ,UAAU;AAAA,MACnC,CAAC;AAED,aAAO,IAAI,qBAAqB,KAAK,OAAOC,KAAI,CAAC,EAAE,SAAS;AAAA,IAC9D;AAAA;AAAA;;;AC/BA;AAAA,8CAAAC,UAAAC,SAAA;AAAA;AAEA,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,iBAAAC;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM,WAAW;AAEjB,IAAAD,QAAO,UAAU;AAAA,MACf,KAAK;AAAA,MACL,iBAAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AChBA;AAAA,iDAAAC,UAAAC,SAAA;AAMA,aAASC,WAAW,SAAS;AAC3B,YAAM,aAAa,IAAI,WAAW,gBAAgB;AAElD,eAAS,UAAW;AAClB,mBAAW,MAAM;AAEjB,mBAAW,UAAU,SAAS;AAC5B,cAAI,CAAC,UAAU,CAAC,OAAO;AAAqB;AAC5C,iBAAO,oBAAoB,SAAS,OAAO;AAAA,QAC7C;AAAA,MACF;AAEA,iBAAW,UAAU,SAAS;AAC5B,YAAI,CAAC,UAAU,CAAC,OAAO;AAAkB;AACzC,YAAI,OAAO,SAAS;AAClB,kBAAQ;AACR;AAAA,QACF;AACA,eAAO,iBAAiB,SAAS,OAAO;AAAA,MAC1C;AAEA,aAAO,WAAW;AAAA,IACpB;AAEA,IAAAD,QAAO,UAAUC;AACjB,IAAAD,QAAO,QAAQ,YAAYC;AAAA;AAAA;;;AC/B3B;AAAA,oDAAAC,UAAAC,SAAA;AAAA;AAGA,QAAM,EAAE,OAAO,SAAS,QAAQ,IAAI;AACpC,QAAM,EAAE,cAAc,WAAAC,WAAU,IAAI;AACpC,QAAMC,SAAQ,wBAAyB,KAAK,EAAE,iBAAiB,KAAK,CAAC;AACrE,QAAM,EAAE,KAAAC,MAAK,iBAAAC,iBAAgB,IAAI;AACjC,QAAMC,aAAY;AAelB,QAAM,UAAU,CAAC,SAAS,IAAI,oBAAoB;AAChD,UAAI,OAAO,QAAW;AACpB,eAAO;AAAA,MACT;AAEA,YAAM,QAAQ,KAAK,IAAI;AAEvB,YAAM,WAAW,MAAM;AACrB,cAAM,OAAO,KAAK,IAAI,IAAI;AAE1B,eAAO,QAAQ;AAAA,MACjB;AAEA,aAAO,IAAI,QAAQ,CAACC,UAAS,WAAW;AACtC,cAAM,YAAY,WAAW,MAAM;AACjC,cAAI,SAAS,GAAG;AACd,mBAAO,IAAI,aAAa,CAAC;AACzB,4BAAgB,MAAM;AAAA,UACxB;AAAA,QACF,GAAG,EAAE;AAKL,cAAM,QAAQ,CAAC,SAAS;AAItB,gBAAM,KAAK,CAAC,QAAQ;AAClB,yBAAa,SAAS;AAEtB,gBAAI,SAAS,GAAG;AACd,qBAAO,IAAI,aAAa,CAAC;AACzB;AAAA,YACF;AAEA,iBAAK,GAAG;AAAA,UACV;AACA,iBAAO;AAAA,QACT;AAEA,gBACG,KAAK,MAAMA,QAAO,GAAG,MAAM,MAAM,CAAC;AAAA,MACvC,CAAC;AAAA,IACH;AAEA,QAAM,WAAW;AAAA,MACf,iBAAiB;AAAA,MACjB,aAAa;AAAA,IACf;AAEA,QAAMC,QAAN,MAAW;AAAA,MAKT,YAAaC,WAAU,CAAC,GAAG;AAEzB,aAAK,OAAON,OAAM,UAAUM,QAAO;AAAA,MACrC;AAAA,MASA,MAAM,MAAO,UAAUA,WAAU,CAAC,GAAG;AAEnC,cAAM,OAAON,OAAM,KAAK,MAAMM,QAAO;AAErC,cAAM,UAAU,IAAI,QAAQ,KAAK,OAAO;AAIxC,YAAI,OAAO,aAAa,YAAY,EAAE,oBAAoBL,QAAO,oBAAoB,UAAU;AAC7F,gBAAM,IAAI,UAAU,8CAA8C;AAAA,QACpE;AAEA,cAAM,MAAM,IAAIA,KAAI,SAAS,SAAS,GAAG,KAAK,IAAI;AAElD,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,QACF,IAAI;AAEJ,YAAI,cAAc;AAChB,cAAI,OAAO,0BAA0B,YAAY;AAE/C,gBAAI,SAAS,sBAAsB,IAAIC,iBAAgB,KAAK,YAAY,CAAC;AAAA,UAC3E,OAAO;AAEL,gBAAI,SAAS,IAAIA,iBAAgB,KAAK,YAAY;AAAA,UACpD;AAAA,QACF;AAEA,YAAI,MAAM;AACR,eAAK,OAAO,KAAK,UAAU,KAAK,IAAI;AACpC,kBAAQ,IAAI,gBAAgB,kBAAkB;AAAA,QAChD;AAEA,cAAM,kBAAkB,IAAI,gBAAgB;AAE5C,cAAM,SAASC,WAAU,CAAC,gBAAgB,QAAQ,KAAK,MAAM,CAAC;AAI9D,cAAM,WAAW,MAAM;AAAA,UACrB;AAAA,YACE,IAAI,SAAS;AAAA,YACb;AAAA,cACE,GAAG;AAAA,cACH;AAAA,cAEA,SAAS;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAAA,UACA,KAAK;AAAA,UACL;AAAA,QACF;AAEA,YAAI,CAAC,SAAS,MAAM,KAAK,iBAAiB;AACxC,cAAI,KAAK,aAAa;AACpB,kBAAM,KAAK,YAAY,QAAQ;AAAA,UACjC;AACA,gBAAM,IAAIJ,WAAU,QAAQ;AAAA,QAC9B;AAEA,iBAAS,WAAW,mBAAoB;AACtC,iBAAQ,WAAW,SAAS,IAAI;AAAA,QAClC;AAEA,iBAAS,SAAS,mBAAoB;AACpC,2BAAiB,SAAS,OAAO,SAAS,SAAS,CAAC,GAAG;AACrD,gBAAIO,SAAQ,WAAW;AACrB,oBAAMA,SAAQ,UAAU,KAAK;AAAA,YAC/B,OAAO;AACL,oBAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAMA,KAAM,UAAUA,WAAU,CAAC,GAAG;AAC5B,eAAO,KAAK,MAAM,UAAU,EAAE,GAAGA,UAAS,QAAQ,OAAO,CAAC;AAAA,MAC5D;AAAA,MAMA,IAAK,UAAUA,WAAU,CAAC,GAAG;AAC3B,eAAO,KAAK,MAAM,UAAU,EAAE,GAAGA,UAAS,QAAQ,MAAM,CAAC;AAAA,MAC3D;AAAA,MAMA,IAAK,UAAUA,WAAU,CAAC,GAAG;AAC3B,eAAO,KAAK,MAAM,UAAU,EAAE,GAAGA,UAAS,QAAQ,MAAM,CAAC;AAAA,MAC3D;AAAA,MAMA,OAAQ,UAAUA,WAAU,CAAC,GAAG;AAC9B,eAAO,KAAK,MAAM,UAAU,EAAE,GAAGA,UAAS,QAAQ,SAAS,CAAC;AAAA,MAC9D;AAAA,MAMA,QAAS,UAAUA,WAAU,CAAC,GAAG;AAC/B,eAAO,KAAK,MAAM,UAAU,EAAE,GAAGA,UAAS,QAAQ,UAAU,CAAC;AAAA,MAC/D;AAAA,IACF;AAQA,QAAM,SAAS,iBAAkB,QAAQ;AACvC,YAAM,UAAU,IAAI,YAAY;AAChC,UAAIC,OAAM;AAEV,uBAAiB,SAAS,QAAQ;AAChC,QAAAA,QAAO,QAAQ,OAAO,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC7C,cAAM,QAAQA,KAAI,MAAM,OAAO;AAE/B,iBAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK;AACzC,gBAAM,IAAI,MAAM,GAAG,KAAK;AACxB,cAAI,EAAE,SAAS,GAAG;AAChB,kBAAM,KAAK,MAAM,CAAC;AAAA,UACpB;AAAA,QACF;AACA,QAAAA,OAAM,MAAM,MAAM,SAAS;AAAA,MAC7B;AACA,MAAAA,QAAO,QAAQ,OAAO;AACtB,MAAAA,OAAMA,KAAI,KAAK;AACf,UAAIA,KAAI,WAAW,GAAG;AACpB,cAAM,KAAK,MAAMA,IAAG;AAAA,MACtB;AAAA,IACF;AASA,QAAM,aAAa,CAAC,WAAW;AAE7B,UAAI,qBAAqB,MAAM,GAAG;AAChC,cAAM,OAAO,OAAO,OAAO,eAAe;AAC1C,eAAO;AAAA,UACL,CAAC,OAAO,iBAAkB;AACxB,mBAAO;AAAA,cACL,MAAM,KAAK,KAAK,KAAK,IAAI;AAAA,cACzB,OAAQ,OAAO;AACb,uBAAO,QAAQ;AACf,oBAAI,OAAO,KAAK,WAAW,YAAY;AACrC,yBAAO,KAAK,OAAO;AAAA,gBACrB;AACA,uBAAO,QAAQ,QAAQ,EAAE,MAAM,MAAM,MAAM,CAAC;AAAA,cAC9C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,UAAI,oBAAoB,MAAM,GAAG;AAC/B,cAAM,SAAS,OAAO,UAAU;AAChC,eAAQ,mBAAoB;AAC1B,cAAI;AACF,mBAAO,MAAM;AAEX,oBAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAE1C,kBAAI;AAAM;AAEV,kBAAI,OAAO;AACT,sBAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF,UAAE;AACA,mBAAO,YAAY;AAAA,UACrB;AAAA,QACF,EAAG;AAAA,MACL;AAEA,UAAI,gBAAgB,MAAM,GAAG;AAC3B,eAAO;AAAA,MACT;AAEA,YAAM,IAAI,UAAU,0CAA2C;AAAA,IACjE;AAUA,QAAM,kBAAkB,CAAC,UAAU;AACjC,aAAO,OAAO,UAAU,YACxB,UAAU,QACV,OAA0B,MAAO,OAAO,mBAAmB;AAAA,IAC7D;AAUA,QAAM,sBAAsB,CAAC,UAAU;AACrC,aAAO,SAAS,OAA0B,MAAO,cAAc;AAAA,IACjE;AAMA,QAAM,uBAAuB,CAAC,UAC5B,OAAO,UAAU,eAAe,KAAK,OAAO,UAAU,KACtD,OAAO,UAAU,eAAe,KAAK,OAAO,UAAU;AAExD,IAAAF,MAAK,YAAYN;AACjB,IAAAM,MAAK,eAAe;AACpB,IAAAA,MAAK,wBAAwB;AAM7B,IAAAA,MAAK,OAAO,CAAC,UAAUC,aAAY,IAAID,MAAKC,QAAO,EAAE,KAAK,UAAUA,QAAO;AAM3E,IAAAD,MAAK,MAAM,CAAC,UAAUC,aAAY,IAAID,MAAKC,QAAO,EAAE,IAAI,UAAUA,QAAO;AAMzE,IAAAD,MAAK,MAAM,CAAC,UAAUC,aAAY,IAAID,MAAKC,QAAO,EAAE,IAAI,UAAUA,QAAO;AAMzE,IAAAD,MAAK,SAAS,CAAC,UAAUC,aAAY,IAAID,MAAKC,QAAO,EAAE,OAAO,UAAUA,QAAO;AAM/E,IAAAD,MAAK,UAAU,CAAC,UAAUC,aAAY,IAAID,MAAKC,QAAO,EAAE,QAAQ,UAAUA,QAAO;AAEjF,IAAAR,QAAO,UAAUO;AAAA;AAAA;;;AC1WjB;AAAA,kDAAAG,UAAAC,SAAA;AAAA;AAwCA,aAAS,iBAAkB,UAAU;AAEnC,YAAM,CAAC,UAAUC,OAAM,IAAI,SAAS,OAAO,iBAEvC,CAAC,SAAS,OAAO,eAAe,GAAG,OAAO,aAAa,IAEvD,CAAC,SAAS,OAAO,UAAU,GAAG,OAAO,QAAQ;AAGjD,YAAM,QAAQ,CAAC;AAGf,aAAO;AAAA,QACL,MAAM,MAAM;AACV,iBAAO,SAAS,KAAK;AAAA,QACvB;AAAA,QACA,MAAM,CAAC,UAAU;AACf,gBAAM,KAAK,KAAK;AAAA,QAClB;AAAA,QACA,MAAM,MAAM;AACV,cAAI,MAAM,QAAQ;AAChB,mBAAO;AAAA,cACL,MAAM;AAAA,cACN,OAAO,MAAM,MAAM;AAAA,YACrB;AAAA,UACF;AAEA,iBAAO,SAAS,KAAK;AAAA,QACvB;AAAA,QACA,CAACA,WAAW;AACV,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAEA,IAAAD,QAAO,UAAU;AAAA;AAAA;;;AC3EjB;AAAA,mEAAAE,UAAAC,SAAA;AAAA;AAcA,oBAAiB,0BAA2B,QAAQC,WAAU,CAAC,GAAG;AAChE,YAAM,SAAS,OAAO,UAAU;AAEhC,UAAI;AACF,eAAO,MAAM;AACX,gBAAM,SAAS,MAAM,OAAO,KAAK;AAEjC,cAAI,OAAO,MAAM;AACf;AAAA,UACF;AAEA,gBAAM,OAAO;AAAA,QACf;AAAA,MACF,UAAE;AACA,YAAIA,SAAQ,kBAAkB,MAAM;AAClC,iBAAO,OAAO;AAAA,QAChB;AAEA,eAAO,YAAY;AAAA,MACrB;AAAA,IACF;AAEA,IAAAD,QAAO,UAAU;AAAA;AAAA;;;ACpCjB;AAAA,6CAAAE,UAAAC,SAAA;AAAA;AAQA,QAAMC,OAAM,OAAO,WAAW;AAC5B,YAAM,MAAM,CAAC;AAEb,uBAAiB,SAAS,QAAQ;AAChC,YAAI,KAAK,KAAK;AAAA,MAChB;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAUC;AAAA;AAAA;;;AClBjB;AAAA,6CAAAC,UAAAC,SAAA;AAAA;AAWA,QAAMC,OAAM,iBAAkB,QAAQ,MAAM;AAC1C,uBAAiB,OAAO,QAAQ;AAC9B,cAAM,KAAK,GAAG;AAAA,MAChB;AAAA,IACF;AAEA,IAAAD,QAAO,UAAUC;AAAA;AAAA;;;ACjBjB;AAAA,4DAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAmBjB,aAAS,UAAU,IAAI,KAAmB;AACtC,UAAI,SAAU,IAAI,MAAM,UAAU,SAAS,CAAC,GACxC,SAAU,GACV,QAAU,GACV,UAAU;AACd,aAAO,QAAQ,UAAU;AACrB,eAAO,YAAY,UAAU;AACjC,aAAO,IAAI,QAAQ,SAAS,SAASC,UAAS,QAAQ;AAClD,eAAO,UAAU,SAAS,SAAS,KAAmB;AAClD,cAAI,SAAS;AACT,sBAAU;AACV,gBAAI;AACA,qBAAO,GAAG;AAAA,iBACT;AACD,kBAAIC,UAAS,IAAI,MAAM,UAAU,SAAS,CAAC,GACvCC,UAAS;AACb,qBAAOA,UAASD,QAAO;AACnB,gBAAAA,QAAOC,aAAY,UAAUA;AACjC,cAAAF,SAAQ,MAAM,MAAMC,OAAM;AAAA,YAC9B;AAAA,UACJ;AAAA,QACJ;AACA,YAAI;AACA,aAAG,MAAM,OAAO,MAAM,MAAM;AAAA,QAChC,SAAS,KAAP;AACE,cAAI,SAAS;AACT,sBAAU;AACV,mBAAO,GAAG;AAAA,UACd;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL;AAAA;AAAA;;;ACnDA;AAAA,yDAAAE,UAAA;AAAA;AAOA,QAAIC,UAASD;AAOb,IAAAC,QAAO,SAAS,SAASC,QAAOC,SAAQ;AACpC,UAAI,IAAIA,QAAO;AACf,UAAI,CAAC;AACD,eAAO;AACX,UAAI,IAAI;AACR,aAAO,EAAE,IAAI,IAAI,KAAKA,QAAO,OAAO,CAAC,MAAM;AACvC,UAAE;AACN,aAAO,KAAK,KAAKA,QAAO,SAAS,CAAC,IAAI,IAAI;AAAA,IAC9C;AAGA,QAAI,MAAM,IAAI,MAAM,EAAE;AAGtB,QAAI,MAAM,IAAI,MAAM,GAAG;AAGvB,SAAS,IAAI,GAAG,IAAI;AAChB,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,MAAM;AAD5E;AAUT,IAAAF,QAAO,SAAS,SAASG,SAAOC,SAAQ,OAAO,KAAK;AAChD,UAAI,QAAQ,MACR,QAAQ,CAAC;AACb,UAAIC,KAAI,GACJ,IAAI,GACJ;AACJ,aAAO,QAAQ,KAAK;AAChB,YAAI,IAAID,QAAO;AACf,gBAAQ;AAAA,eACC;AACD,kBAAMC,QAAO,IAAI,KAAK;AACtB,iBAAK,IAAI,MAAM;AACf,gBAAI;AACJ;AAAA,eACC;AACD,kBAAMA,QAAO,IAAI,IAAI,KAAK;AAC1B,iBAAK,IAAI,OAAO;AAChB,gBAAI;AACJ;AAAA,eACC;AACD,kBAAMA,QAAO,IAAI,IAAI,KAAK;AAC1B,kBAAMA,QAAO,IAAI,IAAI;AACrB,gBAAI;AACJ;AAAA;AAER,YAAIA,KAAI,MAAM;AACV,WAAC,UAAU,QAAQ,CAAC,IAAI,KAAK,OAAO,aAAa,MAAM,QAAQ,KAAK,CAAC;AACrE,UAAAA,KAAI;AAAA,QACR;AAAA,MACJ;AACA,UAAI,GAAG;AACH,cAAMA,QAAO,IAAI;AACjB,cAAMA,QAAO;AACb,YAAI,MAAM;AACN,gBAAMA,QAAO;AAAA,MACrB;AACA,UAAI,OAAO;AACP,YAAIA;AACA,gBAAM,KAAK,OAAO,aAAa,MAAM,QAAQ,MAAM,MAAM,GAAGA,EAAC,CAAC,CAAC;AACnE,eAAO,MAAM,KAAK,EAAE;AAAA,MACxB;AACA,aAAO,OAAO,aAAa,MAAM,QAAQ,MAAM,MAAM,GAAGA,EAAC,CAAC;AAAA,IAC9D;AAEA,QAAI,kBAAkB;AAUtB,IAAAL,QAAO,SAAS,SAASM,SAAOJ,SAAQE,SAAQ,QAAQ;AACpD,UAAI,QAAQ;AACZ,UAAI,IAAI,GACJ;AACJ,eAASC,KAAI,GAAGA,KAAIH,QAAO,UAAS;AAChC,YAAI,IAAIA,QAAO,WAAWG,IAAG;AAC7B,YAAI,MAAM,MAAM,IAAI;AAChB;AACJ,aAAK,IAAI,IAAI,QAAQ;AACjB,gBAAM,MAAM,eAAe;AAC/B,gBAAQ;AAAA,eACC;AACD,gBAAI;AACJ,gBAAI;AACJ;AAAA,eACC;AACD,YAAAD,QAAO,YAAY,KAAK,KAAK,IAAI,OAAO;AACxC,gBAAI;AACJ,gBAAI;AACJ;AAAA,eACC;AACD,YAAAA,QAAO,aAAa,IAAI,OAAO,KAAK,IAAI,OAAO;AAC/C,gBAAI;AACJ,gBAAI;AACJ;AAAA,eACC;AACD,YAAAA,QAAO,aAAa,IAAI,MAAM,IAAI;AAClC,gBAAI;AACJ;AAAA;AAAA,MAEZ;AACA,UAAI,MAAM;AACN,cAAM,MAAM,eAAe;AAC/B,aAAO,SAAS;AAAA,IACpB;AAOA,IAAAJ,QAAO,OAAO,SAAS,KAAKE,SAAQ;AAChC,aAAO,mEAAmE,KAAKA,OAAM;AAAA,IACzF;AAAA;AAAA;;;AC1IA;AAAA,+DAAAK,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAQjB,aAAS,eAAe;AAOpB,WAAK,aAAa,CAAC;AAAA,IACvB;AASA,iBAAa,UAAU,KAAK,SAAS,GAAG,KAAK,IAAI,KAAK;AAClD,OAAC,KAAK,WAAW,SAAS,KAAK,WAAW,OAAO,CAAC,IAAI,KAAK;AAAA,QACvD;AAAA,QACA,KAAM,OAAO;AAAA,MACjB,CAAC;AACD,aAAO;AAAA,IACX;AAQA,iBAAa,UAAU,MAAM,SAAS,IAAI,KAAK,IAAI;AAC/C,UAAI,QAAQ;AACR,aAAK,aAAa,CAAC;AAAA,WAClB;AACD,YAAI,OAAO;AACP,eAAK,WAAW,OAAO,CAAC;AAAA,aACvB;AACD,cAAI,YAAY,KAAK,WAAW;AAChC,mBAAS,IAAI,GAAG,IAAI,UAAU;AAC1B,gBAAI,UAAU,GAAG,OAAO;AACpB,wBAAU,OAAO,GAAG,CAAC;AAAA;AAErB,gBAAE;AAAA,QACd;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAQA,iBAAa,UAAU,OAAO,SAAS,KAAK,KAAK;AAC7C,UAAI,YAAY,KAAK,WAAW;AAChC,UAAI,WAAW;AACX,YAAI,OAAO,CAAC,GACR,IAAI;AACR,eAAO,IAAI,UAAU;AACjB,eAAK,KAAK,UAAU,IAAI;AAC5B,aAAK,IAAI,GAAG,IAAI,UAAU;AACtB,oBAAU,GAAG,GAAG,MAAM,UAAU,KAAK,KAAK,IAAI;AAAA,MACtD;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;AC3EA;AAAA,wDAAAC,UAAAC,SAAA;AAAA;AAEA,IAAAA,QAAO,UAAU,QAAQ,OAAO;AAqFhC,aAAS,QAAQD,UAAS;AAGtB,UAAI,OAAO,iBAAiB;AAAa,SAAC,WAAW;AAEjD,cAAI,MAAM,IAAI,aAAa,CAAE,EAAG,CAAC,GAC7B,MAAM,IAAI,WAAW,IAAI,MAAM,GAC/B,KAAM,IAAI,OAAO;AAErB,mBAAS,mBAAmB,KAAKE,MAAK,KAAK;AACvC,gBAAI,KAAK;AACT,YAAAA,KAAI,OAAW,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AAAA,UACvB;AAEA,mBAAS,mBAAmB,KAAKA,MAAK,KAAK;AACvC,gBAAI,KAAK;AACT,YAAAA,KAAI,OAAW,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AAAA,UACvB;AAGA,UAAAF,SAAQ,eAAe,KAAK,qBAAqB;AAEjD,UAAAA,SAAQ,eAAe,KAAK,qBAAqB;AAEjD,mBAAS,kBAAkBE,MAAK,KAAK;AACjC,gBAAI,KAAKA,KAAI;AACb,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,mBAAO,IAAI;AAAA,UACf;AAEA,mBAAS,kBAAkBA,MAAK,KAAK;AACjC,gBAAI,KAAKA,KAAI;AACb,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,mBAAO,IAAI;AAAA,UACf;AAGA,UAAAF,SAAQ,cAAc,KAAK,oBAAoB;AAE/C,UAAAA,SAAQ,cAAc,KAAK,oBAAoB;AAAA,QAGnD,GAAG;AAAA;AAAQ,SAAC,WAAW;AAEnB,mBAAS,mBAAmB,WAAW,KAAKE,MAAK,KAAK;AAClD,gBAAI,OAAO,MAAM,IAAI,IAAI;AACzB,gBAAI;AACA,oBAAM,CAAC;AACX,gBAAI,QAAQ;AACR,wBAAU,IAAI,MAAM,IAAmB,IAAqB,YAAYA,MAAK,GAAG;AAAA,qBAC3E,MAAM,GAAG;AACd,wBAAU,YAAYA,MAAK,GAAG;AAAA,qBACzB,MAAM;AACX,yBAAW,QAAQ,KAAK,gBAAgB,GAAGA,MAAK,GAAG;AAAA,qBAC9C,MAAM;AACX,yBAAW,QAAQ,KAAK,KAAK,MAAM,MAAM,oBAAqB,OAAO,GAAGA,MAAK,GAAG;AAAA,iBAC/E;AACD,kBAAI,WAAW,KAAK,MAAM,KAAK,IAAI,GAAG,IAAI,KAAK,GAAG,GAC9C,WAAW,KAAK,MAAM,MAAM,KAAK,IAAI,GAAG,CAAC,QAAQ,IAAI,OAAO,IAAI;AACpE,yBAAW,QAAQ,KAAK,WAAW,OAAO,KAAK,cAAc,GAAGA,MAAK,GAAG;AAAA,YAC5E;AAAA,UACJ;AAEA,UAAAF,SAAQ,eAAe,mBAAmB,KAAK,MAAM,WAAW;AAChE,UAAAA,SAAQ,eAAe,mBAAmB,KAAK,MAAM,WAAW;AAEhE,mBAAS,kBAAkB,UAAUE,MAAK,KAAK;AAC3C,gBAAI,OAAO,SAASA,MAAK,GAAG,GACxB,QAAQ,QAAQ,MAAM,IAAI,GAC1B,WAAW,SAAS,KAAK,KACzB,WAAW,OAAO;AACtB,mBAAO,aAAa,MACd,WACA,MACA,OAAO,WACP,aAAa,IACb,OAAO,uBAAwB,WAC/B,OAAO,KAAK,IAAI,GAAG,WAAW,GAAG,KAAK,WAAW;AAAA,UAC3D;AAEA,UAAAF,SAAQ,cAAc,kBAAkB,KAAK,MAAM,UAAU;AAC7D,UAAAA,SAAQ,cAAc,kBAAkB,KAAK,MAAM,UAAU;AAAA,QAEjE,GAAG;AAGH,UAAI,OAAO,iBAAiB;AAAa,SAAC,WAAW;AAEjD,cAAI,MAAM,IAAI,aAAa,CAAC,EAAE,CAAC,GAC3B,MAAM,IAAI,WAAW,IAAI,MAAM,GAC/B,KAAM,IAAI,OAAO;AAErB,mBAAS,oBAAoB,KAAKE,MAAK,KAAK;AACxC,gBAAI,KAAK;AACT,YAAAA,KAAI,OAAW,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AAAA,UACvB;AAEA,mBAAS,oBAAoB,KAAKA,MAAK,KAAK;AACxC,gBAAI,KAAK;AACT,YAAAA,KAAI,OAAW,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AACnB,YAAAA,KAAI,MAAM,KAAK,IAAI;AAAA,UACvB;AAGA,UAAAF,SAAQ,gBAAgB,KAAK,sBAAsB;AAEnD,UAAAA,SAAQ,gBAAgB,KAAK,sBAAsB;AAEnD,mBAAS,mBAAmBE,MAAK,KAAK;AAClC,gBAAI,KAAKA,KAAI;AACb,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,mBAAO,IAAI;AAAA,UACf;AAEA,mBAAS,mBAAmBA,MAAK,KAAK;AAClC,gBAAI,KAAKA,KAAI;AACb,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,gBAAI,KAAKA,KAAI,MAAM;AACnB,mBAAO,IAAI;AAAA,UACf;AAGA,UAAAF,SAAQ,eAAe,KAAK,qBAAqB;AAEjD,UAAAA,SAAQ,eAAe,KAAK,qBAAqB;AAAA,QAGrD,GAAG;AAAA;AAAQ,SAAC,WAAW;AAEnB,mBAAS,oBAAoB,WAAW,MAAM,MAAM,KAAKE,MAAK,KAAK;AAC/D,gBAAI,OAAO,MAAM,IAAI,IAAI;AACzB,gBAAI;AACA,oBAAM,CAAC;AACX,gBAAI,QAAQ,GAAG;AACX,wBAAU,GAAGA,MAAK,MAAM,IAAI;AAC5B,wBAAU,IAAI,MAAM,IAAmB,IAAqB,YAAYA,MAAK,MAAM,IAAI;AAAA,YAC3F,WAAW,MAAM,GAAG,GAAG;AACnB,wBAAU,GAAGA,MAAK,MAAM,IAAI;AAC5B,wBAAU,YAAYA,MAAK,MAAM,IAAI;AAAA,YACzC,WAAW,MAAM,uBAAyB;AACtC,wBAAU,GAAGA,MAAK,MAAM,IAAI;AAC5B,yBAAW,QAAQ,KAAK,gBAAgB,GAAGA,MAAK,MAAM,IAAI;AAAA,YAC9D,OAAO;AACH,kBAAI;AACJ,kBAAI,MAAM,wBAAyB;AAC/B,2BAAW,MAAM;AACjB,0BAAU,aAAa,GAAGA,MAAK,MAAM,IAAI;AACzC,2BAAW,QAAQ,KAAK,WAAW,gBAAgB,GAAGA,MAAK,MAAM,IAAI;AAAA,cACzE,OAAO;AACH,oBAAI,WAAW,KAAK,MAAM,KAAK,IAAI,GAAG,IAAI,KAAK,GAAG;AAClD,oBAAI,aAAa;AACb,6BAAW;AACf,2BAAW,MAAM,KAAK,IAAI,GAAG,CAAC,QAAQ;AACtC,0BAAU,WAAW,qBAAqB,GAAGA,MAAK,MAAM,IAAI;AAC5D,2BAAW,QAAQ,KAAK,WAAW,QAAQ,KAAK,WAAW,UAAU,aAAa,GAAGA,MAAK,MAAM,IAAI;AAAA,cACxG;AAAA,YACJ;AAAA,UACJ;AAEA,UAAAF,SAAQ,gBAAgB,oBAAoB,KAAK,MAAM,aAAa,GAAG,CAAC;AACxE,UAAAA,SAAQ,gBAAgB,oBAAoB,KAAK,MAAM,aAAa,GAAG,CAAC;AAExE,mBAAS,mBAAmB,UAAU,MAAM,MAAME,MAAK,KAAK;AACxD,gBAAI,KAAK,SAASA,MAAK,MAAM,IAAI,GAC7B,KAAK,SAASA,MAAK,MAAM,IAAI;AACjC,gBAAI,QAAQ,MAAM,MAAM,IAAI,GACxB,WAAW,OAAO,KAAK,MACvB,WAAW,cAAc,KAAK,WAAW;AAC7C,mBAAO,aAAa,OACd,WACA,MACA,OAAO,WACP,aAAa,IACb,OAAO,SAAS,WAChB,OAAO,KAAK,IAAI,GAAG,WAAW,IAAI,KAAK,WAAW;AAAA,UAC5D;AAEA,UAAAF,SAAQ,eAAe,mBAAmB,KAAK,MAAM,YAAY,GAAG,CAAC;AACrE,UAAAA,SAAQ,eAAe,mBAAmB,KAAK,MAAM,YAAY,GAAG,CAAC;AAAA,QAEzE,GAAG;AAEH,aAAOA;AAAA,IACX;AAIA,aAAS,YAAY,KAAKE,MAAK,KAAK;AAChC,MAAAA,KAAI,OAAY,MAAa;AAC7B,MAAAA,KAAI,MAAM,KAAM,QAAQ,IAAK;AAC7B,MAAAA,KAAI,MAAM,KAAM,QAAQ,KAAK;AAC7B,MAAAA,KAAI,MAAM,KAAM,QAAQ;AAAA,IAC5B;AAEA,aAAS,YAAY,KAAKA,MAAK,KAAK;AAChC,MAAAA,KAAI,OAAY,QAAQ;AACxB,MAAAA,KAAI,MAAM,KAAM,QAAQ,KAAK;AAC7B,MAAAA,KAAI,MAAM,KAAM,QAAQ,IAAK;AAC7B,MAAAA,KAAI,MAAM,KAAM,MAAa;AAAA,IACjC;AAEA,aAAS,WAAWA,MAAK,KAAK;AAC1B,cAAQA,KAAI,OACJA,KAAI,MAAM,MAAM,IAChBA,KAAI,MAAM,MAAM,KAChBA,KAAI,MAAM,MAAM,QAAQ;AAAA,IACpC;AAEA,aAAS,WAAWA,MAAK,KAAK;AAC1B,cAAQA,KAAI,QAAY,KAChBA,KAAI,MAAM,MAAM,KAChBA,KAAI,MAAM,MAAM,IAChBA,KAAI,MAAM,QAAQ;AAAA,IAC9B;AAAA;AAAA;;;AC9UA;AAAA;AAAA;AACA,WAAO,UAAU;AAQjB,aAAS,QAAQ,YAAY;AACzB,UAAI;AACA,YAAI,MAAM,KAAK,QAAQ,QAAQ,KAAI,IAAI,CAAC,EAAE,UAAU;AACpD,YAAI,QAAQ,IAAI,UAAU,OAAO,KAAK,GAAG,EAAE;AACvC,iBAAO;AAAA,MACf,SAAS,GAAP;AAAA,MAAW;AACb,aAAO;AAAA,IACX;AAAA;AAAA;;;AChBA;AAAA,uDAAAC,UAAA;AAAA;AAOA,QAAI,OAAOA;AAOX,SAAK,SAAS,SAAS,YAAYC,SAAQ;AACvC,UAAI,MAAM,GACN,IAAI;AACR,eAAS,IAAI,GAAG,IAAIA,QAAO,QAAQ,EAAE,GAAG;AACpC,YAAIA,QAAO,WAAW,CAAC;AACvB,YAAI,IAAI;AACJ,iBAAO;AAAA,iBACF,IAAI;AACT,iBAAO;AAAA,kBACD,IAAI,WAAY,UAAWA,QAAO,WAAW,IAAI,CAAC,IAAI,WAAY,OAAQ;AAChF,YAAE;AACF,iBAAO;AAAA,QACX;AACI,iBAAO;AAAA,MACf;AACA,aAAO;AAAA,IACX;AASA,SAAK,OAAO,SAAS,UAAUC,SAAQ,OAAO,KAAK;AAC/C,UAAI,MAAM,MAAM;AAChB,UAAI,MAAM;AACN,eAAO;AACX,UAAI,QAAQ,MACR,QAAQ,CAAC,GACT,IAAI,GACJ;AACJ,aAAO,QAAQ,KAAK;AAChB,YAAIA,QAAO;AACX,YAAI,IAAI;AACJ,gBAAM,OAAO;AAAA,iBACR,IAAI,OAAO,IAAI;AACpB,gBAAM,QAAQ,IAAI,OAAO,IAAIA,QAAO,WAAW;AAAA,iBAC1C,IAAI,OAAO,IAAI,KAAK;AACzB,gBAAM,IAAI,MAAM,MAAMA,QAAO,WAAW,OAAO,MAAMA,QAAO,WAAW,OAAO,IAAIA,QAAO,WAAW,MAAM;AAC1G,gBAAM,OAAO,SAAU,KAAK;AAC5B,gBAAM,OAAO,SAAU,IAAI;AAAA,QAC/B;AACI,gBAAM,QAAQ,IAAI,OAAO,MAAMA,QAAO,WAAW,OAAO,IAAIA,QAAO,WAAW;AAClF,YAAI,IAAI,MAAM;AACV,WAAC,UAAU,QAAQ,CAAC,IAAI,KAAK,OAAO,aAAa,MAAM,QAAQ,KAAK,CAAC;AACrE,cAAI;AAAA,QACR;AAAA,MACJ;AACA,UAAI,OAAO;AACP,YAAI;AACA,gBAAM,KAAK,OAAO,aAAa,MAAM,QAAQ,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC;AACnE,eAAO,MAAM,KAAK,EAAE;AAAA,MACxB;AACA,aAAO,OAAO,aAAa,MAAM,QAAQ,MAAM,MAAM,GAAG,CAAC,CAAC;AAAA,IAC9D;AASA,SAAK,QAAQ,SAAS,WAAWD,SAAQC,SAAQ,QAAQ;AACrD,UAAI,QAAQ,QACR,IACA;AACJ,eAAS,IAAI,GAAG,IAAID,QAAO,QAAQ,EAAE,GAAG;AACpC,aAAKA,QAAO,WAAW,CAAC;AACxB,YAAI,KAAK,KAAK;AACV,UAAAC,QAAO,YAAY;AAAA,QACvB,WAAW,KAAK,MAAM;AAClB,UAAAA,QAAO,YAAY,MAAM,IAAU;AACnC,UAAAA,QAAO,YAAY,KAAW,KAAK;AAAA,QACvC,YAAY,KAAK,WAAY,WAAY,KAAKD,QAAO,WAAW,IAAI,CAAC,KAAK,WAAY,OAAQ;AAC1F,eAAK,UAAY,KAAK,SAAW,OAAO,KAAK;AAC7C,YAAE;AACF,UAAAC,QAAO,YAAY,MAAM,KAAU;AACnC,UAAAA,QAAO,YAAY,MAAM,KAAK,KAAK;AACnC,UAAAA,QAAO,YAAY,MAAM,IAAK,KAAK;AACnC,UAAAA,QAAO,YAAY,KAAW,KAAK;AAAA,QACvC,OAAO;AACH,UAAAA,QAAO,YAAY,MAAM,KAAU;AACnC,UAAAA,QAAO,YAAY,MAAM,IAAK,KAAK;AACnC,UAAAA,QAAO,YAAY,KAAW,KAAK;AAAA,QACvC;AAAA,MACJ;AACA,aAAO,SAAS;AAAA,IACpB;AAAA;AAAA;;;ACxGA;AAAA,uDAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AA6BjB,aAAS,KAAKC,QAAOC,QAAO,MAAM;AAC9B,UAAI,OAAS,QAAQ;AACrB,UAAI,MAAS,SAAS;AACtB,UAAI,OAAS;AACb,UAAI,SAAS;AACb,aAAO,SAAS,WAAWC,OAAM;AAC7B,YAAIA,QAAO,KAAKA,QAAO;AACnB,iBAAOF,OAAME,KAAI;AACrB,YAAI,SAASA,QAAO,MAAM;AACtB,iBAAOF,OAAM,IAAI;AACjB,mBAAS;AAAA,QACb;AACA,YAAIG,OAAMF,OAAM,KAAK,MAAM,QAAQ,UAAUC,KAAI;AACjD,YAAI,SAAS;AACT,oBAAU,SAAS,KAAK;AAC5B,eAAOC;AAAA,MACX;AAAA,IACJ;AAAA;AAAA;;;AC/CA;AAAA,6DAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAEjB,QAAI,OAAO;AAUX,aAAS,SAAS,IAAI,IAAI;AAStB,WAAK,KAAK,OAAO;AAMjB,WAAK,KAAK,OAAO;AAAA,IACrB;AAOA,QAAI,OAAO,SAAS,OAAO,IAAI,SAAS,GAAG,CAAC;AAE5C,SAAK,WAAW,WAAW;AAAE,aAAO;AAAA,IAAG;AACvC,SAAK,WAAW,KAAK,WAAW,WAAW;AAAE,aAAO;AAAA,IAAM;AAC1D,SAAK,SAAS,WAAW;AAAE,aAAO;AAAA,IAAG;AAOrC,QAAI,WAAW,SAAS,WAAW;AAOnC,aAAS,aAAa,SAAS,WAAW,OAAO;AAC7C,UAAI,UAAU;AACV,eAAO;AACX,UAAI,OAAO,QAAQ;AACnB,UAAI;AACA,gBAAQ,CAAC;AACb,UAAI,KAAK,UAAU,GACf,MAAM,QAAQ,MAAM,eAAe;AACvC,UAAI,MAAM;AACN,aAAK,CAAC,OAAO;AACb,aAAK,CAAC,OAAO;AACb,YAAI,EAAE,KAAK,YAAY;AACnB,eAAK;AACL,cAAI,EAAE,KAAK;AACP,iBAAK;AAAA,QACb;AAAA,MACJ;AACA,aAAO,IAAI,SAAS,IAAI,EAAE;AAAA,IAC9B;AAOA,aAAS,OAAO,SAASC,MAAK,OAAO;AACjC,UAAI,OAAO,UAAU;AACjB,eAAO,SAAS,WAAW,KAAK;AACpC,UAAI,KAAK,SAAS,KAAK,GAAG;AAEtB,YAAI,KAAK;AACL,kBAAQ,KAAK,KAAK,WAAW,KAAK;AAAA;AAElC,iBAAO,SAAS,WAAW,SAAS,OAAO,EAAE,CAAC;AAAA,MACtD;AACA,aAAO,MAAM,OAAO,MAAM,OAAO,IAAI,SAAS,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,IAAI;AAAA,IACvF;AAOA,aAAS,UAAU,WAAW,SAAS,SAAS,UAAU;AACtD,UAAI,CAAC,YAAY,KAAK,OAAO,IAAI;AAC7B,YAAI,KAAK,CAAC,KAAK,KAAK,MAAM,GACtB,KAAK,CAAC,KAAK,OAAW;AAC1B,YAAI,CAAC;AACD,eAAK,KAAK,MAAM;AACpB,eAAO,EAAE,KAAK,KAAK;AAAA,MACvB;AACA,aAAO,KAAK,KAAK,KAAK,KAAK;AAAA,IAC/B;AAOA,aAAS,UAAU,SAAS,SAAS,OAAO,UAAU;AAClD,aAAO,KAAK,OACN,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,QAAQ,QAAQ,CAAC,IAEzD,EAAE,KAAK,KAAK,KAAK,GAAG,MAAM,KAAK,KAAK,GAAG,UAAU,QAAQ,QAAQ,EAAE;AAAA,IAC7E;AAEA,QAAI,aAAa,OAAO,UAAU;AAOlC,aAAS,WAAW,SAAS,SAAS,MAAM;AACxC,UAAI,SAAS;AACT,eAAO;AACX,aAAO,IAAI;AAAA,SACL,WAAW,KAAK,MAAM,CAAC,IACvB,WAAW,KAAK,MAAM,CAAC,KAAK,IAC5B,WAAW,KAAK,MAAM,CAAC,KAAK,KAC5B,WAAW,KAAK,MAAM,CAAC,KAAK,QAAQ;AAAA,SAEpC,WAAW,KAAK,MAAM,CAAC,IACvB,WAAW,KAAK,MAAM,CAAC,KAAK,IAC5B,WAAW,KAAK,MAAM,CAAC,KAAK,KAC5B,WAAW,KAAK,MAAM,CAAC,KAAK,QAAQ;AAAA,MAC1C;AAAA,IACJ;AAMA,aAAS,UAAU,SAAS,SAAS,SAAS;AAC1C,aAAO,OAAO;AAAA,QACV,KAAK,KAAY;AAAA,QACjB,KAAK,OAAO,IAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO;AAAA,QACZ,KAAK,KAAY;AAAA,QACjB,KAAK,OAAO,IAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO;AAAA,MAChB;AAAA,IACJ;AAMA,aAAS,UAAU,WAAW,SAAS,WAAW;AAC9C,UAAI,OAAS,KAAK,MAAM;AACxB,WAAK,OAAQ,KAAK,MAAM,IAAI,KAAK,OAAO,MAAM,UAAU;AACxD,WAAK,MAAQ,KAAK,MAAM,IAAsB,UAAU;AACxD,aAAO;AAAA,IACX;AAMA,aAAS,UAAU,WAAW,SAAS,WAAW;AAC9C,UAAI,OAAO,EAAE,KAAK,KAAK;AACvB,WAAK,OAAQ,KAAK,OAAO,IAAI,KAAK,MAAM,MAAM,UAAU;AACxD,WAAK,MAAQ,KAAK,OAAO,IAAqB,UAAU;AACxD,aAAO;AAAA,IACX;AAMA,aAAS,UAAU,SAAS,SAASC,UAAS;AAC1C,UAAI,QAAS,KAAK,IACd,SAAS,KAAK,OAAO,KAAK,KAAK,MAAM,OAAO,GAC5C,QAAS,KAAK,OAAO;AACzB,aAAO,UAAU,IACV,UAAU,IACR,QAAQ,QACN,QAAQ,MAAM,IAAI,IAClB,QAAQ,UAAU,IAAI,IACxB,QAAQ,QACN,QAAQ,MAAM,IAAI,IAClB,QAAQ,UAAU,IAAI,IAC1B,QAAQ,MAAM,IAAI;AAAA,IAC7B;AAAA;AAAA;;;ACvMA;AAAA,4DAAAC,UAAA;AAAA;AACA,QAAI,OAAOA;AAGX,SAAK,YAAY;AAGjB,SAAK,SAAS;AAGd,SAAK,eAAe;AAGpB,SAAK,QAAQ;AAGb,SAAK,UAAU;AAGf,SAAK,OAAO;AAGZ,SAAK,OAAO;AAGZ,SAAK,WAAW;AAOhB,SAAK,SAAS,QAAQ,OAAO,WAAW,eAClB,UACA,OAAO,WACP,OAAO,QAAQ,YACf,OAAO,QAAQ,SAAS,IAAI;AAOlD,SAAK,SAAS,KAAK,UAAU,UACf,OAAO,WAAW,eAAe,UACjC,OAAO,SAAW,eAAe,QACjCA;AAQd,SAAK,aAAa,OAAO,SAAS,OAAO,OAAO,CAAC,CAAC,IAA+B,CAAC;AAOlF,SAAK,cAAc,OAAO,SAAS,OAAO,OAAO,CAAC,CAAC,IAA+B,CAAC;AAQnF,SAAK,YAAY,OAAO,aAAwC,SAAS,UAAU,OAAO;AACtF,aAAO,OAAO,UAAU,YAAY,SAAS,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM;AAAA,IACjF;AAOA,SAAK,WAAW,SAAS,SAAS,OAAO;AACrC,aAAO,OAAO,UAAU,YAAY,iBAAiB;AAAA,IACzD;AAOA,SAAK,WAAW,SAAS,SAAS,OAAO;AACrC,aAAO,SAAS,OAAO,UAAU;AAAA,IACrC;AAUA,SAAK,QAQL,KAAK,QAAQ,SAAS,MAAM,KAAK,MAAM;AACnC,UAAI,QAAQ,IAAI;AAChB,UAAI,SAAS,QAAQ,IAAI,eAAe,IAAI;AACxC,eAAO,OAAO,UAAU,aAAa,MAAM,QAAQ,KAAK,IAAI,MAAM,SAAS,OAAO,KAAK,KAAK,EAAE,UAAU;AAC5G,aAAO;AAAA,IACX;AAaA,SAAK,SAAU,WAAW;AACtB,UAAI;AACA,YAAI,SAAS,KAAK,QAAQ,QAAQ,EAAE;AAEpC,eAAO,OAAO,UAAU,YAAY,SAAoC;AAAA,MAC5E,SAAS,GAAP;AAEE,eAAO;AAAA,MACX;AAAA,IACJ,EAAG;AAGH,SAAK,eAAe;AAGpB,SAAK,sBAAsB;AAO3B,SAAK,YAAY,SAAS,UAAU,aAAa;AAE7C,aAAO,OAAO,gBAAgB,WACxB,KAAK,SACD,KAAK,oBAAoB,WAAW,IACpC,IAAI,KAAK,MAAM,WAAW,IAC9B,KAAK,SACD,KAAK,aAAa,WAAW,IAC7B,OAAO,eAAe,cAClB,cACA,IAAI,WAAW,WAAW;AAAA,IAC5C;AAMA,SAAK,QAAQ,OAAO,eAAe,cAAc,aAAwC;AAezF,SAAK,OAAkC,KAAK,OAAO,WAAsC,KAAK,OAAO,QAAQ,QACtE,KAAK,OAAO,QACvC,KAAK,QAAQ,MAAM;AAO/B,SAAK,SAAS;AAOd,SAAK,UAAU;AAOf,SAAK,UAAU;AAOf,SAAK,aAAa,SAAS,WAAW,OAAO;AACzC,aAAO,QACD,KAAK,SAAS,KAAK,KAAK,EAAE,OAAO,IACjC,KAAK,SAAS;AAAA,IACxB;AAQA,SAAK,eAAe,SAAS,aAAa,MAAM,UAAU;AACtD,UAAI,OAAO,KAAK,SAAS,SAAS,IAAI;AACtC,UAAI,KAAK;AACL,eAAO,KAAK,KAAK,SAAS,KAAK,IAAI,KAAK,IAAI,QAAQ;AACxD,aAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,IAC1C;AAUA,aAASC,OAAM,KAAKC,MAAK,UAAU;AAC/B,eAAS,OAAO,OAAO,KAAKA,IAAG,GAAG,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE;AACxD,YAAI,IAAI,KAAK,QAAQ,UAAa,CAAC;AAC/B,cAAI,KAAK,MAAMA,KAAI,KAAK;AAChC,aAAO;AAAA,IACX;AAEA,SAAK,QAAQD;AAOb,SAAK,UAAU,SAAS,QAAQ,KAAK;AACjC,aAAO,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,UAAU,CAAC;AAAA,IACxD;AAQA,aAAS,SAASE,OAAM;AAEpB,eAAS,YAAY,SAAS,YAAY;AAEtC,YAAI,EAAE,gBAAgB;AAClB,iBAAO,IAAI,YAAY,SAAS,UAAU;AAK9C,eAAO,eAAe,MAAM,WAAW,EAAE,KAAK,WAAW;AAAE,iBAAO;AAAA,QAAS,EAAE,CAAC;AAG9E,YAAI,MAAM;AACN,gBAAM,kBAAkB,MAAM,WAAW;AAAA;AAEzC,iBAAO,eAAe,MAAM,SAAS,EAAE,OAAO,IAAI,MAAM,EAAE,SAAS,GAAG,CAAC;AAE3E,YAAI;AACA,UAAAF,OAAM,MAAM,UAAU;AAAA,MAC9B;AAEA,kBAAY,YAAY,OAAO,OAAO,MAAM,WAAW;AAAA,QACnD,aAAa;AAAA,UACT,OAAO;AAAA,UACP,UAAU;AAAA,UACV,YAAY;AAAA,UACZ,cAAc;AAAA,QAClB;AAAA,QACA,MAAM;AAAA,UACF,MAAM;AAAE,mBAAOE;AAAA,UAAM;AAAA,UACrB,KAAK;AAAA,UACL,YAAY;AAAA,UAKZ,cAAc;AAAA,QAClB;AAAA,QACA,UAAU;AAAA,UACN,QAAQ;AAAE,mBAAO,KAAK,OAAO,OAAO,KAAK;AAAA,UAAS;AAAA,UAClD,UAAU;AAAA,UACV,YAAY;AAAA,UACZ,cAAc;AAAA,QAClB;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAEA,SAAK,WAAW;AAmBhB,SAAK,gBAAgB,SAAS,eAAe;AAoB7C,SAAK,cAAc,SAAS,SAAS,YAAY;AAC7C,UAAI,WAAW,CAAC;AAChB,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE;AACrC,iBAAS,WAAW,MAAM;AAO9B,aAAO,WAAW;AACd,iBAAS,OAAO,OAAO,KAAK,IAAI,GAAGC,KAAI,KAAK,SAAS,GAAGA,KAAI,IAAI,EAAEA;AAC9D,cAAI,SAAS,KAAKA,SAAQ,KAAK,KAAK,KAAKA,SAAQ,UAAa,KAAK,KAAKA,SAAQ;AAC5E,mBAAO,KAAKA;AAAA,MACxB;AAAA,IACJ;AAeA,SAAK,cAAc,SAAS,SAAS,YAAY;AAQ7C,aAAO,SAASD,OAAM;AAClB,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE;AACrC,cAAI,WAAW,OAAOA;AAClB,mBAAO,KAAK,WAAW;AAAA,MACnC;AAAA,IACJ;AAkBA,SAAK,gBAAgB;AAAA,MACjB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAGA,SAAK,aAAa,WAAW;AACzB,UAAI,SAAS,KAAK;AAElB,UAAI,CAAC,QAAQ;AACT,aAAK,eAAe,KAAK,sBAAsB;AAC/C;AAAA,MACJ;AAGA,WAAK,eAAe,OAAO,SAAS,WAAW,QAAQ,OAAO,QAE1D,SAAS,YAAY,OAAO,UAAU;AAClC,eAAO,IAAI,OAAO,OAAO,QAAQ;AAAA,MACrC;AACJ,WAAK,sBAAsB,OAAO,eAE9B,SAAS,mBAAmB,MAAM;AAC9B,eAAO,IAAI,OAAO,IAAI;AAAA,MAC1B;AAAA,IACR;AAAA;AAAA;;;ACrbA;AAAA,sDAAAE,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAEjB,QAAI,OAAY;AAEhB,QAAI;AAEJ,QAAI,WAAY,KAAK;AAArB,QACIC,UAAY,KAAK;AADrB,QAEI,OAAY,KAAK;AAWrB,aAAS,GAAG,IAAI,KAAK,KAAK;AAMtB,WAAK,KAAK;AAMV,WAAK,MAAM;AAMX,WAAK,OAAO;AAMZ,WAAK,MAAM;AAAA,IACf;AAGA,aAAS,OAAO;AAAA,IAAC;AAUjB,aAAS,MAAM,QAAQ;AAMnB,WAAK,OAAO,OAAO;AAMnB,WAAK,OAAO,OAAO;AAMnB,WAAK,MAAM,OAAO;AAMlB,WAAK,OAAO,OAAO;AAAA,IACvB;AAOA,aAAS,SAAS;AAMd,WAAK,MAAM;AAMX,WAAK,OAAO,IAAI,GAAG,MAAM,GAAG,CAAC;AAM7B,WAAK,OAAO,KAAK;AAMjB,WAAK,SAAS;AAAA,IAOlB;AAEA,QAAIC,UAAS,SAASA,UAAS;AAC3B,aAAO,KAAK,SACN,SAAS,sBAAsB;AAC7B,gBAAQ,OAAO,SAAS,SAAS,gBAAgB;AAC7C,iBAAO,IAAI,aAAa;AAAA,QAC5B,GAAG;AAAA,MACP,IAEE,SAAS,eAAe;AACtB,eAAO,IAAI,OAAO;AAAA,MACtB;AAAA,IACR;AAOA,WAAO,SAASA,QAAO;AAOvB,WAAO,QAAQ,SAASC,OAAM,MAAM;AAChC,aAAO,IAAI,KAAK,MAAM,IAAI;AAAA,IAC9B;AAIA,QAAI,KAAK,UAAU;AACf,aAAO,QAAQ,KAAK,KAAK,OAAO,OAAO,KAAK,MAAM,UAAU,QAAQ;AAUxE,WAAO,UAAU,QAAQ,SAAS,KAAK,IAAI,KAAK,KAAK;AACjD,WAAK,OAAO,KAAK,KAAK,OAAO,IAAI,GAAG,IAAI,KAAK,GAAG;AAChD,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAEA,aAAS,UAAU,KAAKC,MAAK,KAAK;AAC9B,MAAAA,KAAI,OAAO,MAAM;AAAA,IACrB;AAEA,aAAS,cAAc,KAAKA,MAAK,KAAK;AAClC,aAAO,MAAM,KAAK;AACd,QAAAA,KAAI,SAAS,MAAM,MAAM;AACzB,iBAAS;AAAA,MACb;AACA,MAAAA,KAAI,OAAO;AAAA,IACf;AAWA,aAAS,SAAS,KAAK,KAAK;AACxB,WAAK,MAAM;AACX,WAAK,OAAO;AACZ,WAAK,MAAM;AAAA,IACf;AAEA,aAAS,YAAY,OAAO,OAAO,GAAG,SAAS;AAC/C,aAAS,UAAU,KAAK;AAOxB,WAAO,UAAU,SAAS,SAAS,aAAa,OAAO;AAGnD,WAAK,QAAQ,KAAK,OAAO,KAAK,KAAK,OAAO,IAAI;AAAA,SACzC,QAAQ,UAAU,KACT,MAAY,IACpB,QAAQ,QAAY,IACpB,QAAQ,UAAY,IACpB,QAAQ,YAAY,IACA;AAAA,QAC1B;AAAA,MAAK,GAAG;AACR,aAAO;AAAA,IACX;AAQA,WAAO,UAAU,QAAQ,SAAS,YAAY,OAAO;AACjD,aAAO,QAAQ,IACT,KAAK,MAAM,eAAe,IAAI,SAAS,WAAW,KAAK,CAAC,IACxD,KAAK,OAAO,KAAK;AAAA,IAC3B;AAOA,WAAO,UAAU,SAAS,SAAS,aAAa,OAAO;AACnD,aAAO,KAAK,QAAQ,SAAS,IAAI,SAAS,QAAQ,CAAC;AAAA,IACvD;AAEA,aAAS,cAAc,KAAKA,MAAK,KAAK;AAClC,aAAO,IAAI,IAAI;AACX,QAAAA,KAAI,SAAS,IAAI,KAAK,MAAM;AAC5B,YAAI,MAAM,IAAI,OAAO,IAAI,IAAI,MAAM,QAAQ;AAC3C,YAAI,QAAQ;AAAA,MAChB;AACA,aAAO,IAAI,KAAK,KAAK;AACjB,QAAAA,KAAI,SAAS,IAAI,KAAK,MAAM;AAC5B,YAAI,KAAK,IAAI,OAAO;AAAA,MACxB;AACA,MAAAA,KAAI,SAAS,IAAI;AAAA,IACrB;AAQA,WAAO,UAAU,SAAS,SAAS,aAAa,OAAO;AACnD,UAAI,OAAO,SAAS,KAAK,KAAK;AAC9B,aAAO,KAAK,MAAM,eAAe,KAAK,OAAO,GAAG,IAAI;AAAA,IACxD;AASA,WAAO,UAAU,QAAQ,OAAO,UAAU;AAQ1C,WAAO,UAAU,SAAS,SAAS,aAAa,OAAO;AACnD,UAAI,OAAO,SAAS,KAAK,KAAK,EAAE,SAAS;AACzC,aAAO,KAAK,MAAM,eAAe,KAAK,OAAO,GAAG,IAAI;AAAA,IACxD;AAOA,WAAO,UAAU,OAAO,SAAS,WAAW,OAAO;AAC/C,aAAO,KAAK,MAAM,WAAW,GAAG,QAAQ,IAAI,CAAC;AAAA,IACjD;AAEA,aAAS,aAAa,KAAKA,MAAK,KAAK;AACjC,MAAAA,KAAI,OAAY,MAAc;AAC9B,MAAAA,KAAI,MAAM,KAAM,QAAQ,IAAM;AAC9B,MAAAA,KAAI,MAAM,KAAM,QAAQ,KAAM;AAC9B,MAAAA,KAAI,MAAM,KAAM,QAAQ;AAAA,IAC5B;AAOA,WAAO,UAAU,UAAU,SAAS,cAAc,OAAO;AACrD,aAAO,KAAK,MAAM,cAAc,GAAG,UAAU,CAAC;AAAA,IAClD;AAQA,WAAO,UAAU,WAAW,OAAO,UAAU;AAQ7C,WAAO,UAAU,UAAU,SAAS,cAAc,OAAO;AACrD,UAAI,OAAO,SAAS,KAAK,KAAK;AAC9B,aAAO,KAAK,MAAM,cAAc,GAAG,KAAK,EAAE,EAAE,MAAM,cAAc,GAAG,KAAK,EAAE;AAAA,IAC9E;AASA,WAAO,UAAU,WAAW,OAAO,UAAU;AAQ7C,WAAO,UAAU,QAAQ,SAAS,YAAY,OAAO;AACjD,aAAO,KAAK,MAAM,KAAK,MAAM,cAAc,GAAG,KAAK;AAAA,IACvD;AAQA,WAAO,UAAU,SAAS,SAAS,aAAa,OAAO;AACnD,aAAO,KAAK,MAAM,KAAK,MAAM,eAAe,GAAG,KAAK;AAAA,IACxD;AAEA,QAAI,aAAa,KAAK,MAAM,UAAU,MAChC,SAAS,eAAe,KAAKA,MAAK,KAAK;AACrC,MAAAA,KAAI,IAAI,KAAK,GAAG;AAAA,IACpB,IAEE,SAAS,eAAe,KAAKA,MAAK,KAAK;AACrC,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE;AAC9B,QAAAA,KAAI,MAAM,KAAK,IAAI;AAAA,IAC3B;AAOJ,WAAO,UAAU,QAAQ,SAAS,YAAY,OAAO;AACjD,UAAI,MAAM,MAAM,WAAW;AAC3B,UAAI,CAAC;AACD,eAAO,KAAK,MAAM,WAAW,GAAG,CAAC;AACrC,UAAI,KAAK,SAAS,KAAK,GAAG;AACtB,YAAIA,OAAM,OAAO,MAAM,MAAMH,QAAO,OAAO,KAAK,CAAC;AACjD,QAAAA,QAAO,OAAO,OAAOG,MAAK,CAAC;AAC3B,gBAAQA;AAAA,MACZ;AACA,aAAO,KAAK,OAAO,GAAG,EAAE,MAAM,YAAY,KAAK,KAAK;AAAA,IACxD;AAOA,WAAO,UAAU,SAAS,SAAS,aAAa,OAAO;AACnD,UAAI,MAAM,KAAK,OAAO,KAAK;AAC3B,aAAO,MACD,KAAK,OAAO,GAAG,EAAE,MAAM,KAAK,OAAO,KAAK,KAAK,IAC7C,KAAK,MAAM,WAAW,GAAG,CAAC;AAAA,IACpC;AAOA,WAAO,UAAU,OAAO,SAAS,OAAO;AACpC,WAAK,SAAS,IAAI,MAAM,IAAI;AAC5B,WAAK,OAAO,KAAK,OAAO,IAAI,GAAG,MAAM,GAAG,CAAC;AACzC,WAAK,MAAM;AACX,aAAO;AAAA,IACX;AAMA,WAAO,UAAU,QAAQ,SAAS,QAAQ;AACtC,UAAI,KAAK,QAAQ;AACb,aAAK,OAAS,KAAK,OAAO;AAC1B,aAAK,OAAS,KAAK,OAAO;AAC1B,aAAK,MAAS,KAAK,OAAO;AAC1B,aAAK,SAAS,KAAK,OAAO;AAAA,MAC9B,OAAO;AACH,aAAK,OAAO,KAAK,OAAO,IAAI,GAAG,MAAM,GAAG,CAAC;AACzC,aAAK,MAAO;AAAA,MAChB;AACA,aAAO;AAAA,IACX;AAMA,WAAO,UAAU,SAAS,SAAS,SAAS;AACxC,UAAI,OAAO,KAAK,MACZ,OAAO,KAAK,MACZ,MAAO,KAAK;AAChB,WAAK,MAAM,EAAE,OAAO,GAAG;AACvB,UAAI,KAAK;AACL,aAAK,KAAK,OAAO,KAAK;AACtB,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MAChB;AACA,aAAO;AAAA,IACX;AAMA,WAAO,UAAU,SAAS,SAAS,SAAS;AACxC,UAAI,OAAO,KAAK,KAAK,MACjBA,OAAO,KAAK,YAAY,MAAM,KAAK,GAAG,GACtC,MAAO;AACX,aAAO,MAAM;AACT,aAAK,GAAG,KAAK,KAAKA,MAAK,GAAG;AAC1B,eAAO,KAAK;AACZ,eAAO,KAAK;AAAA,MAChB;AAEA,aAAOA;AAAA,IACX;AAEA,WAAO,aAAa,SAAS,eAAe;AACxC,qBAAe;AACf,aAAO,SAASF,QAAO;AACvB,mBAAa,WAAW;AAAA,IAC5B;AAAA;AAAA;;;AChdA;AAAA,6DAAAG,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAGjB,QAAI,SAAS;AACb,KAAC,aAAa,YAAY,OAAO,OAAO,OAAO,SAAS,GAAG,cAAc;AAEzE,QAAI,OAAO;AAQX,aAAS,eAAe;AACpB,aAAO,KAAK,IAAI;AAAA,IACpB;AAEA,iBAAa,aAAa,WAAY;AAOlC,mBAAa,QAAQ,KAAK;AAE1B,mBAAa,mBAAmB,KAAK,UAAU,KAAK,OAAO,qBAAqB,cAAc,KAAK,OAAO,UAAU,IAAI,SAAS,QAC3H,SAAS,qBAAqB,KAAKC,MAAK,KAAK;AAC7C,QAAAA,KAAI,IAAI,KAAK,GAAG;AAAA,MAElB,IAEE,SAAS,sBAAsB,KAAKA,MAAK,KAAK;AAC9C,YAAI,IAAI;AACN,cAAI,KAAKA,MAAK,KAAK,GAAG,IAAI,MAAM;AAAA;AAC7B,mBAAS,IAAI,GAAG,IAAI,IAAI;AAC3B,YAAAA,KAAI,SAAS,IAAI;AAAA,MACrB;AAAA,IACR;AAMA,iBAAa,UAAU,QAAQ,SAAS,mBAAmB,OAAO;AAC9D,UAAI,KAAK,SAAS,KAAK;AACnB,gBAAQ,KAAK,aAAa,OAAO,QAAQ;AAC7C,UAAI,MAAM,MAAM,WAAW;AAC3B,WAAK,OAAO,GAAG;AACf,UAAI;AACA,aAAK,MAAM,aAAa,kBAAkB,KAAK,KAAK;AACxD,aAAO;AAAA,IACX;AAEA,aAAS,kBAAkB,KAAKA,MAAK,KAAK;AACtC,UAAI,IAAI,SAAS;AACb,aAAK,KAAK,MAAM,KAAKA,MAAK,GAAG;AAAA,eACxBA,KAAI;AACT,QAAAA,KAAI,UAAU,KAAK,GAAG;AAAA;AAEtB,QAAAA,KAAI,MAAM,KAAK,GAAG;AAAA,IAC1B;AAKA,iBAAa,UAAU,SAAS,SAAS,oBAAoB,OAAO;AAChE,UAAI,MAAM,KAAK,OAAO,WAAW,KAAK;AACtC,WAAK,OAAO,GAAG;AACf,UAAI;AACA,aAAK,MAAM,mBAAmB,KAAK,KAAK;AAC5C,aAAO;AAAA,IACX;AAUA,iBAAa,WAAW;AAAA;AAAA;;;ACpFxB;AAAA,sDAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAEjB,QAAI,OAAY;AAEhB,QAAI;AAEJ,QAAI,WAAY,KAAK;AAArB,QACI,OAAY,KAAK;AAGrB,aAAS,gBAAgB,QAAQ,aAAa;AAC1C,aAAO,WAAW,yBAAyB,OAAO,MAAM,SAAS,eAAe,KAAK,QAAQ,OAAO,GAAG;AAAA,IAC3G;AAQA,aAAS,OAAOC,SAAQ;AAMpB,WAAK,MAAMA;AAMX,WAAK,MAAM;AAMX,WAAK,MAAMA,QAAO;AAAA,IACtB;AAEA,QAAI,eAAe,OAAO,eAAe,cACnC,SAAS,mBAAmBA,SAAQ;AAClC,UAAIA,mBAAkB,cAAc,MAAM,QAAQA,OAAM;AACpD,eAAO,IAAI,OAAOA,OAAM;AAC5B,YAAM,MAAM,gBAAgB;AAAA,IAChC,IAEE,SAASC,cAAaD,SAAQ;AAC5B,UAAI,MAAM,QAAQA,OAAM;AACpB,eAAO,IAAI,OAAOA,OAAM;AAC5B,YAAM,MAAM,gBAAgB;AAAA,IAChC;AAEJ,QAAIE,UAAS,SAASA,UAAS;AAC3B,aAAO,KAAK,SACN,SAAS,oBAAoBF,SAAQ;AACnC,gBAAQ,OAAO,SAAS,SAAS,cAAcA,SAAQ;AACnD,iBAAO,KAAK,OAAO,SAASA,OAAM,IAC5B,IAAI,aAAaA,OAAM,IAEvB,aAAaA,OAAM;AAAA,QAC7B,GAAGA,OAAM;AAAA,MACb,IAEE;AAAA,IACV;AASA,WAAO,SAASE,QAAO;AAEvB,WAAO,UAAU,SAAS,KAAK,MAAM,UAAU,YAAuC,KAAK,MAAM,UAAU;AAO3G,WAAO,UAAU,SAAU,SAAS,oBAAoB;AACpD,UAAI,QAAQ;AACZ,aAAO,SAAS,cAAc;AAC1B,iBAAkB,KAAK,IAAI,KAAK,OAAO,SAAgB;AAAG,YAAI,KAAK,IAAI,KAAK,SAAS;AAAK,iBAAO;AACjG,iBAAS,SAAS,KAAK,IAAI,KAAK,OAAO,QAAS,OAAO;AAAG,YAAI,KAAK,IAAI,KAAK,SAAS;AAAK,iBAAO;AACjG,iBAAS,SAAS,KAAK,IAAI,KAAK,OAAO,QAAQ,QAAQ;AAAG,YAAI,KAAK,IAAI,KAAK,SAAS;AAAK,iBAAO;AACjG,iBAAS,SAAS,KAAK,IAAI,KAAK,OAAO,QAAQ,QAAQ;AAAG,YAAI,KAAK,IAAI,KAAK,SAAS;AAAK,iBAAO;AACjG,iBAAS,SAAS,KAAK,IAAI,KAAK,OAAQ,OAAO,QAAQ;AAAG,YAAI,KAAK,IAAI,KAAK,SAAS;AAAK,iBAAO;AAGjG,aAAK,KAAK,OAAO,KAAK,KAAK,KAAK;AAC5B,eAAK,MAAM,KAAK;AAChB,gBAAM,gBAAgB,MAAM,EAAE;AAAA,QAClC;AACA,eAAO;AAAA,MACX;AAAA,IACJ,EAAG;AAMH,WAAO,UAAU,QAAQ,SAAS,aAAa;AAC3C,aAAO,KAAK,OAAO,IAAI;AAAA,IAC3B;AAMA,WAAO,UAAU,SAAS,SAAS,cAAc;AAC7C,UAAI,QAAQ,KAAK,OAAO;AACxB,aAAO,UAAU,IAAI,EAAE,QAAQ,KAAK;AAAA,IACxC;AAIA,aAAS,iBAAiB;AAEtB,UAAI,OAAO,IAAI,SAAS,GAAG,CAAC;AAC5B,UAAI,IAAI;AACR,UAAI,KAAK,MAAM,KAAK,MAAM,GAAG;AACzB,eAAO,IAAI,GAAG,EAAE,GAAG;AAEf,eAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,QAAQ,IAAI,OAAO;AAC9D,cAAI,KAAK,IAAI,KAAK,SAAS;AACvB,mBAAO;AAAA,QACf;AAEA,aAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,QAAQ,QAAQ;AAC3D,aAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,QAAS,OAAO;AAC3D,YAAI,KAAK,IAAI,KAAK,SAAS;AACvB,iBAAO;AACX,YAAI;AAAA,MACR,OAAO;AACH,eAAO,IAAI,GAAG,EAAE,GAAG;AAEf,cAAI,KAAK,OAAO,KAAK;AACjB,kBAAM,gBAAgB,IAAI;AAE9B,eAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,QAAQ,IAAI,OAAO;AAC9D,cAAI,KAAK,IAAI,KAAK,SAAS;AACvB,mBAAO;AAAA,QACf;AAEA,aAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,SAAS,QAAQ,IAAI,OAAO;AAChE,eAAO;AAAA,MACX;AACA,UAAI,KAAK,MAAM,KAAK,MAAM,GAAG;AACzB,eAAO,IAAI,GAAG,EAAE,GAAG;AAEf,eAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,QAAQ,IAAI,IAAI,OAAO;AAClE,cAAI,KAAK,IAAI,KAAK,SAAS;AACvB,mBAAO;AAAA,QACf;AAAA,MACJ,OAAO;AACH,eAAO,IAAI,GAAG,EAAE,GAAG;AAEf,cAAI,KAAK,OAAO,KAAK;AACjB,kBAAM,gBAAgB,IAAI;AAE9B,eAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,QAAQ,IAAI,IAAI,OAAO;AAClE,cAAI,KAAK,IAAI,KAAK,SAAS;AACvB,mBAAO;AAAA,QACf;AAAA,MACJ;AAEA,YAAM,MAAM,yBAAyB;AAAA,IACzC;AA6BA,WAAO,UAAU,OAAO,SAAS,YAAY;AACzC,aAAO,KAAK,OAAO,MAAM;AAAA,IAC7B;AAEA,aAAS,gBAAgBC,MAAK,KAAK;AAC/B,cAAQA,KAAI,MAAM,KACVA,KAAI,MAAM,MAAM,IAChBA,KAAI,MAAM,MAAM,KAChBA,KAAI,MAAM,MAAM,QAAQ;AAAA,IACpC;AAMA,WAAO,UAAU,UAAU,SAAS,eAAe;AAG/C,UAAI,KAAK,MAAM,IAAI,KAAK;AACpB,cAAM,gBAAgB,MAAM,CAAC;AAEjC,aAAO,gBAAgB,KAAK,KAAK,KAAK,OAAO,CAAC;AAAA,IAClD;AAMA,WAAO,UAAU,WAAW,SAAS,gBAAgB;AAGjD,UAAI,KAAK,MAAM,IAAI,KAAK;AACpB,cAAM,gBAAgB,MAAM,CAAC;AAEjC,aAAO,gBAAgB,KAAK,KAAK,KAAK,OAAO,CAAC,IAAI;AAAA,IACtD;AAIA,aAAS,cAAgC;AAGrC,UAAI,KAAK,MAAM,IAAI,KAAK;AACpB,cAAM,gBAAgB,MAAM,CAAC;AAEjC,aAAO,IAAI,SAAS,gBAAgB,KAAK,KAAK,KAAK,OAAO,CAAC,GAAG,gBAAgB,KAAK,KAAK,KAAK,OAAO,CAAC,CAAC;AAAA,IAC1G;AAuBA,WAAO,UAAU,QAAQ,SAAS,aAAa;AAG3C,UAAI,KAAK,MAAM,IAAI,KAAK;AACpB,cAAM,gBAAgB,MAAM,CAAC;AAEjC,UAAI,QAAQ,KAAK,MAAM,YAAY,KAAK,KAAK,KAAK,GAAG;AACrD,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAOA,WAAO,UAAU,SAAS,SAAS,cAAc;AAG7C,UAAI,KAAK,MAAM,IAAI,KAAK;AACpB,cAAM,gBAAgB,MAAM,CAAC;AAEjC,UAAI,QAAQ,KAAK,MAAM,aAAa,KAAK,KAAK,KAAK,GAAG;AACtD,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAMA,WAAO,UAAU,QAAQ,SAAS,aAAa;AAC3C,UAAIC,UAAS,KAAK,OAAO,GACrB,QAAS,KAAK,KACd,MAAS,KAAK,MAAMA;AAGxB,UAAI,MAAM,KAAK;AACX,cAAM,gBAAgB,MAAMA,OAAM;AAEtC,WAAK,OAAOA;AACZ,UAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,eAAO,KAAK,IAAI,MAAM,OAAO,GAAG;AACpC,aAAO,UAAU,MACX,IAAI,KAAK,IAAI,YAAY,CAAC,IAC1B,KAAK,OAAO,KAAK,KAAK,KAAK,OAAO,GAAG;AAAA,IAC/C;AAMA,WAAO,UAAU,SAAS,SAAS,cAAc;AAC7C,UAAI,QAAQ,KAAK,MAAM;AACvB,aAAO,KAAK,KAAK,OAAO,GAAG,MAAM,MAAM;AAAA,IAC3C;AAOA,WAAO,UAAU,OAAO,SAAS,KAAKA,SAAQ;AAC1C,UAAI,OAAOA,YAAW,UAAU;AAE5B,YAAI,KAAK,MAAMA,UAAS,KAAK;AACzB,gBAAM,gBAAgB,MAAMA,OAAM;AACtC,aAAK,OAAOA;AAAA,MAChB,OAAO;AACH,WAAG;AAEC,cAAI,KAAK,OAAO,KAAK;AACjB,kBAAM,gBAAgB,IAAI;AAAA,QAClC,SAAS,KAAK,IAAI,KAAK,SAAS;AAAA,MACpC;AACA,aAAO;AAAA,IACX;AAOA,WAAO,UAAU,WAAW,SAAS,UAAU;AAC3C,cAAQ;AAAA,aACC;AACD,eAAK,KAAK;AACV;AAAA,aACC;AACD,eAAK,KAAK,CAAC;AACX;AAAA,aACC;AACD,eAAK,KAAK,KAAK,OAAO,CAAC;AACvB;AAAA,aACC;AACD,kBAAQ,WAAW,KAAK,OAAO,IAAI,OAAO,GAAG;AACzC,iBAAK,SAAS,QAAQ;AAAA,UAC1B;AACA;AAAA,aACC;AACD,eAAK,KAAK,CAAC;AACX;AAAA;AAIA,gBAAM,MAAM,uBAAuB,WAAW,gBAAgB,KAAK,GAAG;AAAA;AAE9E,aAAO;AAAA,IACX;AAEA,WAAO,aAAa,SAAS,eAAe;AACxC,qBAAe;AACf,aAAO,SAASF,QAAO;AACvB,mBAAa,WAAW;AAExB,UAAI,KAAK,KAAK,OAAO,WAAsC;AAC3D,WAAK,MAAM,OAAO,WAAW;AAAA,QAEzB,OAAO,SAAS,aAAa;AACzB,iBAAO,eAAe,KAAK,IAAI,EAAE,IAAI,KAAK;AAAA,QAC9C;AAAA,QAEA,QAAQ,SAAS,cAAc;AAC3B,iBAAO,eAAe,KAAK,IAAI,EAAE,IAAI,IAAI;AAAA,QAC7C;AAAA,QAEA,QAAQ,SAAS,cAAc;AAC3B,iBAAO,eAAe,KAAK,IAAI,EAAE,SAAS,EAAE,IAAI,KAAK;AAAA,QACzD;AAAA,QAEA,SAAS,SAAS,eAAe;AAC7B,iBAAO,YAAY,KAAK,IAAI,EAAE,IAAI,IAAI;AAAA,QAC1C;AAAA,QAEA,UAAU,SAAS,gBAAgB;AAC/B,iBAAO,YAAY,KAAK,IAAI,EAAE,IAAI,KAAK;AAAA,QAC3C;AAAA,MAEJ,CAAC;AAAA,IACL;AAAA;AAAA;;;AC1ZA;AAAA,6DAAAG,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAGjB,QAAI,SAAS;AACb,KAAC,aAAa,YAAY,OAAO,OAAO,OAAO,SAAS,GAAG,cAAc;AAEzE,QAAI,OAAO;AASX,aAAS,aAAaC,SAAQ;AAC1B,aAAO,KAAK,MAAMA,OAAM;AAAA,IAO5B;AAEA,iBAAa,aAAa,WAAY;AAElC,UAAI,KAAK;AACL,qBAAa,UAAU,SAAS,KAAK,OAAO,UAAU;AAAA,IAC9D;AAMA,iBAAa,UAAU,SAAS,SAAS,qBAAqB;AAC1D,UAAI,MAAM,KAAK,OAAO;AACtB,aAAO,KAAK,IAAI,YACV,KAAK,IAAI,UAAU,KAAK,KAAK,KAAK,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC,IAC1E,KAAK,IAAI,SAAS,SAAS,KAAK,KAAK,KAAK,MAAM,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC;AAAA,IAC5F;AASA,iBAAa,WAAW;AAAA;AAAA;;;AClDxB;AAAA,2DAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU;AAEjB,QAAI,OAAO;AAGX,KAAC,QAAQ,YAAY,OAAO,OAAO,KAAK,aAAa,SAAS,GAAG,cAAc;AAmC/E,aAAS,QAAQ,SAAS,kBAAkB,mBAAmB;AAE3D,UAAI,OAAO,YAAY;AACnB,cAAM,UAAU,4BAA4B;AAEhD,WAAK,aAAa,KAAK,IAAI;AAM3B,WAAK,UAAU;AAMf,WAAK,mBAAmB,QAAQ,gBAAgB;AAMhD,WAAK,oBAAoB,QAAQ,iBAAiB;AAAA,IACtD;AAaA,YAAQ,UAAU,UAAU,SAAS,QAAQ,QAAQ,aAAa,cAAc,SAAS,UAAU;AAE/F,UAAI,CAAC;AACD,cAAM,UAAU,2BAA2B;AAE/C,UAAIC,QAAO;AACX,UAAI,CAAC;AACD,eAAO,KAAK,UAAU,SAASA,OAAM,QAAQ,aAAa,cAAc,OAAO;AAEnF,UAAI,CAACA,MAAK,SAAS;AACf,mBAAW,WAAW;AAAE,mBAAS,MAAM,eAAe,CAAC;AAAA,QAAG,GAAG,CAAC;AAC9D,eAAO;AAAA,MACX;AAEA,UAAI;AACA,eAAOA,MAAK;AAAA,UACR;AAAA,UACA,YAAYA,MAAK,mBAAmB,oBAAoB,UAAU,OAAO,EAAE,OAAO;AAAA,UAClF,SAAS,YAAY,KAAK,UAAU;AAEhC,gBAAI,KAAK;AACL,cAAAA,MAAK,KAAK,SAAS,KAAK,MAAM;AAC9B,qBAAO,SAAS,GAAG;AAAA,YACvB;AAEA,gBAAI,aAAa,MAAM;AACnB,cAAAA,MAAK,IAAqB,IAAI;AAC9B,qBAAO;AAAA,YACX;AAEA,gBAAI,EAAE,oBAAoB,eAAe;AACrC,kBAAI;AACA,2BAAW,aAAaA,MAAK,oBAAoB,oBAAoB,UAAU,QAAQ;AAAA,cAC3F,SAASC,MAAP;AACE,gBAAAD,MAAK,KAAK,SAASC,MAAK,MAAM;AAC9B,uBAAO,SAASA,IAAG;AAAA,cACvB;AAAA,YACJ;AAEA,YAAAD,MAAK,KAAK,QAAQ,UAAU,MAAM;AAClC,mBAAO,SAAS,MAAM,QAAQ;AAAA,UAClC;AAAA,QACJ;AAAA,MACJ,SAAS,KAAP;AACE,QAAAA,MAAK,KAAK,SAAS,KAAK,MAAM;AAC9B,mBAAW,WAAW;AAAE,mBAAS,GAAG;AAAA,QAAG,GAAG,CAAC;AAC3C,eAAO;AAAA,MACX;AAAA,IACJ;AAOA,YAAQ,UAAU,MAAM,SAAS,IAAI,YAAY;AAC7C,UAAI,KAAK,SAAS;AACd,YAAI,CAAC;AACD,eAAK,QAAQ,MAAM,MAAM,IAAI;AACjC,aAAK,UAAU;AACf,aAAK,KAAK,KAAK,EAAE,IAAI;AAAA,MACzB;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;AC7IA;AAAA,mDAAAE,UAAA;AAAA;AAMA,QAAI,MAAMA;AA6BV,QAAI,UAAU;AAAA;AAAA;;;ACnCd;AAAA,qDAAAC,UAAAC,SAAA;AAAA;AACA,IAAAA,QAAO,UAAU,CAAC;AAAA;AAAA;;;ACDlB;AAAA,6DAAAC,UAAA;AAAA;AACA,QAAI,WAAWA;AAQf,aAAS,QAAQ;AAGjB,aAAS,SAAe;AACxB,aAAS,eAAe;AACxB,aAAS,SAAe;AACxB,aAAS,eAAe;AAGxB,aAAS,OAAe;AACxB,aAAS,MAAe;AACxB,aAAS,QAAe;AACxB,aAAS,YAAeC;AAOxB,aAASA,aAAY;AACjB,eAAS,KAAK,WAAW;AACzB,eAAS,OAAO,WAAW,SAAS,YAAY;AAChD,eAAS,OAAO,WAAW,SAAS,YAAY;AAAA,IACpD;AAGA,IAAAA,WAAU;AAAA;AAAA;;;ACnCV,IAAAC,mBAAA;AAAA,mDAAAC,UAAAC,SAAA;AAAA;AAGA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACHjB;AAAA,+CAAAC,UAAAC,SAAA;AAAA;AASA,QAAMC,SAAQ,OAAO,WAAW;AAC9B,uBAAiB,SAAS,QAAQ;AAChC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAUC;AAAA;AAAA;;;ACjBjB;AAAA,8CAAAC,UAAAC,SAAA;AAAA;AASA,QAAMC,QAAO,OAAO,WAAW;AAC7B,UAAI;AAEJ,uBAAiB,SAAS,QAAQ;AAChC,cAAM;AAAA,MACR;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAUC;AAAA;AAAA;;;ACnBjB;AAAA,oDAAAC,UAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU,cAAY;AAE3B,UAAI,SAAS,OAAO;AAAgB,eAAO;AAG3C,UAAI,SAAS,WAAW;AACtB,eAAQ,mBAAoB;AAC1B,gBAAM,SAAS,SAAS,UAAU;AAElC,cAAI;AACF,mBAAO,MAAM;AACX,oBAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAC1C,kBAAI;AAAM;AACV,oBAAM;AAAA,YACR;AAAA,UACF,UAAE;AACA,mBAAO,YAAY;AAAA,UACrB;AAAA,QACF,EAAG;AAAA,MACL;AAEA,YAAM,IAAI,MAAM,gBAAgB;AAAA,IAClC;AAAA;AAAA;;;ACtBA;AAAA,iDAAAC,UAAAC,SAAA;AAAA;AAIA,QAAM,4BAA4B;AAMlC,aAASC,UAAU,MAAM;AACvB,UAAI,OAAO,KAAK,WAAW,YAAY;AAErC,eAAO,0BAA0B,KAAK,OAAO,CAAC;AAAA,MAChD;AAIA,aAAO,0BAA0B,IAAI,SAAS,IAAI,EAAE,IAAI;AAAA,IAC1D;AAEA,IAAAD,QAAO,UAAUC;AAAA;AAAA;;;ACrBjB;AAAA,yDAAAC,UAAAC,SAAA;AAAA,IAAAA,QAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,oJAAoJ,sBAAsB;AAAA,QACzL;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA,gEAAAC,UAAAC,SAAA;AAAA;AAEA,QAAMC,QAAO;AAQb,QAAM,YAAY,CAAC,KAAKC,aAAY;AAClC,aAAO;AAAA,QACL,MAAM,mBAAmB,IAAI,IAAI,GAAG,EAAE,SAAS,MAAM,GAAG,EAAE,IAAI,KAAK,EAAE;AAAA,QACrE,SAAS,eAAe,KAAKA,QAAO;AAAA,MACtC;AAAA,IACF;AAQA,oBAAiB,eAAgB,KAAKA,UAAS;AAC7C,YAAM,OAAO,IAAID,MAAK;AACtB,YAAM,WAAW,MAAM,KAAK,IAAI,KAAKC,QAAO;AAE5C,aAAQ,SAAS,SAAS;AAAA,IAC5B;AAEA,IAAAF,QAAO,UAAU;AAAA;AAAA;;;ACrBjB,IAAM,YAAY,CAACG,UAAS,QAAQ,OAAO,IAAI,MAAM,sBAAsBA,QAAO,CAAC;AAE5E,IAAM,aAAN,MAAiB;AAAA,EAMtB,YAAaC,UAAS;AAGpB,SAAK,eAAe,CAAC;AAIrB,SAAK,iBAAiB,CAAC;AAEvB,SAAK,YAAYA,SAAQ,YAAY;AAGrC,eAAWC,SAAQD,SAAQ,OAAO;AAChC,WAAK,QAAQC,KAAI;AAAA,IACnB;AAAA,EACF;AAAA,EAOA,QAASA,OAAM;AACb,QAAI,KAAK,aAAaA,MAAK,SAAS,KAAK,eAAeA,MAAK,SAAS;AACpE,YAAM,IAAI,MAAM,mCAAmCA,MAAK,OAAO;AAAA,IACjE;AAEA,SAAK,aAAaA,MAAK,QAAQA;AAC/B,SAAK,eAAeA,MAAK,UAAUA;AAAA,EACrC;AAAA,EAOA,WAAYA,OAAM;AAChB,WAAO,KAAK,aAAaA,MAAK;AAC9B,WAAO,KAAK,eAAeA,MAAK;AAAA,EAClC;AAAA,EAKA,MAAM,QAAS,cAAc;AAC3B,QAAI,KAAK,aAAa,eAAe;AACnC,aAAO,KAAK,aAAa;AAAA,IAC3B;AAEA,QAAI,KAAK,eAAe,eAAe;AACrC,aAAO,KAAK,eAAe;AAAA,IAC7B;AAGA,UAAMA,QAAO,MAAM,KAAK,UAAU,YAAY;AAE9C,QAAI,KAAK,aAAaA,MAAK,SAAS,QAAQ,KAAK,eAAeA,MAAK,WAAW,MAAM;AACpF,WAAK,QAAQA,KAAI;AAAA,IACnB;AAEA,WAAOA;AAAA,EACT;AAAA,EAEA,YAAa;AACX,WAAO,OAAO,OAAO,KAAK,YAAY;AAAA,EACxC;AACF;;;AC1EA,IAAM,aAAa,CAAC,eAAe,QAAQ,OAAO,IAAI,MAAM,uBAAuB,aAAa,CAAC;AAE1F,IAAM,cAAN,MAAkB;AAAA,EAMvB,YAAaC,UAAS;AAGpB,SAAK,gBAAgB,CAAC;AAItB,SAAK,gBAAgB,CAAC;AAEtB,SAAK,aAAaA,SAAQ,aAAa;AAGvC,eAAW,SAASA,SAAQ,QAAQ;AAClC,WAAK,SAAS,KAAK;AAAA,IACrB;AAAA,EACF;AAAA,EAOA,SAAU,OAAO;AACf,QAAI,KAAK,cAAc,MAAM,SAAS,KAAK,cAAc,MAAM,OAAO;AACpE,YAAM,IAAI,MAAM,sCAAsC,MAAM,OAAO;AAAA,IACrE;AAEA,SAAK,cAAc,MAAM,QAAQ;AACjC,SAAK,cAAc,MAAM,QAAQ;AAAA,EACnC;AAAA,EAOA,YAAa,OAAO;AAClB,WAAO,KAAK,cAAc,MAAM;AAChC,WAAO,KAAK,cAAc,MAAM;AAAA,EAClC;AAAA,EAKA,MAAM,SAAUC,OAAM;AACpB,UAAMC,SAAQ,OAAOD,UAAS,WAAW,KAAK,gBAAgB,KAAK;AAEnE,QAAIC,OAAMD,QAAO;AACf,aAAOC,OAAMD;AAAA,IACf;AAGA,UAAM,QAAQ,MAAM,KAAK,WAAWA,KAAI;AAExC,QAAIC,OAAMD,UAAS,MAAM;AACvB,WAAK,SAAS,KAAK;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,aAAc;AACZ,WAAO,OAAO,OAAO,KAAK,aAAa;AAAA,EACzC;AACF;;;ACxEA,IAAM,cAAc,CAAC,eAAe,QAAQ,OAAO,IAAI,MAAM,wBAAwB,aAAa,CAAC;AAE5F,IAAM,cAAN,MAAkB;AAAA,EAMvB,YAAaE,UAAS;AAGpB,SAAK,iBAAiB,CAAC;AAIvB,SAAK,iBAAiB,CAAC;AAEvB,SAAK,cAAcA,SAAQ,cAAc;AAGzC,eAAW,UAAUA,SAAQ,SAAS;AACpC,WAAK,UAAU,MAAM;AAAA,IACvB;AAAA,EACF;AAAA,EAOA,UAAW,QAAQ;AACjB,QAAI,KAAK,eAAe,OAAO,SAAS,KAAK,eAAe,OAAO,OAAO;AACxE,YAAM,IAAI,MAAM,sCAAsC,OAAO,OAAO;AAAA,IACtE;AAEA,SAAK,eAAe,OAAO,QAAQ;AACnC,SAAK,eAAe,OAAO,QAAQ;AAAA,EACrC;AAAA,EAOA,aAAc,QAAQ;AACpB,WAAO,KAAK,eAAe,OAAO;AAClC,WAAO,KAAK,eAAe,OAAO;AAAA,EACpC;AAAA,EAKA,MAAM,UAAWC,OAAM;AACrB,UAAMC,SAAQ,OAAOD,UAAS,WAAW,KAAK,iBAAiB,KAAK;AAEpE,QAAIC,OAAMD,QAAO;AACf,aAAOC,OAAMD;AAAA,IACf;AAGA,UAAM,SAAS,MAAM,KAAK,YAAYA,KAAI;AAE1C,QAAIC,OAAMD,UAAS,MAAM;AACvB,WAAK,UAAU,MAAM;AAAA,IACvB;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,cAAe;AACb,WAAO,OAAO,OAAO,KAAK,cAAc;AAAA,EAC1C;AACF;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAAE;AAAA,EAAA,cAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;;;ACAA,IAAI,WAAW;AACf,IAAI,MAAM;AAAV,IAAe,OAAO;AAAtB,IAA2B,SAAS,CAAC;AAArC,IAA2C,MAAM,KAAK,IAAI,GAAG,EAAE;AAC/D,SAAS,OAAO,KAAK,KAAK,QAAQ;AAChC,QAAM,OAAO,CAAC;AACd,WAAS,UAAU;AACnB,MAAI,YAAY;AAChB,SAAO,OAAO,KAAK;AACjB,QAAI,YAAY,MAAM,MAAM;AAC5B,WAAO;AAAA,EACT;AACA,SAAO,MAAM,QAAQ;AACnB,QAAI,YAAY,MAAM,MAAM;AAC5B,aAAS;AAAA,EACX;AACA,MAAI,UAAU,MAAM;AACpB,SAAO,QAAQ,SAAS,YAAY;AACpC,SAAO;AACT;AACA,IAAI,SAAS;AACb,IAAI,QAAQ;AAAZ,IAAiB,SAAS;AAC1B,SAAS,KAAKC,MAAK,QAAQ;AACzB,MAAI,MAAM,GAAG,SAAS,UAAU,GAAG,QAAQ,GAAG,UAAU,QAAQ,GAAG,IAAIA,KAAI;AAC3E,KAAG;AACD,QAAI,WAAW,GAAG;AAChB,WAAK,QAAQ;AACb,YAAM,IAAI,WAAW,yBAAyB;AAAA,IAChD;AACA,QAAIA,KAAI;AACR,WAAO,QAAQ,MAAM,IAAI,WAAW,SAAS,IAAI,UAAU,KAAK,IAAI,GAAG,KAAK;AAC5E,aAAS;AAAA,EACX,SAAS,KAAK;AACd,OAAK,QAAQ,UAAU;AACvB,SAAO;AACT;AACA,IAAI,KAAK,KAAK,IAAI,GAAG,CAAC;AACtB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,SAAS,SAAU,OAAO;AAC5B,SAAO,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI;AAClK;AACA,IAAI,SAAS;AAAA,EACX,QAAQ;AAAA,EACR;AAAA,EACA,gBAAgB;AAClB;AACA,IAAI,eAAe;AACnB,IAAO,iBAAQ;;;ACnDR,IAAMC,UAAS,CAAC,MAAM,SAAS,MAAM;AAC1C,QAAMC,QAAO,eAAO,OAAO,MAAM,MAAM;AACvC,SAAO;AAAA,IACLA;AAAA,IACA,eAAO,OAAO;AAAA,EAChB;AACF;AACO,IAAM,WAAW,CAAC,KAAK,QAAQ,SAAS,MAAM;AACnD,iBAAO,OAAO,KAAK,QAAQ,MAAM;AACjC,SAAO;AACT;AACO,IAAM,iBAAiB,SAAO;AACnC,SAAO,eAAO,eAAe,GAAG;AAClC;;;ACdA,IAAM,QAAQ,IAAI,WAAW,CAAC;AAM9B,IAAM,SAAS,CAAC,IAAI,OAAO;AACzB,MAAI,OAAO;AACT,WAAO;AACT,MAAI,GAAG,eAAe,GAAG,YAAY;AACnC,WAAO;AAAA,EACT;AACA,WAAS,KAAK,GAAG,KAAK,GAAG,YAAY,MAAM;AACzC,QAAI,GAAG,QAAQ,GAAG,KAAK;AACrB,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAM,SAAS,OAAK;AAClB,MAAI,aAAa,cAAc,EAAE,YAAY,SAAS;AACpD,WAAO;AACT,MAAI,aAAa;AACf,WAAO,IAAI,WAAW,CAAC;AACzB,MAAI,YAAY,OAAO,CAAC,GAAG;AACzB,WAAO,IAAI,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAAA,EAC5D;AACA,QAAM,IAAI,MAAM,mCAAmC;AACrD;AAEA,IAAM,aAAa,SAAO,IAAI,YAAY,EAAE,OAAO,GAAG;AACtD,IAAM,WAAW,OAAK,IAAI,YAAY,EAAE,OAAO,CAAC;;;AC1BzC,IAAM,SAAS,CAACC,OAAMC,YAAW;AACtC,QAAM,OAAOA,QAAO;AACpB,QAAM,aAAoB,eAAeD,KAAI;AAC7C,QAAM,eAAe,aAAoB,eAAe,IAAI;AAC5D,QAAM,QAAQ,IAAI,WAAW,eAAe,IAAI;AAChD,EAAO,SAASA,OAAM,OAAO,CAAC;AAC9B,EAAO,SAAS,MAAM,OAAO,UAAU;AACvC,QAAM,IAAIC,SAAQ,YAAY;AAC9B,SAAO,IAAI,OAAOD,OAAM,MAAMC,SAAQ,KAAK;AAC7C;AACO,IAAMC,UAAS,eAAa;AACjC,QAAM,QAAQ,OAAO,SAAS;AAC9B,QAAM,CAACF,OAAM,UAAU,IAAWE,QAAO,KAAK;AAC9C,QAAM,CAAC,MAAM,YAAY,IAAWA,QAAO,MAAM,SAAS,UAAU,CAAC;AACrE,QAAMD,UAAS,MAAM,SAAS,aAAa,YAAY;AACvD,MAAIA,QAAO,eAAe,MAAM;AAC9B,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACpC;AACA,SAAO,IAAI,OAAOD,OAAM,MAAMC,SAAQ,KAAK;AAC7C;AACO,IAAME,UAAS,CAAC,GAAG,MAAM;AAC9B,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT,OAAO;AACL,WAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,OAAW,EAAE,OAAO,EAAE,KAAK;AAAA,EAC9E;AACF;AACO,IAAM,SAAN,MAAa;AAAA,EAClB,YAAYH,OAAM,MAAMC,SAAQ,OAAO;AACrC,SAAK,OAAOD;AACZ,SAAK,OAAO;AACZ,SAAK,SAASC;AACd,SAAK,QAAQ;AAAA,EACf;AACF;;;ACvCA;AAAA;AAAA;AAAA;AAAA;;;ACAA,SAAS,KAAK,UAAUG,OAAM;AAC5B,MAAI,SAAS,UAAU,KAAK;AAC1B,UAAM,IAAI,UAAU,mBAAmB;AAAA,EACzC;AACA,MAAI,WAAW,IAAI,WAAW,GAAG;AACjC,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,aAAS,KAAK;AAAA,EAChB;AACA,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,QAAI,IAAI,SAAS,OAAO,CAAC;AACzB,QAAI,KAAK,EAAE,WAAW,CAAC;AACvB,QAAI,SAAS,QAAQ,KAAK;AACxB,YAAM,IAAI,UAAU,IAAI,eAAe;AAAA,IACzC;AACA,aAAS,MAAM;AAAA,EACjB;AACA,MAAI,OAAO,SAAS;AACpB,MAAI,SAAS,SAAS,OAAO,CAAC;AAC9B,MAAI,SAAS,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG;AAC1C,MAAI,UAAU,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI;AAC3C,WAASC,SAAO,QAAQ;AACtB,QAAI,kBAAkB;AAAW;AAAA,aACxB,YAAY,OAAO,MAAM,GAAG;AACnC,eAAS,IAAI,WAAW,OAAO,QAAQ,OAAO,YAAY,OAAO,UAAU;AAAA,IAC7E,WAAW,MAAM,QAAQ,MAAM,GAAG;AAChC,eAAS,WAAW,KAAK,MAAM;AAAA,IACjC;AACA,QAAI,EAAE,kBAAkB,aAAa;AACnC,YAAM,IAAI,UAAU,qBAAqB;AAAA,IAC3C;AACA,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO;AAAA,IACT;AACA,QAAI,SAAS;AACb,QAAIC,UAAS;AACb,QAAI,SAAS;AACb,QAAI,OAAO,OAAO;AAClB,WAAO,WAAW,QAAQ,OAAO,YAAY,GAAG;AAC9C;AACA;AAAA,IACF;AACA,QAAI,QAAQ,OAAO,UAAU,UAAU,MAAM;AAC7C,QAAI,MAAM,IAAI,WAAW,IAAI;AAC7B,WAAO,WAAW,MAAM;AACtB,UAAI,QAAQ,OAAO;AACnB,UAAIC,KAAI;AACR,eAAS,MAAM,OAAO,IAAI,UAAU,KAAKA,KAAID,YAAW,QAAQ,IAAI,OAAOC,MAAK;AAC9E,iBAAS,MAAM,IAAI,SAAS;AAC5B,YAAI,OAAO,QAAQ,SAAS;AAC5B,gBAAQ,QAAQ,SAAS;AAAA,MAC3B;AACA,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,gBAAgB;AAAA,MAClC;AACA,MAAAD,UAASC;AACT;AAAA,IACF;AACA,QAAI,MAAM,OAAOD;AACjB,WAAO,QAAQ,QAAQ,IAAI,SAAS,GAAG;AACrC;AAAA,IACF;AACA,QAAI,MAAM,OAAO,OAAO,MAAM;AAC9B,WAAO,MAAM,MAAM,EAAE,KAAK;AACxB,aAAO,SAAS,OAAO,IAAI,IAAI;AAAA,IACjC;AACA,WAAO;AAAA,EACT;AACA,WAAS,aAAa,QAAQ;AAC5B,QAAI,OAAO,WAAW,UAAU;AAC9B,YAAM,IAAI,UAAU,iBAAiB;AAAA,IACvC;AACA,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO,IAAI,WAAW;AAAA,IACxB;AACA,QAAI,MAAM;AACV,QAAI,OAAO,SAAS,KAAK;AACvB;AAAA,IACF;AACA,QAAI,SAAS;AACb,QAAIA,UAAS;AACb,WAAO,OAAO,SAAS,QAAQ;AAC7B;AACA;AAAA,IACF;AACA,QAAI,QAAQ,OAAO,SAAS,OAAO,SAAS,MAAM;AAClD,QAAI,OAAO,IAAI,WAAW,IAAI;AAC9B,WAAO,OAAO,MAAM;AAClB,UAAI,QAAQ,SAAS,OAAO,WAAW,GAAG;AAC1C,UAAI,UAAU,KAAK;AACjB;AAAA,MACF;AACA,UAAIC,KAAI;AACR,eAAS,MAAM,OAAO,IAAI,UAAU,KAAKA,KAAID,YAAW,QAAQ,IAAI,OAAOC,MAAK;AAC9E,iBAAS,OAAO,KAAK,SAAS;AAC9B,aAAK,OAAO,QAAQ,QAAQ;AAC5B,gBAAQ,QAAQ,QAAQ;AAAA,MAC1B;AACA,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,gBAAgB;AAAA,MAClC;AACA,MAAAD,UAASC;AACT;AAAA,IACF;AACA,QAAI,OAAO,SAAS,KAAK;AACvB;AAAA,IACF;AACA,QAAI,MAAM,OAAOD;AACjB,WAAO,QAAQ,QAAQ,KAAK,SAAS,GAAG;AACtC;AAAA,IACF;AACA,QAAI,MAAM,IAAI,WAAW,UAAU,OAAO,IAAI;AAC9C,QAAIE,KAAI;AACR,WAAO,QAAQ,MAAM;AACnB,UAAIA,QAAO,KAAK;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AACA,WAASC,SAAOC,SAAQ;AACtB,QAAIC,UAAS,aAAaD,OAAM;AAChC,QAAIC,SAAQ;AACV,aAAOA;AAAA,IACT;AACA,UAAM,IAAI,MAAM,OAAQP,iBAAiB;AAAA,EAC3C;AACA,SAAO;AAAA,IACL,QAAQC;AAAA,IACR;AAAA,IACA,QAAQI;AAAA,EACV;AACF;AACA,IAAI,MAAM;AACV,IAAI,kCAAkC;AACtC,IAAO,iBAAQ;;;AClIf,IAAM,UAAN,MAAc;AAAA,EACZ,YAAYG,OAAM,QAAQ,YAAY;AACpC,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AACZ,QAAI,iBAAiB,YAAY;AAC/B,aAAO,GAAI,KAAK,SAAW,KAAK,WAAW,KAAK;AAAA,IAClD,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AACF;AACA,IAAM,UAAN,MAAc;AAAA,EACZ,YAAYA,OAAM,QAAQ,YAAY;AACpC,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,QAAI,OAAO,YAAY,CAAC,MAAM,QAAW;AACvC,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AACA,SAAK,kBAAkB,OAAO,YAAY,CAAC;AAC3C,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,OAAO,MAAM;AACX,QAAI,OAAO,SAAS,UAAU;AAC5B,UAAI,KAAK,YAAY,CAAC,MAAM,KAAK,iBAAiB;AAChD,cAAM,MAAM,qCAAsC,KAAK,UAAU,IAAI,MAAQ,KAAK,mDAAqD,KAAK,QAAS;AAAA,MACvJ;AACA,aAAO,KAAK,WAAW,KAAK,MAAM,KAAK,OAAO,MAAM,CAAC;AAAA,IACvD,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AAAA,EACA,GAAG,SAAS;AACV,WAAO,GAAG,MAAM,OAAO;AAAA,EACzB;AACF;AACA,IAAM,kBAAN,MAAsB;AAAA,EACpB,YAAYC,WAAU;AACpB,SAAK,WAAWA;AAAA,EAClB;AAAA,EACA,GAAG,SAAS;AACV,WAAO,GAAG,MAAM,OAAO;AAAA,EACzB;AAAA,EACA,OAAO,OAAO;AACZ,UAAM,SAAS,MAAM;AACrB,UAAM,UAAU,KAAK,SAAS;AAC9B,QAAI,SAAS;AACX,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC7B,OAAO;AACL,YAAM,WAAW,qCAAsC,KAAK,UAAU,KAAK,gCAAkC,OAAO,KAAK,KAAK,QAAQ,iBAAkB;AAAA,IAC1J;AAAA,EACF;AACF;AACO,IAAM,KAAK,CAAC,MAAM,UAAU,IAAI,gBAAgB;AAAA,EACrD,GAAG,KAAK,YAAY,EAAE,CAAC,KAAK,SAAS,KAAK;AAAA,EAC1C,GAAG,MAAM,YAAY,EAAE,CAAC,MAAM,SAAS,MAAM;AAC/C,CAAC;AACM,IAAM,QAAN,MAAY;AAAA,EACjB,YAAYD,OAAM,QAAQ,YAAY,YAAY;AAChD,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,UAAU,IAAI,QAAQA,OAAM,QAAQ,UAAU;AACnD,SAAK,UAAU,IAAI,QAAQA,OAAM,QAAQ,UAAU;AAAA,EACrD;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,EAClC;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,EAClC;AACF;AACO,IAAM,OAAO,CAAC,EAAC,MAAAA,OAAM,QAAQ,QAAAE,UAAQ,QAAAC,SAAM,MAAM,IAAI,MAAMH,OAAM,QAAQE,UAAQC,QAAM;AACvF,IAAM,QAAQ,CAAC,EAAC,QAAQ,MAAAH,OAAM,UAAAI,UAAQ,MAAM;AACjD,QAAM,EAAC,QAAAF,UAAQ,QAAAC,SAAM,IAAI,eAAMC,WAAUJ,KAAI;AAC7C,SAAO,KAAK;AAAA,IACV;AAAA,IACA,MAAAA;AAAA,IACA,QAAAE;AAAA,IACA,QAAQ,UAAQ,OAAOC,SAAO,IAAI,CAAC;AAAA,EACrC,CAAC;AACH;AACA,IAAMA,UAAS,CAACE,SAAQD,WAAU,aAAaJ,UAAS;AACtD,QAAMM,SAAQ,CAAC;AACf,WAAS,IAAI,GAAG,IAAIF,UAAS,QAAQ,EAAE,GAAG;AACxC,IAAAE,OAAMF,UAAS,MAAM;AAAA,EACvB;AACA,MAAI,MAAMC,QAAO;AACjB,SAAOA,QAAO,MAAM,OAAO,KAAK;AAC9B,MAAE;AAAA,EACJ;AACA,QAAM,MAAM,IAAI,WAAW,MAAM,cAAc,IAAI,CAAC;AACpD,MAAI,OAAO;AACX,MAAIE,UAAS;AACb,MAAI,UAAU;AACd,WAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,UAAM,QAAQD,OAAMD,QAAO;AAC3B,QAAI,UAAU,QAAW;AACvB,YAAM,IAAI,YAAY,OAAQL,iBAAiB;AAAA,IACjD;AACA,IAAAO,UAASA,WAAU,cAAc;AACjC,YAAQ;AACR,QAAI,QAAQ,GAAG;AACb,cAAQ;AACR,UAAI,aAAa,MAAMA,WAAU;AAAA,IACnC;AAAA,EACF;AACA,MAAI,QAAQ,eAAe,MAAMA,WAAU,IAAI,MAAM;AACnD,UAAM,IAAI,YAAY,wBAAwB;AAAA,EAChD;AACA,SAAO;AACT;AACA,IAAML,UAAS,CAAC,MAAME,WAAU,gBAAgB;AAC9C,QAAM,MAAMA,UAASA,UAAS,SAAS,OAAO;AAC9C,QAAM,QAAQ,KAAK,eAAe;AAClC,MAAI,MAAM;AACV,MAAI,OAAO;AACX,MAAIG,UAAS;AACb,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,IAAAA,UAASA,WAAU,IAAI,KAAK;AAC5B,YAAQ;AACR,WAAO,OAAO,aAAa;AACzB,cAAQ;AACR,aAAOH,UAAS,OAAOG,WAAU;AAAA,IACnC;AAAA,EACF;AACA,MAAI,MAAM;AACR,WAAOH,UAAS,OAAOG,WAAU,cAAc;AAAA,EACjD;AACA,MAAI,KAAK;AACP,WAAO,IAAI,SAAS,cAAc,GAAG;AACnC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACO,IAAM,UAAU,CAAC,EAAC,MAAAP,OAAM,QAAQ,aAAa,UAAAI,UAAQ,MAAM;AAChE,SAAO,KAAK;AAAA,IACV;AAAA,IACA,MAAAJ;AAAA,IACA,OAAO,OAAO;AACZ,aAAOE,QAAO,OAAOE,WAAU,WAAW;AAAA,IAC5C;AAAA,IACA,OAAO,OAAO;AACZ,aAAOD,QAAO,OAAOC,WAAU,aAAaJ,KAAI;AAAA,IAClD;AAAA,EACF,CAAC;AACH;;;AFvJO,IAAM,YAAY,MAAM;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AACZ,CAAC;AACM,IAAM,eAAe,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AACZ,CAAC;;;AGVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,cAAc,QAAQ;AAAA,EACjC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,iBAAiB,QAAQ;AAAA,EACpC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,iBAAiB,QAAQ;AAAA,EACpC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,eAAe,QAAQ;AAAA,EAClC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,oBAAoB,QAAQ;AAAA,EACvC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,UAAU,QAAQ;AAAA,EAC7B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACjDM,IAAM,MAAN,MAAU;AAAA,EACf,YAAYQ,UAASC,OAAM,WAAW,OAAO;AAC3C,SAAK,OAAOA;AACZ,SAAK,UAAUD;AACf,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,aAAa,MAAM;AACxB,SAAK,aAAa,MAAM;AACxB,SAAK,QAAQ;AACb,SAAK,aAAa,oBAAI,IAAI;AAC1B,WAAO,iBAAiB,MAAM;AAAA,MAC5B,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,YAAQ,KAAK;AAAA,WACR,GAAG;AACJ,eAAO;AAAA,MACT;AAAA,eACO;AACL,cAAM,EAAC,MAAAC,OAAM,UAAS,IAAI;AAC1B,YAAIA,UAAS,aAAa;AACxB,gBAAM,IAAI,MAAM,0CAA0C;AAAA,QAC5D;AACA,YAAI,UAAU,SAAS,cAAc;AACnC,gBAAM,IAAI,MAAM,oDAAoD;AAAA,QACtE;AACA,eAAO,IAAI,SAAS,SAAS;AAAA,MAC/B;AAAA;AAAA,EAEJ;AAAA,EACA,OAAO;AACL,YAAQ,KAAK;AAAA,WACR,GAAG;AACJ,cAAM,EAAC,MAAAA,OAAM,QAAAC,QAAM,IAAI,KAAK;AAC5B,cAAM,YAAmB,OAAOD,OAAMC,OAAM;AAC5C,eAAO,IAAI,SAAS,KAAK,MAAM,SAAS;AAAA,MAC1C;AAAA,WACG,GAAG;AACJ,eAAO;AAAA,MACT;AAAA,eACO;AACL,cAAM,MAAM,+BAAgC,KAAK,mDAAoD;AAAA,MACvG;AAAA;AAAA,EAEJ;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,SAAS,KAAK,SAAS,MAAM,QAAQ,KAAK,YAAY,MAAM,WAAkBC,QAAO,KAAK,WAAW,MAAM,SAAS;AAAA,EAC7H;AAAA,EACA,SAASC,OAAM;AACb,UAAM,EAAC,OAAO,SAAAJ,UAAS,WAAU,IAAI;AACrC,YAAQA;AAAA,WACH;AACH,eAAO,WAAW,OAAO,YAAYI,SAAQ,UAAU,OAAO;AAAA;AAE9D,eAAO,WAAW,OAAO,YAAYA,SAAQ,OAAO,OAAO;AAAA;AAAA,EAE/D;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,MAAM,KAAK,UAAU;AAAA,IACvB;AAAA,EACF;AAAA,EACA,KAAK,OAAO,eAAe;AACzB,WAAO;AAAA,EACT;AAAA,EACA,CAAC,OAAO,IAAI,4BAA4B,KAAK;AAC3C,WAAO,SAAS,KAAK,SAAS,IAAI;AAAA,EACpC;AAAA,EACA,OAAO,MAAM,OAAO;AAClB,cAAU,SAAS,kBAAkB;AACrC,WAAO,CAAC,EAAE,UAAU,MAAM,cAAc,MAAM,UAAU;AAAA,EAC1D;AAAA,EACA,IAAI,sBAAsB;AACxB,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC/C;AAAA,EACA,IAAI,QAAQ;AACV,UAAM,IAAI,MAAM,qEAAqE;AAAA,EACvF;AAAA,EACA,IAAI,SAAS;AACX,UAAM,IAAI,MAAM,mEAAmE;AAAA,EACrF;AAAA,EACA,IAAI,gBAAgB;AAClB,UAAM,IAAI,MAAM,wCAAwC;AAAA,EAC1D;AAAA,EACA,IAAI,SAAS;AACX,UAAM,IAAI,MAAM,iCAAiC;AAAA,EACnD;AAAA,EACA,OAAO,MAAM,OAAO;AAClB,QAAI,iBAAiB,KAAK;AACxB,aAAO;AAAA,IACT,WAAW,SAAS,QAAQ,MAAM,UAAU,OAAO;AACjD,YAAM,EAAC,SAAAJ,UAAS,MAAAC,OAAM,WAAW,MAAK,IAAI;AAC1C,aAAO,IAAI,IAAID,UAASC,OAAM,WAAW,SAAS,UAAUD,UAASC,OAAM,UAAU,KAAK,CAAC;AAAA,IAC7F,WAAW,SAAS,QAAQ,MAAM,eAAe,MAAM;AACrD,YAAM,EAAC,SAAAD,UAAS,WAAW,MAAAC,MAAI,IAAI;AACnC,YAAMC,UAAgBG,QAAO,SAAS;AACtC,aAAO,IAAI,OAAOL,UAASC,OAAMC,OAAM;AAAA,IACzC,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,OAAO,OAAOF,UAASC,OAAMC,SAAQ;AACnC,QAAI,OAAOD,UAAS,UAAU;AAC5B,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AACA,YAAQD;AAAA,WACH,GAAG;AACJ,YAAIC,UAAS,aAAa;AACxB,gBAAM,IAAI,MAAM,wCAAyC,6BAA8B;AAAA,QACzF,OAAO;AACL,iBAAO,IAAI,IAAID,UAASC,OAAMC,SAAQA,QAAO,KAAK;AAAA,QACpD;AAAA,MACF;AAAA,WACG,GAAG;AACJ,cAAM,QAAQ,UAAUF,UAASC,OAAMC,QAAO,KAAK;AACnD,eAAO,IAAI,IAAIF,UAASC,OAAMC,SAAQ,KAAK;AAAA,MAC7C;AAAA,eACO;AACL,cAAM,IAAI,MAAM,iBAAiB;AAAA,MACnC;AAAA;AAAA,EAEJ;AAAA,EACA,OAAO,SAASA,SAAQ;AACtB,WAAO,IAAI,OAAO,GAAG,aAAaA,OAAM;AAAA,EAC1C;AAAA,EACA,OAAO,SAASD,OAAMC,SAAQ;AAC5B,WAAO,IAAI,OAAO,GAAGD,OAAMC,OAAM;AAAA,EACnC;AAAA,EACA,OAAO,OAAO,OAAO;AACnB,UAAM,CAAC,KAAK,SAAS,IAAI,IAAI,YAAY,KAAK;AAC9C,QAAI,UAAU,QAAQ;AACpB,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY,OAAO;AACxB,UAAM,QAAQ,IAAI,aAAa,KAAK;AACpC,UAAM,aAAa,MAAM,OAAO,MAAM;AACtC,UAAM,iBAAiB,OAAO,MAAM,SAAS,YAAY,aAAa,MAAM,aAAa,CAAC;AAC1F,QAAI,eAAe,eAAe,MAAM,eAAe;AACrD,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AACA,UAAM,cAAc,eAAe,SAAS,MAAM,gBAAgB,MAAM,UAAU;AAClF,UAAMA,UAAS,IAAW,OAAO,MAAM,eAAe,MAAM,YAAY,aAAa,cAAc;AACnG,UAAM,MAAM,MAAM,YAAY,IAAI,IAAI,SAASA,OAAM,IAAI,IAAI,SAAS,MAAM,OAAOA,OAAM;AACzF,WAAO;AAAA,MACL;AAAA,MACA,MAAM,SAAS,MAAM,IAAI;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,OAAO,aAAa,cAAc;AAChC,QAAI,SAAS;AACb,UAAM,OAAO,MAAM;AACjB,YAAM,CAAC,GAAGI,OAAM,IAAWD,QAAO,aAAa,SAAS,MAAM,CAAC;AAC/D,gBAAUC;AACV,aAAO;AAAA,IACT;AACA,QAAIN,WAAU,KAAK;AACnB,QAAI,QAAQ;AACZ,QAAIA,aAAY,IAAI;AAClB,MAAAA,WAAU;AACV,eAAS;AAAA,IACX,WAAWA,aAAY,GAAG;AACxB,cAAQ,KAAK;AAAA,IACf;AACA,QAAIA,aAAY,KAAKA,aAAY,GAAG;AAClC,YAAM,IAAI,WAAW,uBAAwBA,UAAU;AAAA,IACzD;AACA,UAAM,aAAa;AACnB,UAAM,gBAAgB,KAAK;AAC3B,UAAM,aAAa,KAAK;AACxB,UAAM,OAAO,SAAS;AACtB,UAAM,gBAAgB,OAAO;AAC7B,WAAO;AAAA,MACL,SAAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,MAAM,QAAQI,OAAM;AACzB,UAAM,CAAC,QAAQ,KAAK,IAAI,gBAAgB,QAAQA,KAAI;AACpD,UAAM,MAAM,IAAI,OAAO,KAAK;AAC5B,QAAI,WAAW,IAAI,QAAQ,MAAM;AACjC,WAAO;AAAA,EACT;AACF;AACA,IAAM,kBAAkB,CAAC,QAAQA,UAAS;AACxC,UAAQ,OAAO;AAAA,SACV,KAAK;AACN,YAAM,UAAUA,SAAQ;AACxB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,QAAQ,OAAO,GAAI,UAAU,SAAW,QAAS;AAAA,MACnD;AAAA,IACF;AAAA,SACG,UAAU,QAAQ;AACnB,YAAM,UAAUA,SAAQ;AACxB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,QAAQ,OAAO,MAAM;AAAA,MACvB;AAAA,IACF;AAAA,SACG,OAAO,QAAQ;AAChB,YAAM,UAAUA,SAAQ;AACxB,aAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ,OAAO,MAAM;AAAA,MACvB;AAAA,IACF;AAAA,aACO;AACL,UAAIA,SAAQ,MAAM;AAChB,cAAM,MAAM,iFAAiF;AAAA,MAC/F;AACA,aAAO;AAAA,QACL,OAAO;AAAA,QACPA,MAAK,OAAO,MAAM;AAAA,MACpB;AAAA,IACF;AAAA;AAEJ;AACA,IAAM,aAAa,CAAC,OAAO,OAAOA,UAAS;AACzC,QAAM,EAAC,OAAM,IAAIA;AACjB,MAAI,WAAW,UAAU,QAAQ;AAC/B,UAAM,MAAM,8BAA+BA,MAAK,eAAgB;AAAA,EAClE;AACA,QAAM,MAAM,MAAM,IAAI,MAAM;AAC5B,MAAI,OAAO,MAAM;AACf,UAAMG,OAAMH,MAAK,OAAO,KAAK,EAAE,MAAM,CAAC;AACtC,UAAM,IAAI,QAAQG,IAAG;AACrB,WAAOA;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AACA,IAAM,aAAa,CAAC,OAAO,OAAOH,UAAS;AACzC,QAAM,EAAC,OAAM,IAAIA;AACjB,QAAM,MAAM,MAAM,IAAI,MAAM;AAC5B,MAAI,OAAO,MAAM;AACf,UAAMG,OAAMH,MAAK,OAAO,KAAK;AAC7B,UAAM,IAAI,QAAQG,IAAG;AACrB,WAAOA;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AACA,IAAM,cAAc;AACpB,IAAM,eAAe;AACrB,IAAM,YAAY,CAACP,UAASC,OAAM,cAAc;AAC9C,QAAM,aAAoB,eAAeD,QAAO;AAChD,QAAM,aAAa,aAAoB,eAAeC,KAAI;AAC1D,QAAM,QAAQ,IAAI,WAAW,aAAa,UAAU,UAAU;AAC9D,EAAO,SAASD,UAAS,OAAO,CAAC;AACjC,EAAO,SAASC,OAAM,OAAO,UAAU;AACvC,QAAM,IAAI,WAAW,UAAU;AAC/B,SAAO;AACT;AACA,IAAM,YAAY,OAAO,IAAI,kBAAkB;AAC/C,IAAM,WAAW;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,EACd,YAAY;AACd;AACA,IAAM,SAAS;AAAA,EACb,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AAChB;AACA,IAAM,UAAU;AAChB,IAAM,YAAY,CAAC,OAAO,YAAY;AACpC,MAAI,MAAM,KAAK,OAAO,GAAG;AACvB,YAAQ,KAAK,OAAO;AAAA,EACtB,OAAO;AACL,UAAM,IAAI,MAAM,OAAO;AAAA,EACzB;AACF;AACA,IAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACrS3B,IAAM,cAAc,IAAI,YAAY;AACpC,SAAS,aAAa,OAAO,QAAQ;AACnC,MAAI,IAAI;AACR,WAAS,QAAQ,KAAI,SAAS,GAAG;AAC/B,QAAI,SAAS,IAAI;AACf,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AACA,QAAI,UAAU,MAAM,QAAQ;AAC1B,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACpD;AACA,UAAM,IAAI,MAAM;AAChB,SAAK,QAAQ,MAAM,IAAI,QAAQ,SAAS,IAAI,OAAO,KAAK;AACxD,QAAI,IAAI,KAAK;AACX;AAAA,IACF;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,YAAY,OAAO,QAAQ;AAClC,MAAI;AACJ,GAAC,SAAS,MAAM,IAAI,aAAa,OAAO,MAAM;AAC9C,QAAM,aAAa,SAAS;AAC5B,MAAI,UAAU,KAAK,aAAa,GAAG;AACjC,UAAM,IAAI,MAAM,0BAA0B;AAAA,EAC5C;AACA,MAAI,aAAa,MAAM,QAAQ;AAC7B,UAAM,IAAI,MAAM,kCAAkC;AAAA,EACpD;AACA,SAAO;AAAA,IACL,MAAM,SAAS,QAAQ,UAAU;AAAA,IACjC;AAAA,EACF;AACF;AACA,SAAS,UAAU,OAAO,OAAO;AAC/B,MAAI;AACJ,GAAC,MAAM,KAAK,IAAI,aAAa,OAAO,KAAK;AACzC,SAAO;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR;AAAA,EACF;AACF;AACA,SAAS,WAAW,OAAO;AACzB,QAAM,OAAO,CAAC;AACd,QAAM,IAAI,MAAM;AAChB,MAAI,QAAQ;AACZ,SAAO,QAAQ,GAAG;AAChB,QAAI,UAAU;AACd,KAAC,UAAU,UAAU,KAAK,IAAI,UAAU,OAAO,KAAK;AACpD,QAAI,aAAa,GAAG;AAClB,UAAI,KAAK,MAAM;AACb,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AACA,UAAI,aAAa,GAAG;AAClB,cAAM,IAAI,MAAM,sCAAuC,oBAAqB;AAAA,MAC9E;AACA,UAAI,KAAK,SAAS,QAAW;AAC3B,cAAM,IAAI,MAAM,0DAA0D;AAAA,MAC5E;AACA,UAAI,KAAK,UAAU,QAAW;AAC5B,cAAM,IAAI,MAAM,2DAA2D;AAAA,MAC7E;AACA;AACA,OAAC,KAAK,MAAM,KAAK,IAAI,YAAY,OAAO,KAAK;AAAA,IAC/C,WAAW,aAAa,GAAG;AACzB,UAAI,KAAK,SAAS,QAAW;AAC3B,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AACA,UAAI,aAAa,GAAG;AAClB,cAAM,IAAI,MAAM,sCAAuC,oBAAqB;AAAA,MAC9E;AACA,UAAI,KAAK,UAAU,QAAW;AAC5B,cAAM,IAAI,MAAM,2DAA2D;AAAA,MAC7E;AACA,UAAI;AACJ,OAAC,MAAM,KAAK,IAAI,YAAY,OAAO,KAAK;AACxC,WAAK,OAAO,YAAY,OAAO,IAAI;AAAA,IACrC,WAAW,aAAa,GAAG;AACzB,UAAI,KAAK,UAAU,QAAW;AAC5B,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAC9D;AACA,UAAI,aAAa,GAAG;AAClB,cAAM,IAAI,MAAM,sCAAuC,qBAAsB;AAAA,MAC/E;AACA;AACA,OAAC,KAAK,OAAO,KAAK,IAAI,aAAa,OAAO,KAAK;AAAA,IACjD,OAAO;AACL,YAAM,IAAI,MAAM,mEAAoE,UAAW;AAAA,IACjG;AAAA,EACF;AACA,MAAI,QAAQ,GAAG;AACb,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AACA,SAAO;AACT;AACO,SAAS,WAAW,OAAO;AAChC,QAAM,IAAI,MAAM;AAChB,MAAI,QAAQ;AACZ,MAAI;AACJ,MAAI,kBAAkB;AACtB,MAAI;AACJ,SAAO,QAAQ,GAAG;AAChB,QAAI,UAAU;AACd,KAAC,UAAU,UAAU,KAAK,IAAI,UAAU,OAAO,KAAK;AACpD,QAAI,aAAa,GAAG;AAClB,YAAM,IAAI,MAAM,wDAAyD,UAAW;AAAA,IACtF;AACA,QAAI,aAAa,GAAG;AAClB,UAAI,MAAM;AACR,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AACA;AACA,OAAC,MAAM,KAAK,IAAI,YAAY,OAAO,KAAK;AACxC,UAAI,OAAO;AACT,0BAAkB;AAAA,MACpB;AAAA,IACF,WAAW,aAAa,GAAG;AACzB,UAAI,iBAAiB;AACnB,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAC9D,WAAW,CAAC,OAAO;AACjB,gBAAQ,CAAC;AAAA,MACX;AACA,UAAI;AACJ,OAAC,MAAM,KAAK,IAAI,YAAY,OAAO,KAAK;AACxC,YAAM,KAAK,WAAW,IAAI,CAAC;AAAA,IAC7B,OAAO;AACL,YAAM,IAAI,MAAM,gEAAiE,UAAW;AAAA,IAC9F;AAAA,EACF;AACA,MAAI,QAAQ,GAAG;AACb,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AACA,QAAM,OAAO,CAAC;AACd,MAAI,MAAM;AACR,SAAK,OAAO;AAAA,EACd;AACA,OAAK,QAAQ,SAAS,CAAC;AACvB,SAAO;AACT;;;AC7IA,IAAM,cAAc,IAAI,YAAY;AACpC,IAAM,WAAW,KAAK;AACtB,IAAM,YAAY,KAAK;AACvB,SAAS,WAAW,MAAM,OAAO;AAC/B,MAAI,IAAI,MAAM;AACd,MAAI,OAAO,KAAK,UAAU,UAAU;AAClC,QAAI,KAAK,QAAQ,GAAG;AAClB,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AACA,QAAI,CAAC,OAAO,cAAc,KAAK,KAAK,GAAG;AACrC,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AACA,QAAI,aAAa,OAAO,GAAG,KAAK,KAAK,IAAI;AACzC,UAAM,KAAK;AAAA,EACb;AACA,MAAI,OAAO,KAAK,SAAS,UAAU;AACjC,UAAM,YAAY,YAAY,OAAO,KAAK,IAAI;AAC9C,SAAK,UAAU;AACf,UAAM,IAAI,WAAW,CAAC;AACtB,QAAI,aAAa,OAAO,GAAG,UAAU,MAAM,IAAI;AAC/C,UAAM,KAAK;AAAA,EACb;AACA,MAAI,KAAK,MAAM;AACb,SAAK,KAAK,KAAK;AACf,UAAM,IAAI,KAAK,MAAM,CAAC;AACtB,QAAI,aAAa,OAAO,GAAG,KAAK,KAAK,MAAM,IAAI;AAC/C,UAAM,KAAK;AAAA,EACb;AACA,SAAO,MAAM,SAAS;AACxB;AACO,SAAS,WAAW,MAAM;AAC/B,QAAM,OAAO,SAAS,IAAI;AAC1B,QAAM,QAAQ,IAAI,WAAW,IAAI;AACjC,MAAI,IAAI;AACR,MAAI,KAAK,MAAM;AACb,SAAK,KAAK,KAAK;AACf,UAAM,IAAI,KAAK,MAAM,CAAC;AACtB,QAAI,aAAa,OAAO,GAAG,KAAK,KAAK,MAAM,IAAI;AAC/C,UAAM,KAAK;AAAA,EACb;AACA,MAAI,KAAK,OAAO;AACd,aAAS,QAAQ,KAAK,MAAM,SAAS,GAAG,SAAS,GAAG,SAAS;AAC3D,YAAMO,QAAO,WAAW,KAAK,MAAM,QAAQ,MAAM,SAAS,GAAG,CAAC,CAAC;AAC/D,WAAKA;AACL,UAAI,aAAa,OAAO,GAAGA,KAAI,IAAI;AACnC,YAAM,KAAK;AAAA,IACb;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,SAAS,MAAM;AACtB,MAAI,IAAI;AACR,MAAI,KAAK,MAAM;AACb,UAAM,IAAI,KAAK,KAAK;AACpB,SAAK,IAAI,IAAI,IAAI,CAAC;AAAA,EACpB;AACA,MAAI,OAAO,KAAK,SAAS,UAAU;AACjC,UAAM,IAAI,YAAY,OAAO,KAAK,IAAI,EAAE;AACxC,SAAK,IAAI,IAAI,IAAI,CAAC;AAAA,EACpB;AACA,MAAI,OAAO,KAAK,UAAU,UAAU;AAClC,SAAK,IAAI,IAAI,KAAK,KAAK;AAAA,EACzB;AACA,SAAO;AACT;AACA,SAAS,SAAS,MAAM;AACtB,MAAI,IAAI;AACR,MAAI,KAAK,MAAM;AACb,UAAM,IAAI,KAAK,KAAK;AACpB,SAAK,IAAI,IAAI,IAAI,CAAC;AAAA,EACpB;AACA,MAAI,KAAK,OAAO;AACd,eAAW,QAAQ,KAAK,OAAO;AAC7B,YAAM,IAAI,SAAS,IAAI;AACvB,WAAK,IAAI,IAAI,IAAI,CAAC;AAAA,IACpB;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,aAAa,OAAO,QAAQ,GAAG;AACtC,YAAU,IAAI,CAAC;AACf,QAAMC,QAAO;AACb,SAAO,KAAK,WAAW;AACrB,UAAM,YAAY,IAAI,MAAM;AAC5B,SAAK;AAAA,EACP;AACA,SAAO,KAAK,KAAK;AACf,UAAM,YAAY,IAAI,MAAM;AAC5B,WAAO;AAAA,EACT;AACA,QAAM,UAAU;AAChB,SAAOA;AACT;AACA,SAAS,IAAI,GAAG;AACd,MAAI,IAAI,MAAM,GAAG;AACf;AAAA,EACF;AACA,SAAO,KAAK,OAAO,MAAM,CAAC,IAAI,KAAK,CAAC;AACtC;AACA,SAAS,MAAM,GAAG;AAChB,MAAI,IAAI;AACR,MAAI,KAAK,UAAU;AACjB,QAAI,KAAK,MAAM,IAAI,QAAQ;AAC3B,QAAI;AAAA,EACN;AACA,MAAI,KAAK,KAAK,IAAI;AAChB,WAAO;AACP,SAAK;AAAA,EACP;AACA,MAAI,KAAK,KAAK,GAAG;AACf,WAAO;AACP,SAAK;AAAA,EACP;AACA,SAAO,IAAI,QAAQ;AACrB;AACA,IAAM,UAAU;AAAA,EACdnXA,IAAM,mBAAmB;AAAA,EACvB;AAAA,EACA;AACF;AACA,IAAM,mBAAmB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAMC,eAAc,IAAI,YAAY;AACpC,SAAS,eAAe,GAAG,GAAG;AAC5B,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AACA,QAAM,OAAO,EAAE,OAAOA,aAAY,OAAO,EAAE,IAAI,IAAI,CAAC;AACpD,QAAM,OAAO,EAAE,OAAOA,aAAY,OAAO,EAAE,IAAI,IAAI,CAAC;AACpD,MAAI,IAAI,KAAK;AACb,MAAI,IAAI,KAAK;AACb,WAAS,IAAI,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG;AAClD,QAAI,KAAK,OAAO,KAAK,IAAI;AACvB,UAAI,KAAK;AACT,UAAI,KAAK;AACT;AAAA,IACF;AAAA,EACF;AACA,SAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAClC;AACA,SAAS,kBAAkB,MAAM,YAAY;AAC3C,SAAO,CAAC,OAAO,KAAK,IAAI,EAAE,KAAK,OAAK,CAAC,WAAW,SAAS,CAAC,CAAC;AAC7D;AACA,SAAS,OAAO,MAAM;AACpB,MAAI,OAAO,KAAK,UAAU,UAAU;AAClC,UAAM,OAAO,IAAI,MAAM,IAAI;AAC3B,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,UAAU,qBAAqB;AAAA,IAC3C;AACA,WAAO,EAAE,KAAK;AAAA,EAChB;AACA,MAAI,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AACnD,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAC3C;AACA,QAAM,MAAM,CAAC;AACb,MAAI,KAAK,MAAM;AACb,QAAI,MAAM,IAAI,MAAM,KAAK,IAAI;AAC7B,QAAI;AACF,UAAI,CAAC,KAAK;AACR,YAAI,OAAO,KAAK,SAAS,UAAU;AACjC,gBAAM,IAAI,MAAM,KAAK,IAAI;AAAA,QAC3B,WAAW,KAAK,gBAAgB,YAAY;AAC1C,gBAAM,IAAI,OAAO,KAAK,IAAI;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,SAAS,GAAP;AACA,YAAM,IAAI,UAAU,wBAAyB,EAAE,SAAU;AAAA,IAC3D;AACA,QAAI,KAAK;AACP,UAAI,OAAO;AAAA,IACb;AAAA,EACF;AACA,MAAI,CAAC,IAAI,MAAM;AACb,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAC3C;AACA,MAAI,OAAO,KAAK,SAAS,UAAU;AACjC,QAAI,OAAO,KAAK;AAAA,EAClB;AACA,MAAI,OAAO,KAAK,UAAU,UAAU;AAClC,QAAI,QAAQ,KAAK;AAAA,EACnB;AACA,SAAO;AACT;AACO,SAAS,QAAQ,MAAM;AAC5B,MAAI,gBAAgB,cAAc,OAAO,SAAS,UAAU;AAC1D,WAAO,EAAE,MAAM,KAAK;AAAA,EACtB;AACA,MAAI,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AACnD,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAC3C;AACA,QAAM,MAAM,CAAC;AACb,MAAI,KAAK,SAAS,QAAW;AAC3B,QAAI,OAAO,KAAK,SAAS,UAAU;AACjC,UAAI,OAAOA,aAAY,OAAO,KAAK,IAAI;AAAA,IACzC,WAAW,KAAK,gBAAgB,YAAY;AAC1C,UAAI,OAAO,KAAK;AAAA,IAClB,OAAO;AACL,YAAM,IAAI,UAAU,qBAAqB;AAAA,IAC3C;AAAA,EACF;AACA,MAAI,KAAK,UAAU,QAAW;AAC5B,QAAI,MAAM,QAAQ,KAAK,KAAK,GAAG;AAC7B,UAAI,QAAQ,KAAK,MAAM,IAAI,MAAM;AACjC,UAAI,MAAM,KAAK,cAAc;AAAA,IAC/B,OAAO;AACL,YAAM,IAAI,UAAU,qBAAqB;AAAA,IAC3C;AAAA,EACF,OAAO;AACL,QAAI,QAAQ,CAAC;AAAA,EACf;AACA,SAAO;AACT;AACO,SAAS,SAAS,MAAM;AAC7B,MAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,UAAM,IAAI,UAAU,qBAAqB;AAAA,EAC3C;AACA,MAAI,CAAC,kBAAkB,MAAM,gBAAgB,GAAG;AAC9C,UAAM,IAAI,UAAU,6CAA6C;AAAA,EACnE;AACA,MAAI,KAAK,SAAS,UAAa,EAAE,KAAK,gBAAgB,aAAa;AACjE,UAAM,IAAI,UAAU,iDAAiD;AAAA,EACvE;AACA,MAAI,CAAC,MAAM,QAAQ,KAAK,KAAK,GAAG;AAC9B,UAAM,IAAI,UAAU,8CAA8C;AAAA,EACpE;AACA,WAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,KAAK;AAC1C,UAAM,OAAO,KAAK,MAAM;AACxB,QAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,YAAM,IAAI,UAAU,uCAAuC;AAAA,IAC7D;AACA,QAAI,CAAC,kBAAkB,MAAM,gBAAgB,GAAG;AAC9C,YAAM,IAAI,UAAU,4DAA4D;AAAA,IAClF;AACA,QAAI,CAAC,KAAK,MAAM;AACd,YAAM,IAAI,UAAU,6CAA6C;AAAA,IACnE;AACA,QAAI,KAAK,KAAK,UAAU,KAAK,MAAM;AACjC,YAAM,IAAI,UAAU,+CAA+C;AAAA,IACrE;AACA,QAAI,KAAK,SAAS,UAAa,OAAO,KAAK,SAAS,UAAU;AAC5D,YAAM,IAAI,UAAU,kDAAkD;AAAA,IACxE;AACA,QAAI,KAAK,UAAU,WAAc,OAAO,KAAK,UAAU,YAAY,KAAK,QAAQ,MAAM,IAAI;AACxF,YAAM,IAAI,UAAU,qDAAqD;AAAA,IAC3E;AACA,QAAI,IAAI,KAAK,eAAe,MAAM,KAAK,MAAM,IAAI,EAAE,MAAM,IAAI;AAC3D,YAAM,IAAI,UAAU,0DAA0D;AAAA,IAChF;AAAA,EACF;AACF;AACO,SAAS,WAAW,MAAM,QAAQ,CAAC,GAAG;AAC3C,SAAO,QAAQ;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AACO,SAAS,WAAWC,OAAM,MAAM,KAAK;AAC1C,SAAO,OAAO;AAAA,IACZ,MAAM;AAAA,IACN,MAAMA;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;;;AZ7IO,IAAM,OAAO;AACb,IAAM,OAAO;AACb,SAASC,QAAO,MAAM;AAC3B,WAAS,IAAI;AACb,QAAM,MAAM,CAAC;AACb,MAAI,KAAK,OAAO;AACd,QAAI,QAAQ,KAAK,MAAM,IAAI,OAAK;AAC9B,YAAM,OAAO,CAAC;AACd,UAAI,EAAE,MAAM;AACV,aAAK,OAAO,EAAE,KAAK;AAAA,MACrB;AACA,UAAI,EAAE,SAAS,QAAW;AACxB,aAAK,OAAO,EAAE;AAAA,MAChB;AACA,UAAI,EAAE,UAAU,QAAW;AACzB,aAAK,QAAQ,EAAE;AAAA,MACjB;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,MAAI,KAAK,MAAM;AACb,QAAI,OAAO,KAAK;AAAA,EAClB;AACA,SAAO,WAAW,GAAG;AACvB;AACO,SAASC,QAAO,OAAO;AAC5B,QAAM,MAAM,WAAW,KAAK;AAC5B,QAAM,OAAO,CAAC;AACd,MAAI,IAAI,MAAM;AACZ,SAAK,OAAO,IAAI;AAAA,EAClB;AACA,MAAI,IAAI,OAAO;AACb,SAAK,QAAQ,IAAI,MAAM,IAAI,OAAK;AAC9B,YAAM,OAAO,CAAC;AACd,UAAI;AACF,aAAK,OAAO,IAAI,OAAO,EAAE,IAAI;AAAA,MAC/B,SAAS,GAAP;AAAA,MACF;AACA,UAAI,CAAC,KAAK,MAAM;AACd,cAAM,IAAI,MAAM,gDAAgD;AAAA,MAClE;AACA,UAAI,EAAE,SAAS,QAAW;AACxB,aAAK,OAAO,EAAE;AAAA,MAChB;AACA,UAAI,EAAE,UAAU,QAAW;AACzB,aAAK,QAAQ,EAAE;AAAA,MACjB;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,SAAO;AACT;;;Aa5DA;AAAA;AAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA;;;ACAA,IAAM,UAAU;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAM,kBAAkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACO,SAAS,GAAG,OAAO;AACxB,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA,EACT;AACA,MAAI,UAAU,QAAW;AACvB,WAAO;AAAA,EACT;AACA,MAAI,UAAU,QAAQ,UAAU,OAAO;AACrC,WAAO;AAAA,EACT;AACA,QAAMC,UAAS,OAAO;AACtB,MAAI,QAAQ,SAASA,OAAM,GAAG;AAC5B,WAAOA;AAAA,EACT;AACA,MAAIA,YAAW,YAAY;AACzB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,KAAK,GAAG;AACnB,WAAO;AAAA,EACT;AACA,QAAM,aAAa,cAAc,KAAK;AACtC,MAAI,YAAY;AACd,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,SAAS,SAAS,OAAO;AACvB,SAAO,SAAS,MAAM,eAAe,MAAM,YAAY,YAAY,MAAM,YAAY,SAAS,KAAK,MAAM,KAAK;AAChH;AACA,SAAS,cAAc,OAAO;AAC5B,QAAM,iBAAiB,OAAO,UAAU,SAAS,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE;AACxE,MAAI,gBAAgB,SAAS,cAAc,GAAG;AAC5C,WAAO;AAAA,EACT;AACA,SAAO;AACT;;;AChFA,IAAM,OAAN,MAAW;AAAA,EACT,YAAY,OAAOC,OAAM,UAAU;AACjC,SAAK,QAAQ;AACb,SAAK,eAAe,SAAS;AAC7B,SAAK,OAAOA;AACZ,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,WAAW;AACT,WAAO,QAAS,KAAK,UAAY,KAAK;AAAA,EACxC;AAAA,EACA,QAAQ,KAAK;AACX,WAAO,KAAK,QAAQ,IAAI,QAAQ,KAAK,KAAK,QAAQ,IAAI,QAAQ,IAAI;AAAA,EACpE;AACF;AACA,KAAK,OAAO,IAAI,KAAK,GAAG,QAAQ,IAAI;AACpC,KAAK,SAAS,IAAI,KAAK,GAAG,UAAU,IAAI;AACxC,KAAK,QAAQ,IAAI,KAAK,GAAG,SAAS,IAAI;AACtC,KAAK,SAAS,IAAI,KAAK,GAAG,UAAU,IAAI;AACxC,KAAK,QAAQ,IAAI,KAAK,GAAG,SAAS,KAAK;AACvC,KAAK,MAAM,IAAI,KAAK,GAAG,OAAO,KAAK;AACnC,KAAK,MAAM,IAAI,KAAK,GAAG,OAAO,KAAK;AACnC,KAAK,QAAQ,IAAI,KAAK,GAAG,SAAS,IAAI;AACtC,KAAK,QAAQ,IAAI,KAAK,GAAG,SAAS,IAAI;AACtC,KAAK,OAAO,IAAI,KAAK,GAAG,QAAQ,IAAI;AACpC,KAAK,OAAO,IAAI,KAAK,GAAG,QAAQ,IAAI;AACpC,KAAK,YAAY,IAAI,KAAK,GAAG,aAAa,IAAI;AAC9C,KAAK,QAAQ,IAAI,KAAK,GAAG,SAAS,IAAI;AACtC,IAAM,QAAN,MAAY;AAAA,EACV,YAAY,MAAM,OAAO,eAAe;AACtC,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,WAAW;AACT,WAAO,SAAU,KAAK,SAAW,KAAK;AAAA,EACxC;AACF;;;ACtCO,IAAM,YAAY,WAAW,WAAW,CAAC,WAAW,QAAQ,WAAW,WAAW,UAAU,OAAO,WAAW,OAAO,aAAa;AACzI,IAAMC,eAAc,IAAI,YAAY;AACpC,IAAMC,eAAc,IAAI,YAAY;AACpC,SAASC,UAASC,MAAK;AACrB,SAAO,aAAa,WAAW,OAAO,SAASA,IAAG;AACpD;AACO,SAAS,MAAMA,MAAK;AACzB,MAAI,EAAEA,gBAAe,aAAa;AAChC,WAAO,WAAW,KAAKA,IAAG;AAAA,EAC5B;AACA,SAAOD,UAASC,IAAG,IAAI,IAAI,WAAWA,KAAI,QAAQA,KAAI,YAAYA,KAAI,UAAU,IAAIA;AACtF;AACO,IAAMC,YAAW,YAAY,CAAC,OAAO,OAAO,QAAQ;AACzD,SAAO,MAAM,QAAQ,KAAK,WAAW,OAAO,KAAK,MAAM,SAAS,OAAO,GAAG,CAAC,EAAE,SAAS,MAAM,IAAI,UAAU,OAAO,OAAO,GAAG;AAC7H,IAAI,CAAC,OAAO,OAAO,QAAQ;AACzB,SAAO,MAAM,QAAQ,KAAKJ,aAAY,OAAO,MAAM,SAAS,OAAO,GAAG,CAAC,IAAI,UAAU,OAAO,OAAO,GAAG;AACxG;AACO,IAAMK,cAAa,YAAY,CAAAC,YAAU;AAC9C,SAAOA,QAAO,SAAS,KAAK,WAAW,OAAO,KAAKA,OAAM,IAAI,YAAYA,OAAM;AACjF,IAAI,CAAAA,YAAU;AACZ,SAAOA,QAAO,SAAS,KAAKL,aAAY,OAAOK,OAAM,IAAI,YAAYA,OAAM;AAC7E;AACO,IAAM,YAAY,SAAO;AAC9B,SAAO,WAAW,KAAK,GAAG;AAC5B;AACO,IAAM,QAAQ,YAAY,CAAC,OAAO,OAAO,QAAQ;AACtD,MAAIJ,UAAS,KAAK,GAAG;AACnB,WAAO,IAAI,WAAW,MAAM,SAAS,OAAO,GAAG,CAAC;AAAA,EAClD;AACA,SAAO,MAAM,MAAM,OAAO,GAAG;AAC/B,IAAI,CAAC,OAAO,OAAO,QAAQ;AACzB,SAAO,MAAM,MAAM,OAAO,GAAG;AAC/B;AACO,IAAM,SAAS,YAAY,CAAC,QAAQK,YAAW;AACpD,WAAS,OAAO,IAAI,OAAK,aAAa,aAAa,IAAI,WAAW,OAAO,KAAK,CAAC,CAAC;AAChF,SAAO,MAAM,WAAW,OAAO,OAAO,QAAQA,OAAM,CAAC;AACvD,IAAI,CAAC,QAAQA,YAAW;AACtB,QAAM,MAAM,IAAI,WAAWA,OAAM;AACjC,MAAI,MAAM;AACV,WAAS,KAAK,QAAQ;AACpB,QAAI,MAAM,EAAE,SAAS,IAAI,QAAQ;AAC/B,UAAI,EAAE,SAAS,GAAG,IAAI,SAAS,GAAG;AAAA,IACpC;AACA,QAAI,IAAI,GAAG,GAAG;AACd,WAAO,EAAE;AAAA,EACX;AACA,SAAO;AACT;AACO,IAAM,QAAQ,YAAY,UAAQ;AACvC,SAAO,WAAW,OAAO,YAAY,IAAI;AAC3C,IAAI,UAAQ;AACV,SAAO,IAAI,WAAW,IAAI;AAC5B;AAsCO,SAAS,QAAQ,IAAI,IAAI;AAC9B,MAAIC,UAAS,EAAE,KAAKA,UAAS,EAAE,GAAG;AAChC,WAAO,GAAG,QAAQ,EAAE;AAAA,EACtB;AACA,WAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,QAAI,GAAG,OAAO,GAAG,IAAI;AACnB;AAAA,IACF;AACA,WAAO,GAAG,KAAK,GAAG,KAAK,KAAK;AAAA,EAC9B;AACA,SAAO;AACT;AACA,SAAS,YAAYC,SAAQ,QAAQ,UAAU;AAC7C,MAAI;AACJ,QAAMC,UAASD,QAAO;AACtB,MAAI,gBAAgB;AACpB,QAAM,QAAQ,CAAC;AACf,WAAS,IAAI,GAAG,IAAIC,SAAQ,EAAE,GAAG;AAC/B,gBAAYD,QAAO,WAAW,CAAC;AAC/B,QAAI,YAAY,SAAS,YAAY,OAAO;AAC1C,UAAI,CAAC,eAAe;AAClB,YAAI,YAAY,OAAO;AACrB,eAAK,SAAS,KAAK;AACjB,kBAAM,KAAK,KAAK,KAAK,GAAG;AAC1B;AAAA,QACF,WAAW,IAAI,MAAMC,SAAQ;AAC3B,eAAK,SAAS,KAAK;AACjB,kBAAM,KAAK,KAAK,KAAK,GAAG;AAC1B;AAAA,QACF;AACA,wBAAgB;AAChB;AAAA,MACF;AACA,UAAI,YAAY,OAAO;AACrB,aAAK,SAAS,KAAK;AACjB,gBAAM,KAAK,KAAK,KAAK,GAAG;AAC1B,wBAAgB;AAChB;AAAA,MACF;AACA,mBAAa,gBAAgB,SAAS,KAAK,YAAY,SAAS;AAAA,IAClE,WAAW,eAAe;AACxB,WAAK,SAAS,KAAK;AACjB,cAAM,KAAK,KAAK,KAAK,GAAG;AAAA,IAC5B;AACA,oBAAgB;AAChB,QAAI,YAAY,KAAK;AACnB,WAAK,SAAS,KAAK;AACjB;AACF,YAAM,KAAK,SAAS;AAAA,IACtB,WAAW,YAAY,MAAM;AAC3B,WAAK,SAAS,KAAK;AACjB;AACF,YAAM,KAAK,aAAa,IAAI,KAAK,YAAY,KAAK,GAAG;AAAA,IACvD,WAAW,YAAY,OAAO;AAC5B,WAAK,SAAS,KAAK;AACjB;AACF,YAAM,KAAK,aAAa,KAAK,KAAK,aAAa,IAAI,KAAK,KAAK,YAAY,KAAK,GAAG;AAAA,IACnF,WAAW,YAAY,SAAS;AAC9B,WAAK,SAAS,KAAK;AACjB;AACF,YAAM,KAAK,aAAa,KAAK,KAAK,aAAa,KAAK,KAAK,KAAK,aAAa,IAAI,KAAK,KAAK,YAAY,KAAK,GAAG;AAAA,IAC/G,OAAO;AACL,YAAM,IAAI,MAAM,oBAAoB;AAAA,IACtC;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,UAAUC,MAAK,QAAQ,KAAK;AACnC,QAAM,MAAM,CAAC;AACb,SAAO,SAAS,KAAK;AACnB,UAAM,YAAYA,KAAI;AACtB,QAAI,YAAY;AAChB,QAAI,mBAAmB,YAAY,MAAM,IAAI,YAAY,MAAM,IAAI,YAAY,MAAM,IAAI;AACzF,QAAI,SAAS,oBAAoB,KAAK;AACpC,UAAI,YAAY,WAAW,YAAY;AACvC,cAAQ;AAAA,aACH;AACH,cAAI,YAAY,KAAK;AACnB,wBAAY;AAAA,UACd;AACA;AAAA,aACG;AACH,uBAAaA,KAAI,SAAS;AAC1B,eAAK,aAAa,SAAS,KAAK;AAC9B,6BAAiB,YAAY,OAAO,IAAI,aAAa;AACrD,gBAAI,gBAAgB,KAAK;AACvB,0BAAY;AAAA,YACd;AAAA,UACF;AACA;AAAA,aACG;AACH,uBAAaA,KAAI,SAAS;AAC1B,sBAAYA,KAAI,SAAS;AACzB,eAAK,aAAa,SAAS,QAAQ,YAAY,SAAS,KAAK;AAC3D,6BAAiB,YAAY,OAAO,MAAM,aAAa,OAAO,IAAI,YAAY;AAC9E,gBAAI,gBAAgB,SAAS,gBAAgB,SAAS,gBAAgB,QAAQ;AAC5E,0BAAY;AAAA,YACd;AAAA,UACF;AACA;AAAA,aACG;AACH,uBAAaA,KAAI,SAAS;AAC1B,sBAAYA,KAAI,SAAS;AACzB,uBAAaA,KAAI,SAAS;AAC1B,eAAK,aAAa,SAAS,QAAQ,YAAY,SAAS,QAAQ,aAAa,SAAS,KAAK;AACzF,6BAAiB,YAAY,OAAO,MAAM,aAAa,OAAO,MAAM,YAAY,OAAO,IAAI,aAAa;AACxG,gBAAI,gBAAgB,SAAS,gBAAgB,SAAS;AACpD,0BAAY;AAAA,YACd;AAAA,UACF;AAAA;AAAA,IAEJ;AACA,QAAI,cAAc,MAAM;AACtB,kBAAY;AACZ,yBAAmB;AAAA,IACrB,WAAW,YAAY,OAAO;AAC5B,mBAAa;AACb,UAAI,KAAK,cAAc,KAAK,OAAO,KAAK;AACxC,kBAAY,QAAQ,YAAY;AAAA,IAClC;AACA,QAAI,KAAK,SAAS;AAClB,cAAU;AAAA,EACZ;AACA,SAAO,sBAAsB,GAAG;AAClC;AACA,IAAM,uBAAuB;AACtB,SAAS,sBAAsB,YAAY;AAChD,QAAM,MAAM,WAAW;AACvB,MAAI,OAAO,sBAAsB;AAC/B,WAAO,OAAO,aAAa,MAAM,QAAQ,UAAU;AAAA,EACrD;AACA,MAAI,MAAM;AACV,MAAI,IAAI;AACR,SAAO,IAAI,KAAK;AACd,WAAO,OAAO,aAAa,MAAM,QAAQ,WAAW,MAAM,GAAG,KAAK,oBAAoB,CAAC;AAAA,EACzF;AACA,SAAO;AACT;;;AC9NA,IAAM,mBAAmB;AAClB,IAAM,KAAN,MAAS;AAAA,EACd,YAAY,YAAY,kBAAkB;AACxC,SAAK,YAAY;AACjB,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,SAAK,SAAS,CAAC;AACf,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,QAAQ;AACN,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,QAAI,KAAK,OAAO,QAAQ;AACtB,WAAK,SAAS,CAAC;AAAA,IACjB;AACA,QAAI,KAAK,oBAAoB,MAAM;AACjC,WAAK,OAAO,KAAK,KAAK,eAAe;AACrC,WAAK,YAAY,KAAK,gBAAgB,SAAS;AAAA,IACjD;AAAA,EACF;AAAA,EACA,KAAK,OAAO;AACV,QAAI,WAAW,KAAK,OAAO,KAAK,OAAO,SAAS;AAChD,UAAM,SAAS,KAAK,SAAS,MAAM;AACnC,QAAI,UAAU,KAAK,YAAY,GAAG;AAChC,YAAM,WAAW,SAAS,UAAU,KAAK,YAAY,KAAK,UAAU;AACpE,eAAS,IAAI,OAAO,QAAQ;AAAA,IAC9B,OAAO;AACL,UAAI,UAAU;AACZ,cAAM,WAAW,SAAS,UAAU,KAAK,YAAY,KAAK,UAAU;AACpE,YAAI,WAAW,SAAS,QAAQ;AAC9B,eAAK,OAAO,KAAK,OAAO,SAAS,KAAK,SAAS,SAAS,GAAG,QAAQ;AACnE,eAAK,YAAY,KAAK,SAAS;AAAA,QACjC;AAAA,MACF;AACA,UAAI,MAAM,SAAS,MAAM,MAAM,SAAS,KAAK,WAAW;AACtD,mBAAW,MAAM,KAAK,SAAS;AAC/B,aAAK,OAAO,KAAK,QAAQ;AACzB,aAAK,aAAa,SAAS;AAC3B,YAAI,KAAK,oBAAoB,MAAM;AACjC,eAAK,kBAAkB;AAAA,QACzB;AACA,iBAAS,IAAI,OAAO,CAAC;AAAA,MACvB,OAAO;AACL,aAAK,OAAO,KAAK,KAAK;AACtB,aAAK,aAAa,MAAM;AAAA,MAC1B;AAAA,IACF;AACA,SAAK,UAAU,MAAM;AAAA,EACvB;AAAA,EACA,QAAQ,QAAQ,OAAO;AACrB,QAAI;AACJ,QAAI,KAAK,OAAO,WAAW,GAAG;AAC5B,YAAM,QAAQ,KAAK,OAAO;AAC1B,UAAI,SAAS,KAAK,SAAS,MAAM,SAAS,GAAG;AAC3C,eAAO,KAAK,WAAW,MAAM,SAAS,QAAQ,MAAM,SAAS,GAAG,KAAK,MAAM;AAC3E,aAAK,kBAAkB;AACvB,aAAK,SAAS,CAAC;AAAA,MACjB,OAAO;AACL,eAAO,MAAM,OAAO,GAAG,KAAK,MAAM;AAAA,MACpC;AAAA,IACF,OAAO;AACL,aAAO,OAAO,KAAK,QAAQ,KAAK,MAAM;AAAA,IACxC;AACA,QAAI,OAAO;AACT,WAAK,MAAM;AAAA,IACb;AACA,WAAO;AAAA,EACT;AACF;;;ACzEA,IAAM,kBAAkB;AACxB,IAAM,kBAAkB;AACxB,IAAM,uBAAuB,CAAC;AAC9B,qBAAqB,MAAM;AAC3B,qBAAqB,MAAM;AAC3B,qBAAqB,MAAM;AAC3B,qBAAqB,MAAM;AAC3B,qBAAqB,MAAM;AAC3B,SAAS,iBAAiB,MAAM,KAAK,MAAM;AACzC,MAAI,KAAK,SAAS,MAAM,MAAM;AAC5B,UAAM,IAAI,MAAM,GAAI,0CAA2C;AAAA,EACjE;AACF;;;ACJO,IAAM,iBAAiB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO,sBAAsB;AAC/B;AACO,SAAS,UAAU,MAAM,QAAQC,UAAS;AAC/C,mBAAiB,MAAM,QAAQ,CAAC;AAChC,QAAM,QAAQ,KAAK;AACnB,MAAIA,SAAQ,WAAW,QAAQ,QAAQ,eAAe,IAAI;AACxD,UAAM,IAAI,MAAM,GAAI,8EAA+E;AAAA,EACrG;AACA,SAAO;AACT;AACO,SAAS,WAAW,MAAM,QAAQA,UAAS;AAChD,mBAAiB,MAAM,QAAQ,CAAC;AAChC,QAAM,QAAQ,KAAK,WAAW,IAAI,KAAK,SAAS;AAChD,MAAIA,SAAQ,WAAW,QAAQ,QAAQ,eAAe,IAAI;AACxD,UAAM,IAAI,MAAM,GAAI,8EAA+E;AAAA,EACrG;AACA,SAAO;AACT;AACO,SAAS,WAAW,MAAM,QAAQA,UAAS;AAChD,mBAAiB,MAAM,QAAQ,CAAC;AAChC,QAAM,QAAQ,KAAK,UAAU,YAAY,KAAK,SAAS,MAAM,OAAO,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS;AAC3G,MAAIA,SAAQ,WAAW,QAAQ,QAAQ,eAAe,IAAI;AACxD,UAAM,IAAI,MAAM,GAAI,8EAA+E;AAAA,EACrG;AACA,SAAO;AACT;AACO,SAAS,WAAW,MAAM,QAAQA,UAAS;AAChD,mBAAiB,MAAM,QAAQ,CAAC;AAChC,QAAM,KAAK,KAAK,UAAU,YAAY,KAAK,SAAS,MAAM,OAAO,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS;AACxG,QAAM,KAAK,KAAK,SAAS,KAAK,YAAY,KAAK,SAAS,MAAM,OAAO,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS;AAC5G,QAAM,SAAS,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;AACpD,MAAIA,SAAQ,WAAW,QAAQ,QAAQ,eAAe,IAAI;AACxD,UAAM,IAAI,MAAM,GAAI,8EAA+E;AAAA,EACrG;AACA,MAAI,SAAS,OAAO,kBAAkB;AACpC,WAAO,OAAO,KAAK;AAAA,EACrB;AACA,MAAIA,SAAQ,gBAAgB,MAAM;AAChC,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,GAAI,8EAA+E;AACrG;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,SAAO,IAAI,MAAM,KAAK,MAAM,UAAU,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AAClE;AACO,SAAS,aAAa,MAAM,KAAK,QAAQA,UAAS;AACvD,SAAO,IAAI,MAAM,KAAK,MAAM,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACnE;AACO,SAAS,aAAa,MAAM,KAAK,QAAQA,UAAS;AACvD,SAAO,IAAI,MAAM,KAAK,MAAM,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACnE;AACO,SAAS,aAAa,MAAM,KAAK,QAAQA,UAAS;AACvD,SAAO,IAAI,MAAM,KAAK,MAAM,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACnE;AACO,SAAS,WAAWC,MAAK,OAAO;AACrC,SAAO,gBAAgBA,MAAK,GAAG,MAAM,KAAK;AAC5C;AACO,SAAS,gBAAgBA,MAAK,OAAO,MAAM;AAChD,MAAI,OAAO,eAAe,IAAI;AAC5B,UAAM,QAAQ,OAAO,IAAI;AACzB,IAAAA,KAAI,KAAK,CAAC,QAAQ,KAAK,CAAC;AAAA,EAC1B,WAAW,OAAO,eAAe,IAAI;AACnC,UAAM,QAAQ,OAAO,IAAI;AACzB,IAAAA,KAAI,KAAK;AAAA,MACP,QAAQ;AAAA,MACR;AAAA,IACF,CAAC;AAAA,EACH,WAAW,OAAO,eAAe,IAAI;AACnC,UAAM,QAAQ,OAAO,IAAI;AACzB,IAAAA,KAAI,KAAK;AAAA,MACP,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA,IACV,CAAC;AAAA,EACH,WAAW,OAAO,eAAe,IAAI;AACnC,UAAM,QAAQ,OAAO,IAAI;AACzB,IAAAA,KAAI,KAAK;AAAA,MACP,QAAQ;AAAA,MACR,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,UAAU,IAAI;AAAA,MACd,QAAQ;AAAA,IACV,CAAC;AAAA,EACH,OAAO;AACL,UAAM,QAAQ,OAAO,IAAI;AACzB,QAAI,QAAQ,eAAe,IAAI;AAC7B,YAAM,MAAM;AAAA,QACV,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,UAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,UAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,UAAI,KAAK,KAAK;AACd,WAAK,MAAM;AACX,UAAI,KAAK,KAAK;AACd,WAAK,MAAM;AACX,UAAI,KAAK,KAAK;AACd,WAAK,MAAM;AACX,UAAI,KAAK,KAAK;AACd,UAAI,KAAK,KAAK;AACd,WAAK,MAAM;AACX,UAAI,KAAK,KAAK;AACd,WAAK,MAAM;AACX,UAAI,KAAK,KAAK;AACd,WAAK,MAAM;AACX,UAAI,KAAK,KAAK;AACd,MAAAA,KAAI,KAAK,GAAG;AAAA,IACd,OAAO;AACL,YAAM,IAAI,MAAM,GAAI,gEAAiE;AAAA,IACvF;AAAA,EACF;AACF;AACA,WAAW,cAAc,SAAS,YAAY,OAAO;AACnD,SAAO,gBAAgB,YAAY,MAAM,KAAK;AAChD;AACA,gBAAgB,cAAc,SAASC,aAAY,MAAM;AACvD,MAAI,OAAO,eAAe,IAAI;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,OAAO,eAAe,IAAI;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,OAAO,eAAe,IAAI;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,OAAO,eAAe,IAAI;AAC5B,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,WAAW,gBAAgB,SAAS,cAAc,MAAM,MAAM;AAC5D,SAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,KAAK,QAAQ,KAAK,QAAQ,IAAI;AACtE;;;ACjJO,SAAS,cAAc,MAAM,KAAK,QAAQC,UAAS;AACxD,SAAO,IAAI,MAAM,KAAK,QAAQ,KAAU,UAAU,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AAC9E;AACO,SAAS,eAAe,MAAM,KAAK,QAAQA,UAAS;AACzD,SAAO,IAAI,MAAM,KAAK,QAAQ,KAAU,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AAC/E;AACO,SAAS,eAAe,MAAM,KAAK,QAAQA,UAAS;AACzD,SAAO,IAAI,MAAM,KAAK,QAAQ,KAAU,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AAC/E;AACA,IAAM,QAAQ,OAAO,EAAE;AACvB,IAAM,QAAQ,OAAO,CAAC;AACf,SAAS,eAAe,MAAM,KAAK,QAAQA,UAAS;AACzD,QAAM,MAAW,WAAW,MAAM,MAAM,GAAGA,QAAO;AAClD,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,QAAQ,KAAK;AACnB,QAAI,SAAS,OAAO,kBAAkB;AACpC,aAAO,IAAI,MAAM,KAAK,QAAQ,OAAO,CAAC;AAAA,IACxC;AAAA,EACF;AACA,MAAIA,SAAQ,gBAAgB,MAAM;AAChC,UAAM,IAAI,MAAM,GAAI,8EAA+E;AAAA,EACrG;AACA,SAAO,IAAI,MAAM,KAAK,QAAQ,QAAQ,OAAO,GAAG,GAAG,CAAC;AACtD;AACO,SAAS,aAAaC,MAAK,OAAO;AACvC,QAAM,SAAS,MAAM;AACrB,QAAM,WAAW,OAAO,WAAW,WAAW,SAAS,QAAQ,QAAQ,SAAS,KAAK;AACrF,EAAK,gBAAgBA,MAAK,MAAM,KAAK,cAAc,QAAQ;AAC7D;AACA,aAAa,cAAc,SAASC,aAAY,OAAO;AACrD,QAAM,SAAS,MAAM;AACrB,QAAM,WAAW,OAAO,WAAW,WAAW,SAAS,QAAQ,QAAQ,SAAS,KAAK;AACrF,MAAI,WAAgB,eAAe,IAAI;AACrC,WAAO;AAAA,EACT;AACA,MAAI,WAAgB,eAAe,IAAI;AACrC,WAAO;AAAA,EACT;AACA,MAAI,WAAgB,eAAe,IAAI;AACrC,WAAO;AAAA,EACT;AACA,MAAI,WAAgB,eAAe,IAAI;AACrC,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,aAAa,gBAAgB,SAASC,eAAc,MAAM,MAAM;AAC9D,SAAO,KAAK,QAAQ,KAAK,QAAQ,IAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK;AACtE;;;ACxCA,SAAS,QAAQ,MAAM,KAAK,QAAQC,SAAQ;AAC1C,mBAAiB,MAAM,KAAK,SAASA,OAAM;AAC3C,QAAMC,OAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,SAASD,OAAM;AAC3D,SAAO,IAAI,MAAM,KAAK,OAAOC,MAAK,SAASD,OAAM;AACnD;AACO,SAAS,mBAAmB,MAAM,KAAK,OAAO,UAAU;AAC7D,SAAO,QAAQ,MAAM,KAAK,GAAG,KAAK;AACpC;AACO,SAAS,aAAa,MAAM,KAAK,QAAQE,UAAS;AACvD,SAAO,QAAQ,MAAM,KAAK,GAAQ,UAAU,MAAM,MAAM,GAAGA,QAAO,CAAC;AACrE;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAO,QAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGA,QAAO,CAAC;AACtE;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAO,QAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGA,QAAO,CAAC;AACtE;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,QAAM,IAAS,WAAW,MAAM,MAAM,GAAGA,QAAO;AAChD,MAAI,OAAO,MAAM,UAAU;AACzB,UAAM,IAAI,MAAM,GAAI,4DAA6D;AAAA,EACnF;AACA,SAAO,QAAQ,MAAM,KAAK,GAAG,CAAC;AAChC;AACA,SAAS,WAAW,OAAO;AACzB,MAAI,MAAM,iBAAiB,QAAW;AACpC,UAAM,eAAe,MAAM,SAAS,KAAK,SAASC,YAAW,MAAM,KAAK,IAAI,MAAM;AAAA,EACpF;AACA,SAAO,MAAM;AACf;AACO,SAAS,YAAYF,MAAK,OAAO;AACtC,QAAM,QAAQ,WAAW,KAAK;AAC9B,EAAK,gBAAgBA,MAAK,MAAM,KAAK,cAAc,MAAM,MAAM;AAC/D,EAAAA,KAAI,KAAK,KAAK;AAChB;AACA,YAAY,cAAc,SAASG,aAAY,OAAO;AACpD,QAAM,QAAQ,WAAW,KAAK;AAC9B,SAAY,gBAAgB,YAAY,MAAM,MAAM,IAAI,MAAM;AAChE;AACA,YAAY,gBAAgB,SAASC,eAAc,MAAM,MAAM;AAC7D,SAAO,aAAa,WAAW,IAAI,GAAG,WAAW,IAAI,CAAC;AACxD;AACO,SAAS,aAAa,IAAI,IAAI;AACnC,SAAO,GAAG,SAAS,GAAG,SAAS,KAAK,GAAG,SAAS,GAAG,SAAS,IAAI,QAAQ,IAAI,EAAE;AAChF;;;AC5CA,SAASC,SAAQ,MAAM,KAAK,QAAQC,SAAQC,UAAS;AACnD,QAAM,YAAY,SAASD;AAC3B,mBAAiB,MAAM,KAAK,SAAS;AACrC,QAAM,MAAM,IAAI,MAAM,KAAK,QAAQE,UAAS,MAAM,MAAM,QAAQ,MAAM,SAAS,GAAG,SAAS;AAC3F,MAAID,SAAQ,sBAAsB,MAAM;AACtC,QAAI,YAAY,MAAM,MAAM,MAAM,QAAQ,MAAM,SAAS;AAAA,EAC3D;AACA,SAAO;AACT;AACO,SAAS,oBAAoB,MAAM,KAAK,OAAOA,UAAS;AAC7D,SAAOF,SAAQ,MAAM,KAAK,GAAG,OAAOE,QAAO;AAC7C;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,UAAU,MAAM,MAAM,GAAGE,QAAO,GAAGA,QAAO;AAC9E;AACO,SAAS,eAAe,MAAM,KAAK,QAAQA,UAAS;AACzD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGE,QAAO,GAAGA,QAAO;AAC/E;AACO,SAAS,eAAe,MAAM,KAAK,QAAQA,UAAS;AACzD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGE,QAAO,GAAGA,QAAO;AAC/E;AACO,SAAS,eAAe,MAAM,KAAK,QAAQA,UAAS;AACzD,QAAM,IAAS,WAAW,MAAM,MAAM,GAAGA,QAAO;AAChD,MAAI,OAAO,MAAM,UAAU;AACzB,UAAM,IAAI,MAAM,GAAI,6DAA8D;AAAA,EACpF;AACA,SAAOF,SAAQ,MAAM,KAAK,GAAG,GAAGE,QAAO;AACzC;AACO,IAAM,eAAe;;;ACpC5B,SAASE,SAAQ,OAAO,MAAM,QAAQC,SAAQ;AAC5C,SAAO,IAAI,MAAM,KAAK,OAAOA,SAAQ,MAAM;AAC7C;AACO,SAAS,mBAAmB,MAAM,KAAK,OAAO,UAAU;AAC7D,SAAOD,SAAQ,MAAM,KAAK,GAAG,KAAK;AACpC;AACO,SAAS,aAAa,MAAM,KAAK,QAAQE,UAAS;AACvD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,UAAU,MAAM,MAAM,GAAGE,QAAO,CAAC;AACrE;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGE,QAAO,CAAC;AACtE;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGE,QAAO,CAAC;AACtE;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,QAAM,IAAS,WAAW,MAAM,MAAM,GAAGA,QAAO;AAChD,MAAI,OAAO,MAAM,UAAU;AACzB,UAAM,IAAI,MAAM,GAAI,4DAA6D;AAAA,EACnF;AACA,SAAOF,SAAQ,MAAM,KAAK,GAAG,CAAC;AAChC;AACO,SAAS,sBAAsB,MAAM,KAAK,QAAQE,UAAS;AAChE,MAAIA,SAAQ,oBAAoB,OAAO;AACrC,UAAM,IAAI,MAAM,GAAI,qDAAsD;AAAA,EAC5E;AACA,SAAOF,SAAQ,MAAM,KAAK,GAAG,QAAQ;AACvC;AACO,SAAS,YAAYG,MAAK,OAAO;AACtC,EAAK,gBAAgBA,MAAK,KAAK,MAAM,cAAc,MAAM,KAAK;AAChE;AACA,YAAY,gBAAqB,WAAW;AAC5C,YAAY,cAAc,SAASC,aAAY,OAAO;AACpD,SAAY,gBAAgB,YAAY,MAAM,KAAK;AACrD;;;AClCA,SAASC,SAAQ,OAAO,MAAM,QAAQC,SAAQ;AAC5C,SAAO,IAAI,MAAM,KAAK,KAAKA,SAAQ,MAAM;AAC3C;AACO,SAAS,iBAAiB,MAAM,KAAK,OAAO,UAAU;AAC3D,SAAOD,SAAQ,MAAM,KAAK,GAAG,KAAK;AACpC;AACO,SAAS,WAAW,MAAM,KAAK,QAAQE,UAAS;AACrD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,UAAU,MAAM,MAAM,GAAGE,QAAO,CAAC;AACrE;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGE,QAAO,CAAC;AACtE;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,SAAOF,SAAQ,MAAM,KAAK,GAAQ,WAAW,MAAM,MAAM,GAAGE,QAAO,CAAC;AACtE;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,QAAM,IAAS,WAAW,MAAM,MAAM,GAAGA,QAAO;AAChD,MAAI,OAAO,MAAM,UAAU;AACzB,UAAM,IAAI,MAAM,GAAI,0DAA2D;AAAA,EACjF;AACA,SAAOF,SAAQ,MAAM,KAAK,GAAG,CAAC;AAChC;AACO,SAAS,oBAAoB,MAAM,KAAK,QAAQE,UAAS;AAC9D,MAAIA,SAAQ,oBAAoB,OAAO;AACrC,UAAM,IAAI,MAAM,GAAI,qDAAsD;AAAA,EAC5E;AACA,SAAOF,SAAQ,MAAM,KAAK,GAAG,QAAQ;AACvC;AACO,SAAS,UAAUG,MAAK,OAAO;AACpC,EAAK,gBAAgBA,MAAK,KAAK,IAAI,cAAc,MAAM,KAAK;AAC9D;AACA,UAAU,gBAAqB,WAAW;AAC1C,UAAU,cAAc,SAASC,aAAY,OAAO;AAClD,SAAY,gBAAgB,YAAY,MAAM,KAAK;AACrD;;;ACnCO,SAAS,iBAAiB,OAAO,MAAM,OAAO,UAAU;AAC7D,SAAO,IAAI,MAAM,KAAK,KAAK,OAAO,CAAC;AACrC;AACO,SAAS,WAAW,MAAM,KAAK,QAAQC,UAAS;AACrD,SAAO,IAAI,MAAM,KAAK,KAAU,UAAU,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACtE;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,SAAO,IAAI,MAAM,KAAK,KAAU,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACvE;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,SAAO,IAAI,MAAM,KAAK,KAAU,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACvE;AACO,SAAS,YAAY,MAAM,KAAK,QAAQA,UAAS;AACtD,SAAO,IAAI,MAAM,KAAK,KAAU,WAAW,MAAM,MAAM,GAAGA,QAAO,GAAG,CAAC;AACvE;AACO,SAAS,UAAUC,MAAK,OAAO;AACpC,EAAK,gBAAgBA,MAAK,KAAK,IAAI,cAAc,MAAM,KAAK;AAC9D;AACA,UAAU,gBAAqB,WAAW;AAC1C,UAAU,cAAc,SAASC,aAAY,OAAO;AAClD,SAAY,gBAAgB,YAAY,MAAM,KAAK;AACrD;;;ACpBA,IAAM,cAAc;AACpB,IAAM,aAAa;AACnB,IAAM,aAAa;AACnB,IAAM,kBAAkB;AACjB,SAAS,gBAAgB,OAAO,MAAM,QAAQC,UAAS;AAC5D,MAAIA,SAAQ,mBAAmB,OAAO;AACpC,UAAM,IAAI,MAAM,GAAI,oDAAqD;AAAA,EAC3E,WAAWA,SAAQ,0BAA0B,MAAM;AACjD,WAAO,IAAI,MAAM,KAAK,MAAM,MAAM,CAAC;AAAA,EACrC;AACA,SAAO,IAAI,MAAM,KAAK,WAAW,QAAW,CAAC;AAC/C;AACO,SAAS,YAAY,OAAO,MAAM,QAAQA,UAAS;AACxD,MAAIA,SAAQ,oBAAoB,OAAO;AACrC,UAAM,IAAI,MAAM,GAAI,qDAAsD;AAAA,EAC5E;AACA,SAAO,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAC3C;AACA,SAAS,YAAY,OAAO,OAAOA,UAAS;AAC1C,MAAIA,UAAS;AACX,QAAIA,SAAQ,aAAa,SAAS,OAAO,MAAM,KAAK,GAAG;AACrD,YAAM,IAAI,MAAM,GAAI,8CAA+C;AAAA,IACrE;AACA,QAAIA,SAAQ,kBAAkB,UAAU,UAAU,YAAY,UAAU,YAAY;AAClF,YAAM,IAAI,MAAM,GAAI,mDAAoD;AAAA,IAC1E;AAAA,EACF;AACA,SAAO,IAAI,MAAM,KAAK,OAAO,OAAO,KAAK;AAC3C;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAO,YAAY,YAAY,MAAM,MAAM,CAAC,GAAG,GAAGA,QAAO;AAC3D;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAO,YAAY,YAAY,MAAM,MAAM,CAAC,GAAG,GAAGA,QAAO;AAC3D;AACO,SAAS,cAAc,MAAM,KAAK,QAAQA,UAAS;AACxD,SAAO,YAAY,YAAY,MAAM,MAAM,CAAC,GAAG,GAAGA,QAAO;AAC3D;AACO,SAAS,YAAYC,MAAK,OAAOD,UAAS;AAC/C,QAAM,QAAQ,MAAM;AACpB,MAAI,UAAU,OAAO;AACnB,IAAAC,KAAI,KAAK,CAAC,KAAK,MAAM,eAAe,WAAW,CAAC;AAAA,EAClD,WAAW,UAAU,MAAM;AACzB,IAAAA,KAAI,KAAK,CAAC,KAAK,MAAM,eAAe,UAAU,CAAC;AAAA,EACjD,WAAW,UAAU,MAAM;AACzB,IAAAA,KAAI,KAAK,CAAC,KAAK,MAAM,eAAe,UAAU,CAAC;AAAA,EACjD,WAAW,UAAU,QAAW;AAC9B,IAAAA,KAAI,KAAK,CAAC,KAAK,MAAM,eAAe,eAAe,CAAC;AAAA,EACtD,OAAO;AACL,QAAI;AACJ,QAAI,UAAU;AACd,QAAI,CAACD,YAAWA,SAAQ,YAAY,MAAM;AACxC,oBAAc,KAAK;AACnB,gBAAU,YAAY,MAAM,CAAC;AAC7B,UAAI,UAAU,WAAW,OAAO,MAAM,KAAK,GAAG;AAC5C,aAAK,KAAK;AACV,QAAAC,KAAI,KAAK,KAAK,MAAM,GAAG,CAAC,CAAC;AACzB,kBAAU;AAAA,MACZ,OAAO;AACL,sBAAc,KAAK;AACnB,kBAAU,YAAY,MAAM,CAAC;AAC7B,YAAI,UAAU,SAAS;AACrB,eAAK,KAAK;AACV,UAAAA,KAAI,KAAK,KAAK,MAAM,GAAG,CAAC,CAAC;AACzB,oBAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AACA,QAAI,CAAC,SAAS;AACZ,oBAAc,KAAK;AACnB,gBAAU,YAAY,MAAM,CAAC;AAC7B,WAAK,KAAK;AACV,MAAAA,KAAI,KAAK,KAAK,MAAM,GAAG,CAAC,CAAC;AAAA,IAC3B;AAAA,EACF;AACF;AACA,YAAY,cAAc,SAASC,aAAY,OAAOF,UAAS;AAC7D,QAAM,QAAQ,MAAM;AACpB,MAAI,UAAU,SAAS,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAW;AAC9E,WAAO;AAAA,EACT;AACA,MAAI,CAACA,YAAWA,SAAQ,YAAY,MAAM;AACxC,kBAAc,KAAK;AACnB,QAAI,UAAU,YAAY,MAAM,CAAC;AACjC,QAAI,UAAU,WAAW,OAAO,MAAM,KAAK,GAAG;AAC5C,aAAO;AAAA,IACT;AACA,kBAAc,KAAK;AACnB,cAAU,YAAY,MAAM,CAAC;AAC7B,QAAI,UAAU,SAAS;AACrB,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAM,SAAS,IAAI,YAAY,CAAC;AAChC,IAAM,WAAW,IAAI,SAAS,QAAQ,CAAC;AACvC,IAAM,OAAO,IAAI,WAAW,QAAQ,CAAC;AACrC,SAAS,cAAc,KAAK;AAC1B,MAAI,QAAQ,UAAU;AACpB,aAAS,UAAU,GAAG,OAAO,KAAK;AAAA,EACpC,WAAW,QAAQ,WAAW;AAC5B,aAAS,UAAU,GAAG,OAAO,KAAK;AAAA,EACpC,WAAW,OAAO,MAAM,GAAG,GAAG;AAC5B,aAAS,UAAU,GAAG,OAAO,KAAK;AAAA,EACpC,OAAO;AACL,aAAS,WAAW,GAAG,GAAG;AAC1B,UAAM,SAAS,SAAS,UAAU,CAAC;AACnC,UAAM,YAAY,SAAS,eAAe;AAC1C,UAAM,WAAW,SAAS;AAC1B,QAAI,aAAa,KAAK;AACpB,eAAS,UAAU,GAAG,OAAO,KAAK;AAAA,IACpC,WAAW,aAAa,GAAG;AACzB,eAAS,UAAU,IAAI,MAAM,eAAe,KAAK,YAAY,IAAI,KAAK;AAAA,IACxE,OAAO;AACL,YAAM,kBAAkB,WAAW;AACnC,UAAI,kBAAkB,KAAK;AACzB,iBAAS,UAAU,GAAG,CAAC;AAAA,MACzB,WAAW,kBAAkB,KAAK;AAChC,iBAAS,UAAU,IAAI,SAAS,eAAe,KAAK,KAAK,KAAK,iBAAiB,KAAK;AAAA,MACtF,OAAO;AACL,iBAAS,UAAU,IAAI,SAAS,eAAe,KAAK,kBAAkB,MAAM,KAAK,YAAY,IAAI,KAAK;AAAA,MACxG;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,YAAYG,OAAM,KAAK;AAC9B,MAAIA,MAAK,SAAS,MAAM,GAAG;AACzB,UAAM,IAAI,MAAM,GAAI,6CAA8C;AAAA,EACpE;AACA,QAAM,QAAQA,MAAK,QAAQ,KAAKA,MAAK,MAAM;AAC3C,MAAI,SAAS,OAAO;AAClB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,OAAO;AAClB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,OAAO;AAClB,WAAO;AAAA,EACT;AACA,QAAM,MAAM,QAAQ,KAAK;AACzB,QAAM,OAAO,OAAO;AACpB,MAAI;AACJ,MAAI,QAAQ,GAAG;AACb,UAAM,OAAO,KAAK;AAAA,EACpB,WAAW,QAAQ,IAAI;AACrB,WAAO,OAAO,QAAQ,MAAM,MAAM;AAAA,EACpC,OAAO;AACL,UAAM,SAAS,IAAI,WAAW;AAAA,EAChC;AACA,SAAO,OAAO,QAAQ,CAAC,MAAM;AAC/B;AACA,SAAS,cAAc,KAAK;AAC1B,WAAS,WAAW,GAAG,KAAK,KAAK;AACnC;AACA,SAAS,YAAYA,OAAM,KAAK;AAC9B,MAAIA,MAAK,SAAS,MAAM,GAAG;AACzB,UAAM,IAAI,MAAM,GAAI,6CAA8C;AAAA,EACpE;AACA,QAAM,UAAUA,MAAK,cAAc,KAAK;AACxC,SAAO,IAAI,SAASA,MAAK,QAAQ,QAAQ,CAAC,EAAE,WAAW,GAAG,KAAK;AACjE;AACA,SAAS,cAAc,KAAK;AAC1B,WAAS,WAAW,GAAG,KAAK,KAAK;AACnC;AACA,SAAS,YAAYA,OAAM,KAAK;AAC9B,MAAIA,MAAK,SAAS,MAAM,GAAG;AACzB,UAAM,IAAI,MAAM,GAAI,6CAA8C;AAAA,EACpE;AACA,QAAM,UAAUA,MAAK,cAAc,KAAK;AACxC,SAAO,IAAI,SAASA,MAAK,QAAQ,QAAQ,CAAC,EAAE,WAAW,GAAG,KAAK;AACjE;AACA,YAAY,gBAAgB,WAAW;;;ACpKvC,SAAS,aAAa,MAAM,KAAK,OAAO;AACtC,QAAM,IAAI,MAAM,GAAI,8CAAgD,oBAAsB,KAAK,SAAS,GAAI;AAC9G;AACA,SAAS,QAAQ,KAAK;AACpB,SAAO,MAAM;AACX,UAAM,IAAI,MAAM,GAAI,mBAAqB,KAAM;AAAA,EACjD;AACF;AACO,IAAM,OAAO,CAAC;AACrB,SAAS,IAAI,GAAG,KAAK,IAAI,KAAK;AAC5B,OAAK,KAAK;AACZ;AACA,KAAK,MAAW;AAChB,KAAK,MAAW;AAChB,KAAK,MAAW;AAChB,KAAK,MAAW;AAChB,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,MAAM;AACX,SAAS,IAAI,IAAI,KAAK,IAAI,KAAK;AAC7B,OAAK,KAAK;AACZ;AACA,KAAK,MAAa;AAClB,KAAK,MAAa;AAClB,KAAK,MAAa;AAClB,KAAK,MAAa;AAClB,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,MAAM;AACX,SAAS,IAAI,IAAI,KAAK,IAAI,KAAK;AAC7B,OAAK,KAAW;AAClB;AACA,KAAK,MAAY;AACjB,KAAK,MAAY;AACjB,KAAK,MAAY;AACjB,KAAK,MAAY;AACjB,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,MAAM,QAAQ,mDAAmD;AACtE,SAAS,IAAI,IAAI,KAAK,KAAK,KAAK;AAC9B,OAAK,KAAY;AACnB;AACA,KAAK,OAAc;AACnB,KAAK,OAAc;AACnB,KAAK,OAAc;AACnB,KAAK,OAAc;AACnB,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO,QAAQ,mDAAmD;AACvE,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK;AAC/B,OAAK,KAAW;AAClB;AACA,KAAK,OAAa;AAClB,KAAK,OAAa;AAClB,KAAK,OAAa;AAClB,KAAK,OAAa;AAClB,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAa;AAClB,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK;AAC/B,OAAK,KAAS;AAChB;AACA,KAAK,OAAW;AAChB,KAAK,OAAW;AAChB,KAAK,OAAW;AAChB,KAAK,OAAW;AAChB,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAW;AAChB,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK;AAC/B,OAAK,KAAS;AAChB;AACA,KAAK,OAAW;AAChB,KAAK,OAAW;AAChB,KAAK,OAAW;AAChB,KAAK,OAAW;AAChB,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK;AAC/B,OAAK,KAAK,QAAQ,iCAAiC;AACrD;AACA,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAa;AAClB,KAAK,OAAO,QAAQ,iCAAiC;AACrD,KAAK,OAAa;AAClB,KAAK,OAAa;AAClB,KAAK,OAAa;AAClB,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAO;AACZ,KAAK,OAAa;AACX,IAAM,QAAQ,CAAC;AACtB,SAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,QAAM,KAAK,IAAI,MAAM,KAAK,MAAM,GAAG,CAAC;AACtC;AACA,SAAS,IAAI,IAAI,KAAK,KAAK,KAAK;AAC9B,QAAM,KAAK,KAAK,IAAI,MAAM,KAAK,QAAQ,GAAG,CAAC;AAC7C;AACA,MAAM,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI,WAAW,CAAC,GAAG,CAAC;AACtD,MAAM,MAAM,IAAI,MAAM,KAAK,QAAQ,IAAI,CAAC;AACxC,MAAM,OAAO,IAAI,MAAM,KAAK,OAAO,GAAG,CAAC;AACvC,MAAM,OAAO,IAAI,MAAM,KAAK,KAAK,GAAG,CAAC;AACrC,MAAM,OAAO,IAAI,MAAM,KAAK,OAAO,OAAO,CAAC;AAC3C,MAAM,OAAO,IAAI,MAAM,KAAK,MAAM,MAAM,CAAC;AACzC,MAAM,OAAO,IAAI,MAAM,KAAK,MAAM,MAAM,CAAC;AAClC,SAAS,iBAAiB,OAAO;AACtC,UAAQ,MAAM;AAAA,SACT,KAAK;AACR,aAAO,UAAU,CAAC,GAAG,CAAC;AAAA,SACnB,KAAK;AACR,aAAO,UAAU,CAAC,GAAG,CAAC;AAAA,SACnB,KAAK;AACR,aAAO,UAAU,CAAC,GAAG,CAAC;AAAA,SACnB,KAAK;AACR,UAAI,CAAC,MAAM,MAAM,QAAQ;AACvB,eAAO,UAAU,CAAC,EAAE,CAAC;AAAA,MACvB;AACA;AAAA,SACG,KAAK;AACR,UAAI,MAAM,UAAU,IAAI;AACtB,eAAO,UAAU,CAAC,EAAE,CAAC;AAAA,MACvB;AACA;AAAA,SACG,KAAK;AACR,UAAI,MAAM,UAAU,GAAG;AACrB,eAAO,UAAU,CAAC,GAAG,CAAC;AAAA,MACxB;AACA;AAAA,SACG,KAAK;AACR,UAAI,MAAM,UAAU,GAAG;AACrB,eAAO,UAAU,CAAC,GAAG,CAAC;AAAA,MACxB;AACA;AAAA,SACG,KAAK;AACR,UAAI,MAAM,QAAQ,IAAI;AACpB,eAAO,UAAU,CAAC,OAAO,MAAM,KAAK,CAAC,CAAC;AAAA,MACxC;AACA;AAAA,SACG,KAAK;AACR,UAAI,MAAM,SAAS,KAAK;AACtB,eAAO,UAAU,CAAC,KAAK,OAAO,MAAM,KAAK,CAAC,CAAC;AAAA,MAC7C;AAAA;AAEJ;;;ACtJA,IAAM,uBAAuB;AAAA,EAC3B,SAAS;AAAA,EACT;AAAA,EACA;AACF;AACO,SAAS,mBAAmB;AACjC,QAAM,WAAW,CAAC;AAClB,WAAS,KAAK,KAAK,SAAS;AAC5B,WAAS,KAAK,OAAO,SAAS;AAC9B,WAAS,KAAK,MAAM,SAAS;AAC7B,WAAS,KAAK,OAAO,SAAS;AAC9B,WAAS,KAAK,MAAM,SAAS;AAC7B,WAAS,KAAK,IAAI,SAAS;AAC3B,WAAS,KAAK,IAAI,SAAS;AAC3B,WAAS,KAAK,MAAM,SAAS;AAC7B,SAAO;AACT;AACA,IAAM,eAAe,iBAAiB;AACtC,IAAM,MAAM,IAAI,GAAG;AACnB,IAAM,MAAN,MAAU;AAAA,EACR,YAAY,KAAK,QAAQ;AACvB,SAAK,MAAM;AACX,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,SAAS,KAAK;AACZ,QAAI,IAAI;AACR,OAAG;AACD,UAAI,EAAE,QAAQ,KAAK;AACjB,eAAO;AAAA,MACT;AAAA,IACF,SAAS,IAAI,EAAE;AACf,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY,OAAO,KAAK;AAC7B,QAAI,SAAS,MAAM,SAAS,GAAG,GAAG;AAChC,YAAM,IAAI,MAAM,GAAI,qDAAsD;AAAA,IAC5E;AACA,WAAO,IAAI,IAAI,KAAK,KAAK;AAAA,EAC3B;AACF;AACA,IAAM,eAAe;AAAA,EACnB,MAAM,IAAI,MAAM,KAAK,MAAM,IAAI;AAAA,EAC/B,WAAW,IAAI,MAAM,KAAK,WAAW,MAAS;AAAA,EAC9C,MAAM,IAAI,MAAM,KAAK,MAAM,IAAI;AAAA,EAC/B,OAAO,IAAI,MAAM,KAAK,OAAO,KAAK;AAAA,EAClC,YAAY,IAAI,MAAM,KAAK,OAAO,CAAC;AAAA,EACnC,UAAU,IAAI,MAAM,KAAK,KAAK,CAAC;AACjC;AACA,IAAM,eAAe;AAAA,EACnB,OAAO,KAAK,MAAM,UAAU,WAAW;AACrC,QAAI,CAAC,OAAO,UAAU,GAAG,KAAK,CAAC,OAAO,cAAc,GAAG,GAAG;AACxD,aAAO,IAAI,MAAM,KAAK,OAAO,GAAG;AAAA,IAClC,WAAW,OAAO,GAAG;AACnB,aAAO,IAAI,MAAM,KAAK,MAAM,GAAG;AAAA,IACjC,OAAO;AACL,aAAO,IAAI,MAAM,KAAK,QAAQ,GAAG;AAAA,IACnC;AAAA,EACF;AAAA,EACA,OAAO,KAAK,MAAM,UAAU,WAAW;AACrC,QAAI,OAAO,OAAO,CAAC,GAAG;AACpB,aAAO,IAAI,MAAM,KAAK,MAAM,GAAG;AAAA,IACjC,OAAO;AACL,aAAO,IAAI,MAAM,KAAK,QAAQ,GAAG;AAAA,IACnC;AAAA,EACF;AAAA,EACA,WAAW,KAAK,MAAM,UAAU,WAAW;AACzC,WAAO,IAAI,MAAM,KAAK,OAAO,GAAG;AAAA,EAClC;AAAA,EACA,OAAO,KAAK,MAAM,UAAU,WAAW;AACrC,WAAO,IAAI,MAAM,KAAK,QAAQ,GAAG;AAAA,EACnC;AAAA,EACA,QAAQ,KAAK,MAAM,UAAU,WAAW;AACtC,WAAO,MAAM,aAAa,OAAO,aAAa;AAAA,EAChD;AAAA,EACA,KAAK,MAAM,MAAM,UAAU,WAAW;AACpC,WAAO,aAAa;AAAA,EACtB;AAAA,EACA,UAAU,MAAM,MAAM,UAAU,WAAW;AACzC,WAAO,aAAa;AAAA,EACtB;AAAA,EACA,YAAY,KAAK,MAAM,UAAU,WAAW;AAC1C,WAAO,IAAI,MAAM,KAAK,OAAO,IAAI,WAAW,GAAG,CAAC;AAAA,EAClD;AAAA,EACA,SAAS,KAAK,MAAM,UAAU,WAAW;AACvC,WAAO,IAAI,MAAM,KAAK,OAAO,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU,CAAC;AAAA,EACzF;AAAA,EACA,MAAM,KAAK,MAAMC,UAAS,UAAU;AAClC,QAAI,CAAC,IAAI,QAAQ;AACf,UAAIA,SAAQ,mBAAmB,MAAM;AACnC,eAAO;AAAA,UACL,aAAa;AAAA,UACb,IAAI,MAAM,KAAK,KAAK;AAAA,QACtB;AAAA,MACF;AACA,aAAO,aAAa;AAAA,IACtB;AACA,eAAW,IAAI,YAAY,UAAU,GAAG;AACxC,UAAM,UAAU,CAAC;AACjB,QAAI,IAAI;AACR,eAAW,KAAK,KAAK;AACnB,cAAQ,OAAO,eAAe,GAAGA,UAAS,QAAQ;AAAA,IACpD;AACA,QAAIA,SAAQ,gBAAgB;AAC1B,aAAO;AAAA,QACL,IAAI,MAAM,KAAK,OAAO,IAAI,MAAM;AAAA,QAChC;AAAA,QACA,IAAI,MAAM,KAAK,KAAK;AAAA,MACtB;AAAA,IACF;AACA,WAAO;AAAA,MACL,IAAI,MAAM,KAAK,OAAO,IAAI,MAAM;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,KAAK,KAAKA,UAAS,UAAU;AAClC,UAAM,QAAQ,QAAQ;AACtB,UAAM,OAAO,QAAQ,IAAI,KAAK,IAAI,OAAO,KAAK,GAAG;AACjD,UAAMC,UAAS,QAAQ,IAAI,OAAO,KAAK;AACvC,QAAI,CAACA,SAAQ;AACX,UAAID,SAAQ,mBAAmB,MAAM;AACnC,eAAO;AAAA,UACL,aAAa;AAAA,UACb,IAAI,MAAM,KAAK,KAAK;AAAA,QACtB;AAAA,MACF;AACA,aAAO,aAAa;AAAA,IACtB;AACA,eAAW,IAAI,YAAY,UAAU,GAAG;AACxC,UAAM,UAAU,CAAC;AACjB,QAAI,IAAI;AACR,eAAW,OAAO,MAAM;AACtB,cAAQ,OAAO;AAAA,QACb,eAAe,KAAKA,UAAS,QAAQ;AAAA,QACrC,eAAe,QAAQ,IAAI,IAAI,GAAG,IAAI,IAAI,MAAMA,UAAS,QAAQ;AAAA,MACnE;AAAA,IACF;AACA,mBAAe,SAASA,QAAO;AAC/B,QAAIA,SAAQ,gBAAgB;AAC1B,aAAO;AAAA,QACL,IAAI,MAAM,KAAK,KAAKC,OAAM;AAAA,QAC1B;AAAA,QACA,IAAI,MAAM,KAAK,KAAK;AAAA,MACtB;AAAA,IACF;AACA,WAAO;AAAA,MACL,IAAI,MAAM,KAAK,KAAKA,OAAM;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AACF;AACA,aAAa,MAAM,aAAa;AAChC,aAAa,SAAS,aAAa;AACnC,WAAW,OAAO,iFAAiF,MAAM,GAAG,GAAG;AAC7G,eAAa,GAAI,cAAe,aAAa;AAC/C;AACA,SAAS,eAAe,KAAKD,WAAU,CAAC,GAAG,UAAU;AACnD,QAAM,MAAM,GAAG,GAAG;AAClB,QAAM,oBAAoBA,YAAWA,SAAQ,gBAAgBA,SAAQ,aAAa,QAAQ,aAAa;AACvG,MAAI,OAAO,sBAAsB,YAAY;AAC3C,UAAM,SAAS,kBAAkB,KAAK,KAAKA,UAAS,QAAQ;AAC5D,QAAI,UAAU,MAAM;AAClB,aAAO;AAAA,IACT;AAAA,EACF;AACA,QAAM,cAAc,aAAa;AACjC,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,GAAI,qCAAuC,KAAM;AAAA,EACnE;AACA,SAAO,YAAY,KAAK,KAAKA,UAAS,QAAQ;AAChD;AACA,SAAS,eAAe,SAASA,UAAS;AACxC,MAAIA,SAAQ,WAAW;AACrB,YAAQ,KAAKA,SAAQ,SAAS;AAAA,EAChC;AACF;AACA,SAAS,UAAU,IAAI,IAAI;AACzB,QAAM,YAAY,MAAM,QAAQ,GAAG,EAAE,IAAI,GAAG,GAAG,KAAK,GAAG;AACvD,QAAM,YAAY,MAAM,QAAQ,GAAG,EAAE,IAAI,GAAG,GAAG,KAAK,GAAG;AACvD,MAAI,UAAU,SAAS,UAAU,MAAM;AACrC,WAAO,UAAU,KAAK,QAAQ,UAAU,IAAI;AAAA,EAC9C;AACA,QAAM,QAAQ,UAAU,KAAK;AAC7B,QAAM,OAAO,aAAa,OAAO,cAAc,WAAW,SAAS;AACnE,MAAI,SAAS,GAAG;AACd,YAAQ,KAAK,uEAAuE;AAAA,EACtF;AACA,SAAO;AACT;AACA,SAAS,gBAAgBE,MAAK,QAAQ,UAAUF,UAAS;AACvD,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAW,SAAS,QAAQ;AAC1B,sBAAgBE,MAAK,OAAO,UAAUF,QAAO;AAAA,IAC/C;AAAA,EACF,OAAO;AACL,aAAS,OAAO,KAAK,OAAOE,MAAK,QAAQF,QAAO;AAAA,EAClD;AACF;AACA,SAAS,aAAa,MAAM,UAAUA,UAAS;AAC7C,QAAM,SAAS,eAAe,MAAMA,QAAO;AAC3C,MAAI,CAAC,MAAM,QAAQ,MAAM,KAAKA,SAAQ,kBAAkB;AACtD,UAAM,aAAaA,SAAQ,iBAAiB,MAAM;AAClD,QAAI,YAAY;AACd,aAAO;AAAA,IACT;AACA,UAAM,UAAU,SAAS,OAAO,KAAK;AACrC,QAAI,QAAQ,aAAa;AACvB,YAAM,OAAO,QAAQ,YAAY,QAAQA,QAAO;AAChD,YAAME,OAAM,IAAI,GAAG,IAAI;AACvB,cAAQA,MAAK,QAAQF,QAAO;AAC5B,UAAIE,KAAI,OAAO,WAAW,GAAG;AAC3B,cAAM,IAAI,MAAM,+CAAgD,kBAAmB;AAAA,MACrF;AACA,aAAO,MAAMA,KAAI,OAAO,EAAE;AAAA,IAC5B;AAAA,EACF;AACA,MAAI,MAAM;AACV,kBAAgB,KAAK,QAAQ,UAAUF,QAAO;AAC9C,SAAO,IAAI,QAAQ,IAAI;AACzB;AACA,SAASG,QAAO,MAAMH,UAAS;AAC7B,EAAAA,WAAU,OAAO,OAAO,CAAC,GAAG,sBAAsBA,QAAO;AACzD,SAAO,aAAa,MAAM,cAAcA,QAAO;AACjD;;;ACzOA,IAAM,uBAAuB;AAAA,EAC3B,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,gBAAgB;AAAA,EAChB,aAAa;AACf;AACA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,MAAMI,WAAU,CAAC,GAAG;AAC9B,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,UAAUA;AAAA,EACjB;AAAA,EACA,OAAO;AACL,WAAO,KAAK,OAAO,KAAK,KAAK;AAAA,EAC/B;AAAA,EACA,OAAO;AACL,UAAM,MAAM,KAAK,KAAK,KAAK;AAC3B,QAAI,QAAQ,MAAM;AAClB,QAAI,UAAU,QAAW;AACvB,YAAM,UAAU,KAAK;AACrB,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI,MAAM,GAAI,6CAA+C,QAAQ,aAAe,IAAI,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,IAAK;AAAA,MACjI;AACA,YAAM,QAAQ,MAAM;AACpB,cAAQ,QAAQ,KAAK,MAAM,KAAK,KAAK,OAAO,KAAK,OAAO;AAAA,IAC1D;AACA,SAAK,OAAO,MAAM;AAClB,WAAO;AAAA,EACT;AACF;AACA,IAAM,OAAO,OAAO,IAAI,MAAM;AAC9B,IAAM,QAAQ,OAAO,IAAI,OAAO;AAChC,SAAS,aAAa,OAAO,WAAWA,UAAS;AAC/C,QAAM,MAAM,CAAC;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,OAAO,KAAK;AACpC,UAAM,QAAQ,eAAe,WAAWA,QAAO;AAC/C,QAAI,UAAU,OAAO;AACnB,UAAI,MAAM,UAAU,UAAU;AAC5B;AAAA,MACF;AACA,YAAM,IAAI,MAAM,GAAI,wDAAyD;AAAA,IAC/E;AACA,QAAI,UAAU,MAAM;AAClB,YAAM,IAAI,MAAM,GAAI,2DAA6D,eAAiB,MAAM,QAAS;AAAA,IACnH;AACA,QAAI,KAAK;AAAA,EACX;AACA,SAAO;AACT;AACA,SAAS,WAAW,OAAO,WAAWA,UAAS;AAC7C,QAAM,UAAUA,SAAQ,YAAY;AACpC,QAAM,MAAM,UAAU,SAAY,CAAC;AACnC,QAAM,IAAI,UAAU,oBAAI,IAAI,IAAI;AAChC,WAAS,IAAI,GAAG,IAAI,MAAM,OAAO,KAAK;AACpC,UAAM,MAAM,eAAe,WAAWA,QAAO;AAC7C,QAAI,QAAQ,OAAO;AACjB,UAAI,MAAM,UAAU,UAAU;AAC5B;AAAA,MACF;AACA,YAAM,IAAI,MAAM,GAAI,sDAAuD;AAAA,IAC7E;AACA,QAAI,QAAQ,MAAM;AAChB,YAAM,IAAI,MAAM,GAAI,yDAA2D,wBAA0B,MAAM,QAAS;AAAA,IAC1H;AACA,QAAI,YAAY,QAAQ,OAAO,QAAQ,UAAU;AAC/C,YAAM,IAAI,MAAM,GAAI,sDAAwD,OAAO,MAAO;AAAA,IAC5F;AACA,UAAM,QAAQ,eAAe,WAAWA,QAAO;AAC/C,QAAI,UAAU,MAAM;AAClB,YAAM,IAAI,MAAM,GAAI,yDAA2D,0BAA4B,MAAM,QAAS;AAAA,IAC5H;AACA,QAAI,SAAS;AACX,QAAE,IAAI,KAAK,KAAK;AAAA,IAClB,OAAO;AACL,UAAI,OAAO;AAAA,IACb;AAAA,EACF;AACA,SAAO,UAAU,IAAI;AACvB;AACA,SAAS,eAAe,WAAWA,UAAS;AAC1C,MAAI,UAAU,KAAK,GAAG;AACpB,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,UAAU,KAAK;AAC7B,MAAI,MAAM,SAAS,KAAK,OAAO;AAC7B,WAAO;AAAA,EACT;AACA,MAAI,MAAM,KAAK,UAAU;AACvB,WAAO,MAAM;AAAA,EACf;AACA,MAAI,MAAM,SAAS,KAAK,OAAO;AAC7B,WAAO,aAAa,OAAO,WAAWA,QAAO;AAAA,EAC/C;AACA,MAAI,MAAM,SAAS,KAAK,KAAK;AAC3B,WAAO,WAAW,OAAO,WAAWA,QAAO;AAAA,EAC7C;AACA,MAAI,MAAM,SAAS,KAAK,KAAK;AAC3B,QAAIA,SAAQ,QAAQ,OAAOA,SAAQ,KAAK,MAAM,WAAW,YAAY;AACnE,YAAM,SAAS,eAAe,WAAWA,QAAO;AAChD,aAAOA,SAAQ,KAAK,MAAM,OAAO,MAAM;AAAA,IACzC;AACA,UAAM,IAAI,MAAM,GAAI,sCAAwC,MAAM,QAAS;AAAA,EAC7E;AACA,QAAM,IAAI,MAAM,aAAa;AAC/B;AACA,SAASC,QAAO,MAAMD,UAAS;AAC7B,MAAI,EAAE,gBAAgB,aAAa;AACjC,UAAM,IAAI,MAAM,GAAI,qDAAsD;AAAA,EAC5E;AACA,EAAAA,WAAU,OAAO,OAAO,CAAC,GAAG,sBAAsBA,QAAO;AACzD,QAAM,YAAYA,SAAQ,aAAa,IAAI,UAAU,MAAMA,QAAO;AAClE,QAAM,UAAU,eAAe,WAAWA,QAAO;AACjD,MAAI,YAAY,MAAM;AACpB,UAAM,IAAI,MAAM,GAAI,oDAAqD;AAAA,EAC3E;AACA,MAAI,YAAY,OAAO;AACrB,UAAM,IAAI,MAAM,GAAI,sCAAuC;AAAA,EAC7D;AACA,MAAI,CAAC,UAAU,KAAK,GAAG;AACrB,UAAM,IAAI,MAAM,GAAI,yDAA0D;AAAA,EAChF;AACA,SAAO;AACT;;;AhB9HA,IAAM,eAAe;AACrB,SAAS,WAAW,KAAK;AACvB,MAAI,IAAI,UAAU,KAAK;AACrB,WAAO;AAAA,EACT;AACA,QAAM,MAAM,IAAI,MAAM,GAAG;AACzB,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,IAAI,WAAW,IAAI,MAAM,aAAa,CAAC;AACrD,QAAM,IAAI,IAAI,OAAO,CAAC;AACtB,SAAO;AAAA,IACL,IAAU,MAAY,KAAK,KAAK,YAAY;AAAA,IAC5C,IAAU,MAAY,KAAK,OAAO,KAAK;AAAA,EACzC;AACF;AACA,SAAS,mBAAmB;AAC1B,QAAM,IAAI,MAAM,2EAA2E;AAC7F;AACA,SAAS,cAAc,KAAK;AAC1B,MAAI,OAAO,MAAM,GAAG,GAAG;AACrB,UAAM,IAAI,MAAM,qEAAqE;AAAA,EACvF;AACA,MAAI,QAAQ,YAAY,QAAQ,WAAW;AACzC,UAAM,IAAI,MAAM,0FAA0F;AAAA,EAC5G;AACA,SAAO;AACT;AACA,IAAM,gBAAgB;AAAA,EACpB,SAAS;AAAA,EACT,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,QAAQ;AAAA,EACV;AACF;AACA,SAAS,WAAW,OAAO;AACzB,MAAI,MAAM,OAAO,GAAG;AAClB,UAAM,IAAI,MAAM,oDAAoD;AAAA,EACtE;AACA,SAAO,IAAI,OAAO,MAAM,SAAS,CAAC,CAAC;AACrC;AACA,IAAM,gBAAgB;AAAA,EACpB,iBAAiB;AAAA,EACjB,uBAAuB;AAAA,EACvB,UAAU;AAAA,EACV,eAAe;AAAA,EACf,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM,CAAC;AACT;AACA,cAAc,KAAK,gBAAgB;AAC5B,IAAME,QAAO;AACb,IAAMC,QAAO;AACb,IAAMC,UAAS,UAAcA,QAAO,MAAM,aAAa;AACvD,IAAMC,UAAS,UAAcA,QAAO,MAAM,aAAa;;;AiB1D9D,IAAAC,eAAA;AAAA,SAAAA,cAAA;AAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA;;;ACCO,IAAMC,QAAO,CAAC,EAAC,MAAAC,OAAM,MAAAC,OAAM,QAAAC,SAAM,MAAM,IAAI,OAAOF,OAAMC,OAAMC,QAAM;AACpE,IAAM,SAAN,MAAa;AAAA,EAClB,YAAYF,OAAMC,OAAMC,UAAQ;AAC9B,SAAK,OAAOF;AACZ,SAAK,OAAOC;AACZ,SAAK,SAASC;AAAA,EAChB;AAAA,EACA,OAAO,OAAO;AACZ,QAAI,iBAAiB,YAAY;AAC/B,YAAM,SAAS,KAAK,OAAO,KAAK;AAChC,aAAO,kBAAkB,aAAoB,OAAO,KAAK,MAAM,MAAM,IAAI,OAAO,KAAK,CAAAC,YAAiB,OAAO,KAAK,MAAMA,OAAM,CAAC;AAAA,IACjI,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AACF;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,eAAe,QAAQ;AAAA,EAClC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACjBD,IAAM,cAAN,cAA0B,MAAM;AAAA,EAC9B,cAAc;AACZ,UAAM;AACN,SAAK,cAAc,CAAC;AAAA,EACtB;AAAA,EACA,OAAOC,MAAK;AACV,UAAM,SAAS,KAAK,YAAY,KAAK,YAAY,SAAS;AAC1D,QAAI,QAAQ;AACV,UAAI,OAAO,SAAS,KAAK,OAAO;AAC9B,eAAO;AACP,YAAI,OAAO,aAAa,GAAG;AACzB,UAAAA,KAAI,KAAK,CAAC,EAAE,CAAC;AAAA,QACf;AAAA,MACF;AACA,UAAI,OAAO,SAAS,KAAK,KAAK;AAC5B,eAAO;AACP,YAAI,OAAO,aAAa,GAAG;AACzB,cAAI,OAAO,WAAW,MAAM,GAAG;AAC7B,YAAAA,KAAI,KAAK,CAAC,EAAE,CAAC;AAAA,UACf,OAAO;AACL,YAAAA,KAAI,KAAK,CAAC,EAAE,CAAC;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,CAAC,KAAK,KAAK,OAAOA,MAAK,OAAO;AAC5B,SAAK,OAAOA,IAAG;AACf,UAAMC,MAAK,OAAO,MAAM,KAAK;AAC7B,UAAM,MAAM,CAAC;AACb,aAAS,IAAI,GAAG,IAAIA,IAAG,QAAQ,KAAK;AAClC,UAAI,KAAKA,IAAG,WAAW,CAAC;AAAA,IAC1B;AACA,IAAAD,KAAI,KAAK,GAAG;AAAA,EACd;AAAA,EACA,CAAC,KAAK,OAAO,OAAOA,MAAK,OAAO;AAC9B,SAAK,KAAK,KAAK,OAAOA,MAAK,KAAK;AAAA,EAClC;AAAA,EACA,CAAC,KAAK,MAAM,OAAO,MAAM,QAAQ;AAC/B,UAAM,IAAI,MAAM,GAAI,8CAA+C;AAAA,EACrE;AAAA,EACA,CAAC,KAAK,OAAO,OAAOA,MAAK,OAAO;AAC9B,SAAK,OAAOA,IAAG;AACf,UAAM,OAAOE,YAAW,KAAK,UAAU,MAAM,KAAK,CAAC;AACnD,IAAAF,KAAI,KAAK,KAAK,SAAS,KAAK,MAAM,IAAI,IAAI,IAAI;AAAA,EAChD;AAAA,EACA,CAAC,KAAK,MAAM,OAAOA,MAAK,QAAQ;AAC9B,SAAK,OAAOA,IAAG;AACf,SAAK,YAAY,KAAK;AAAA,MACpB,MAAM,KAAK;AAAA,MACX,UAAU;AAAA,IACZ,CAAC;AACD,IAAAA,KAAI,KAAK,CAAC,EAAE,CAAC;AAAA,EACf;AAAA,EACA,CAAC,KAAK,IAAI,OAAOA,MAAK,QAAQ;AAC5B,SAAK,OAAOA,IAAG;AACf,SAAK,YAAY,KAAK;AAAA,MACpB,MAAM,KAAK;AAAA,MACX,UAAU;AAAA,IACZ,CAAC;AACD,IAAAA,KAAI,KAAK,CAAC,GAAG,CAAC;AAAA,EAChB;AAAA,EACA,CAAC,KAAK,IAAI,OAAO,MAAM,QAAQ;AAAA,EAC/B;AAAA,EACA,CAAC,KAAK,MAAM,OAAOA,MAAK,OAAO;AAC7B,QAAI,MAAM,KAAK,SAAS,SAAS;AAC/B,YAAM,SAAS,KAAK,YAAY,IAAI;AACpC,UAAI,QAAQ;AACV,YAAI,OAAO,SAAS,KAAK,OAAO;AAC9B,UAAAA,KAAI,KAAK,CAAC,EAAE,CAAC;AAAA,QACf,WAAW,OAAO,SAAS,KAAK,KAAK;AACnC,UAAAA,KAAI,KAAK,CAAC,GAAG,CAAC;AAAA,QAChB,OAAO;AACL,gBAAM,IAAI,MAAM,oDAAoD;AAAA,QACtE;AACA;AAAA,MACF;AACA,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,QAAI,MAAM,UAAU,QAAW;AAC7B,YAAM,IAAI,MAAM,GAAI,6CAA8C;AAAA,IACpE;AACA,SAAK,OAAOA,IAAG;AACf,QAAI,MAAM,KAAK,SAAS,QAAQ;AAC9B,MAAAA,KAAI,KAAK;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD;AAAA,IACF,WAAW,MAAM,KAAK,SAAS,SAAS;AACtC,MAAAA,KAAI,KAAK;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD;AAAA,IACF,WAAW,MAAM,KAAK,SAAS,QAAQ;AACrC,MAAAA,KAAI,KAAK;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD;AAAA,IACF;AACA,UAAMC,MAAK,OAAO,MAAM,KAAK;AAC7B,UAAM,MAAM,CAAC;AACb,QAAI,KAAK;AACT,aAAS,IAAI,GAAG,IAAIA,IAAG,QAAQ,KAAK;AAClC,UAAI,KAAKA,IAAG,WAAW,CAAC;AACxB,UAAI,CAAC,OAAO,IAAI,OAAO,MAAM,IAAI,OAAO,OAAO,IAAI,OAAO,KAAK;AAC7D,aAAK;AAAA,MACP;AAAA,IACF;AACA,QAAI,CAAC,IAAI;AACP,UAAI,KAAK,EAAE;AACX,UAAI,KAAK,EAAE;AAAA,IACb;AACA,IAAAD,KAAI,KAAK,GAAG;AAAA,EACd;AACF;AACA,SAASG,WAAU,IAAI,IAAI;AACzB,MAAI,MAAM,QAAQ,GAAG,EAAE,KAAK,MAAM,QAAQ,GAAG,EAAE,GAAG;AAChD,UAAM,IAAI,MAAM,GAAI,oDAAqD;AAAA,EAC3E;AACA,QAAM,YAAY,GAAG;AACrB,QAAM,YAAY,GAAG;AACrB,MAAI,UAAU,SAAS,KAAK,UAAU,UAAU,SAAS,KAAK,QAAQ;AACpE,UAAM,IAAI,MAAM,GAAI,uDAAwD;AAAA,EAC9E;AACA,MAAI,YAAY,WAAW;AACzB,WAAO;AAAA,EACT;AACA,MAAI,YAAY,WAAW;AACzB,WAAO;AAAA,EACT;AACA,QAAM,IAAI,MAAM,GAAI,sEAAuE;AAC7F;AACA,IAAMC,wBAAuB;AAAA,EAC3B,gBAAgB;AAAA,EAChB,WAAAD;AACF;AACA,SAASE,QAAO,MAAMC,UAAS;AAC7B,EAAAA,WAAU,OAAO,OAAO,CAAC,GAAGF,uBAAsBE,QAAO;AACzD,SAAO,aAAa,MAAM,IAAI,YAAY,GAAGA,QAAO;AACtD;;;ACrJA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,MAAMC,WAAU,CAAC,GAAG;AAC9B,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,UAAUA;AACf,SAAK,YAAY,CAAC,OAAO;AACzB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,OAAO;AACL,WAAO,KAAK,OAAO,KAAK,KAAK;AAAA,EAC/B;AAAA,EACA,KAAK;AACH,WAAO,KAAK,KAAK,KAAK;AAAA,EACxB;AAAA,EACA,cAAc;AACZ,WAAO,KAAK,UAAU,KAAK,UAAU,SAAS;AAAA,EAChD;AAAA,EACA,iBAAiB;AACf,QAAI,IAAI,KAAK,GAAG;AAChB,WAAO,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,IAAI;AAClD,UAAI,KAAK,KAAK,EAAE,KAAK;AAAA,IACvB;AAAA,EACF;AAAA,EACA,OAAO,KAAK;AACV,QAAI,KAAK,KAAK,SAAS,KAAK,MAAM,IAAI,QAAQ;AAC5C,YAAM,IAAI,MAAM,GAAI,uDAAyD,KAAK,KAAM;AAAA,IAC1F;AACA,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,UAAI,KAAK,KAAK,KAAK,WAAW,IAAI,IAAI;AACpC,cAAM,IAAI,MAAM,GAAI,gDAAkD,KAAK,0BAA4B,OAAO,aAAa,GAAG,GAAG,IAAK;AAAA,MACxI;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc;AACZ,UAAM,WAAW,KAAK;AACtB,QAAI,WAAW;AACf,QAAI,QAAQ;AACZ,UAAM,UAAU,WAAS;AACvB,aAAO,CAAC,KAAK,KAAK,GAAG;AACnB,cAAM,KAAK,KAAK,GAAG;AACnB,YAAI,MAAM,SAAS,EAAE,GAAG;AACtB,eAAK;AAAA,QACP,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,QAAI,KAAK,GAAG,MAAM,IAAI;AACpB,iBAAW;AACX,WAAK;AAAA,IACP;AACA,QAAI,KAAK,GAAG,MAAM,IAAI;AACpB,WAAK;AACL,UAAI,KAAK,GAAG,MAAM,IAAI;AACpB,aAAK;AACL,gBAAQ;AAAA,MACV,OAAO;AACL,eAAO,IAAI,MAAM,KAAK,MAAM,GAAG,KAAK,MAAM,QAAQ;AAAA,MACpD;AAAA,IACF;AACA,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,QAAI,YAAY,KAAK,QAAQ,WAAW,GAAG;AACzC,YAAM,IAAI,MAAM,GAAI,gDAAkD,KAAK,KAAM;AAAA,IACnF;AACA,QAAI,CAAC,KAAK,KAAK,KAAK,KAAK,GAAG,MAAM,IAAI;AACpC,UAAI,OAAO;AACT,cAAM,IAAI,MAAM,GAAI,gDAAkD,KAAK,KAAM;AAAA,MACnF;AACA,cAAQ;AACR,WAAK;AACL,cAAQ;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,CAAC,KAAK,KAAK,MAAM,KAAK,GAAG,MAAM,OAAO,KAAK,GAAG,MAAM,KAAK;AAC3D,cAAQ;AACR,WAAK;AACL,UAAI,CAAC,KAAK,KAAK,MAAM,KAAK,GAAG,MAAM,MAAM,KAAK,GAAG,MAAM,KAAK;AAC1D,aAAK;AAAA,MACP;AACA,cAAQ;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AACA,UAAM,SAAS,OAAO,aAAa,MAAM,MAAM,KAAK,KAAK,SAAS,UAAU,KAAK,GAAG,CAAC;AACrF,UAAM,MAAM,WAAW,MAAM;AAC7B,QAAI,OAAO;AACT,aAAO,IAAI,MAAM,KAAK,OAAO,KAAK,KAAK,MAAM,QAAQ;AAAA,IACvD;AACA,QAAI,KAAK,QAAQ,gBAAgB,QAAQ,OAAO,cAAc,GAAG,GAAG;AAClE,aAAO,IAAI,MAAM,OAAO,IAAI,KAAK,OAAO,KAAK,QAAQ,KAAK,KAAK,MAAM,QAAQ;AAAA,IAC/E;AACA,WAAO,IAAI,MAAM,OAAO,IAAI,KAAK,OAAO,KAAK,QAAQ,OAAO,MAAM,GAAG,KAAK,MAAM,QAAQ;AAAA,EAC1F;AAAA,EACA,cAAc;AACZ,QAAI,KAAK,GAAG,MAAM,IAAI;AACpB,YAAM,IAAI,MAAM,GAAI,oDAAsD,KAAK,4BAA6B;AAAA,IAC9G;AACA,SAAK;AACL,aAAS,IAAI,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK,KAAK,UAAU,IAAI,OAAO,KAAK,KAAK;AACzE,YAAM,KAAK,KAAK,KAAK;AACrB,UAAI,OAAO,MAAM,KAAK,MAAM,MAAM,KAAK;AACrC;AAAA,MACF;AACA,UAAI,OAAO,IAAI;AACb,cAAM,MAAM,OAAO,aAAa,MAAM,MAAM,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,CAAC;AAC3E,aAAK,MAAM,IAAI;AACf,eAAO,IAAI,MAAM,KAAK,QAAQ,KAAK,CAAC;AAAA,MACtC;AAAA,IACF;AACA,UAAM,WAAW,KAAK;AACtB,UAAM,QAAQ,CAAC;AACf,UAAM,SAAS,MAAM;AACnB,UAAI,KAAK,MAAM,KAAK,KAAK,KAAK,QAAQ;AACpC,cAAM,IAAI,MAAM,GAAI,yEAA2E,KAAK,KAAM;AAAA,MAC5G;AACA,UAAI,KAAK;AACT,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,KAAK,KAAK,GAAG;AACjB,YAAI,MAAM,MAAM,MAAM,IAAI;AACxB,gBAAM;AAAA,QACR,WAAW,MAAM,MAAM,MAAM,KAAK;AAChC,eAAK,KAAK,KAAK;AAAA,QACjB,WAAW,MAAM,MAAM,MAAM,IAAI;AAC/B,eAAK,KAAK,KAAK;AAAA,QACjB,OAAO;AACL,gBAAM,IAAI,MAAM,GAAI,mEAAqE,KAAK,KAAM;AAAA,QACtG;AACA,aAAK,KAAK,KAAK;AACf,aAAK;AAAA,MACP;AACA,aAAO;AAAA,IACT;AACA,UAAM,eAAe,MAAM;AACzB,YAAM,YAAY,KAAK,GAAG;AAC1B,UAAI,YAAY;AAChB,UAAI,mBAAmB,YAAY,MAAM,IAAI,YAAY,MAAM,IAAI,YAAY,MAAM,IAAI;AACzF,UAAI,KAAK,MAAM,mBAAmB,KAAK,KAAK,QAAQ;AAClD,cAAM,IAAI,MAAM,GAAI,2DAA6D,KAAK,KAAM;AAAA,MAC9F;AACA,UAAI,YAAY,WAAW,YAAY;AACvC,cAAQ;AAAA,aACH;AACH,cAAI,YAAY,KAAK;AACnB,wBAAY;AAAA,UACd;AACA;AAAA,aACG;AACH,uBAAa,KAAK,KAAK,KAAK,MAAM;AAClC,eAAK,aAAa,SAAS,KAAK;AAC9B,6BAAiB,YAAY,OAAO,IAAI,aAAa;AACrD,gBAAI,gBAAgB,KAAK;AACvB,0BAAY;AAAA,YACd;AAAA,UACF;AACA;AAAA,aACG;AACH,uBAAa,KAAK,KAAK,KAAK,MAAM;AAClC,sBAAY,KAAK,KAAK,KAAK,MAAM;AACjC,eAAK,aAAa,SAAS,QAAQ,YAAY,SAAS,KAAK;AAC3D,6BAAiB,YAAY,OAAO,MAAM,aAAa,OAAO,IAAI,YAAY;AAC9E,gBAAI,gBAAgB,SAAS,gBAAgB,SAAS,gBAAgB,QAAQ;AAC5E,0BAAY;AAAA,YACd;AAAA,UACF;AACA;AAAA,aACG;AACH,uBAAa,KAAK,KAAK,KAAK,MAAM;AAClC,sBAAY,KAAK,KAAK,KAAK,MAAM;AACjC,uBAAa,KAAK,KAAK,KAAK,MAAM;AAClC,eAAK,aAAa,SAAS,QAAQ,YAAY,SAAS,QAAQ,aAAa,SAAS,KAAK;AACzF,6BAAiB,YAAY,OAAO,MAAM,aAAa,OAAO,MAAM,YAAY,OAAO,IAAI,aAAa;AACxG,gBAAI,gBAAgB,SAAS,gBAAgB,SAAS;AACpD,0BAAY;AAAA,YACd;AAAA,UACF;AAAA;AAEF,UAAI,cAAc,MAAM;AACtB,oBAAY;AACZ,2BAAmB;AAAA,MACrB,WAAW,YAAY,OAAO;AAC5B,qBAAa;AACb,cAAM,KAAK,cAAc,KAAK,OAAO,KAAK;AAC1C,oBAAY,QAAQ,YAAY;AAAA,MAClC;AACA,YAAM,KAAK,SAAS;AACpB,WAAK,OAAO;AAAA,IACd;AACA,WAAO,CAAC,KAAK,KAAK,GAAG;AACnB,YAAM,KAAK,KAAK,GAAG;AACnB,UAAI;AACJ,cAAQ;AAAA,aACH;AACH,eAAK;AACL,cAAI,KAAK,KAAK,GAAG;AACf,kBAAM,IAAI,MAAM,GAAI,6DAA+D,KAAK,KAAM;AAAA,UAChG;AACA,gBAAM,KAAK,GAAG;AACd,eAAK;AACL,kBAAQ;AAAA,iBACH;AAAA,iBACA;AAAA,iBACA;AAAA,iBACA;AACH,oBAAM,KAAK,GAAG;AACd;AAAA,iBACG;AACH,oBAAM,KAAK,CAAC;AACZ;AAAA,iBACG;AACH,oBAAM,KAAK,CAAC;AACZ;AAAA,iBACG;AACH,oBAAM,KAAK,EAAE;AACb;AAAA,iBACG;AACH,oBAAM,KAAK,EAAE;AACb;AAAA,iBACG;AACH,oBAAM,KAAK,EAAE;AACb;AAAA,iBACG;AACH,oBAAM,KAAK,OAAO,CAAC;AACnB;AAAA;AAEA,oBAAM,IAAI,MAAM,GAAI,kEAAoE,KAAK,KAAM;AAAA;AAErG;AAAA,aACG;AACH,eAAK;AACL,iBAAO,IAAI,MAAM,KAAK,QAAQ,sBAAsB,KAAK,GAAG,KAAK,MAAM,QAAQ;AAAA;AAE/E,cAAI,KAAK,IAAI;AACX,kBAAM,IAAI,MAAM,GAAI,yDAA2D,KAAK,KAAM;AAAA,UAC5F,WAAW,KAAK,KAAK;AACnB,kBAAM,KAAK,EAAE;AACb,iBAAK;AAAA,UACP,OAAO;AACL,yBAAa;AAAA,UACf;AAAA;AAAA,IAEJ;AACA,UAAM,IAAI,MAAM,GAAI,wDAA0D,KAAK,KAAM;AAAA,EAC3F;AAAA,EACA,aAAa;AACX,YAAQ,KAAK,GAAG;AAAA,WACX;AACH,aAAK,UAAU,KAAK,WAAW;AAC/B,aAAK;AACL,eAAO,IAAI,MAAM,KAAK,KAAK,UAAU,CAAC;AAAA,WACnC;AACH,aAAK,UAAU,KAAK,aAAa;AACjC,aAAK;AACL,eAAO,IAAI,MAAM,KAAK,OAAO,UAAU,CAAC;AAAA,WACrC,IAAI;AACL,eAAO,KAAK,YAAY;AAAA,MAC1B;AAAA,WACG;AACH,aAAK,OAAO;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AACD,eAAO,IAAI,MAAM,KAAK,MAAM,MAAM,CAAC;AAAA,WAChC;AACH,aAAK,OAAO;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AACD,eAAO,IAAI,MAAM,KAAK,OAAO,OAAO,CAAC;AAAA,WAClC;AACH,aAAK,OAAO;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AACD,eAAO,IAAI,MAAM,KAAK,MAAM,MAAM,CAAC;AAAA,WAChC;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AAAA,WACA;AACH,eAAO,KAAK,YAAY;AAAA;AAExB,cAAM,IAAI,MAAM,GAAI,oDAAsD,KAAK,KAAM;AAAA;AAAA,EAEzF;AAAA,EACA,OAAO;AACL,SAAK,eAAe;AACpB,YAAQ,KAAK,YAAY;AAAA,WACpB;AACH,aAAK,UAAU,IAAI;AACnB,eAAO,KAAK,WAAW;AAAA,WACpB,eAAe;AAChB,aAAK,UAAU,IAAI;AACnB,YAAI,KAAK,GAAG,MAAM,IAAI;AACpB,eAAK;AACL,eAAK,eAAe;AACpB,iBAAO,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,QAC3C;AACA,YAAI,KAAK,GAAG,MAAM,IAAI;AACpB,gBAAM,IAAI,MAAM,GAAI,oDAAsD,KAAK,iDAAmD,OAAO,aAAa,KAAK,GAAG,CAAC,IAAK;AAAA,QACtK;AACA,aAAK;AACL,aAAK,UAAU,KAAK,aAAa;AACjC,aAAK,eAAe;AACpB,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,WACG,eAAe;AAChB,aAAK,UAAU,IAAI;AACnB,YAAI,KAAK,GAAG,MAAM,IAAI;AACpB,eAAK;AACL,eAAK,eAAe;AACpB,iBAAO,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,QAC3C;AACA,aAAK,UAAU,KAAK,aAAa;AACjC,aAAK,eAAe;AACpB,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,WACG;AACH,YAAI,KAAK,GAAG,MAAM,KAAK;AACrB,eAAK,UAAU,IAAI;AACnB,eAAK;AACL,eAAK,eAAe;AACpB,iBAAO,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,QAC3C;AACA,YAAI,KAAK,GAAG,MAAM,IAAI;AACpB,gBAAM,IAAI,MAAM,GAAI,oDAAsD,KAAK,kDAAoD,OAAO,aAAa,KAAK,GAAG,CAAC,IAAK;AAAA,QACvK;AACA,aAAK;AACL,aAAK,eAAe;AAAA,WACjB,aAAa;AACd,aAAK,UAAU,IAAI;AACnB,YAAI,KAAK,GAAG,MAAM,KAAK;AACrB,eAAK;AACL,eAAK,eAAe;AACpB,iBAAO,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,QAC3C;AACA,cAAM,QAAQ,KAAK,YAAY;AAC/B,aAAK,eAAe;AACpB,YAAI,KAAK,GAAG,MAAM,IAAI;AACpB,gBAAM,IAAI,MAAM,GAAI,oDAAsD,KAAK,yDAA2D,OAAO,aAAa,KAAK,GAAG,CAAC,IAAK;AAAA,QAC9K;AACA,aAAK;AACL,aAAK,UAAU,KAAK,WAAW;AAC/B,eAAO;AAAA,MACT;AAAA,WACG,aAAa;AACd,aAAK,UAAU,IAAI;AACnB,aAAK,UAAU,KAAK,SAAS;AAC7B,aAAK,eAAe;AACpB,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA;AAEA,cAAM,IAAI,MAAM,GAAI,sDAAwD,KAAK,4BAA6B;AAAA;AAAA,EAElH;AACF;AACA,SAASC,QAAO,MAAMD,UAAS;AAC7B,EAAAA,WAAU,OAAO,OAAO,EAAE,WAAW,IAAI,UAAU,MAAMA,QAAO,EAAE,GAAGA,QAAO;AAC5E,SAAOC,QAAQ,MAAMD,QAAO;AAC9B;;;AJjZA,SAASE,YAAW,KAAK;AACvB,MAAI,IAAI,UAAU,KAAK;AACrB,WAAO;AAAA,EACT;AACA,QAAM,MAAM,IAAI,MAAM,GAAG;AACzB,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AACA,QAAM,YAAY,IAAI,SAAS;AAC/B,SAAO;AAAA,IACL,IAAI,MAAM,KAAK,KAAK,UAAU,CAAC;AAAA,IAC/B,IAAI,MAAM,KAAK,QAAQ,KAAK,CAAC;AAAA,IAC7B,IAAI,MAAM,KAAK,QAAQ,WAAW,UAAU,MAAM;AAAA,IAClD,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,EACpC;AACF;AACA,SAAS,aAAa,OAAO;AAC3B,QAAM,cAAc,OAAO,OAAO,KAAK,EAAE,MAAM,CAAC;AAChD,SAAO;AAAA,IACL,IAAI,MAAM,KAAK,KAAK,UAAU,CAAC;AAAA,IAC/B,IAAI,MAAM,KAAK,QAAQ,KAAK,CAAC;AAAA,IAC7B,IAAI,MAAM,KAAK,KAAK,UAAU,CAAC;AAAA,IAC/B,IAAI,MAAM,KAAK,QAAQ,SAAS,CAAC;AAAA,IACjC,IAAI,MAAM,KAAK,QAAQ,aAAa,YAAY,MAAM;AAAA,IACtD,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,IAClC,IAAI,MAAM,KAAK,OAAO,QAAW,CAAC;AAAA,EACpC;AACF;AACA,SAASC,oBAAmB;AAC1B,QAAM,IAAI,MAAM,2EAA2E;AAC7F;AACA,SAASC,eAAc,KAAK;AAC1B,MAAI,OAAO,MAAM,GAAG,GAAG;AACrB,UAAM,IAAI,MAAM,qEAAqE;AAAA,EACvF;AACA,MAAI,QAAQ,YAAY,QAAQ,WAAW;AACzC,UAAM,IAAI,MAAM,0FAA0F;AAAA,EAC5G;AACA,SAAO;AACT;AACA,IAAMC,iBAAgB;AAAA,EACpB,cAAc;AAAA,IACZ,QAAQH;AAAA,IACR,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAWC;AAAA,IACX,QAAQC;AAAA,EACV;AACF;AACA,IAAM,mBAAN,cAAyC,UAAU;AAAA,EACjD,YAAY,MAAME,UAAS;AACzB,UAAM,MAAMA,QAAO;AACnB,SAAK,cAAc,CAAC;AAAA,EACtB;AAAA,EACA,OAAO;AACL,WAAO,KAAK,YAAY,WAAW,KAAK,MAAM,KAAK;AAAA,EACrD;AAAA,EACA,QAAQ;AACN,QAAI,KAAK,YAAY,SAAS,GAAG;AAC/B,aAAO,KAAK,YAAY,IAAI;AAAA,IAC9B;AACA,WAAO,MAAM,KAAK;AAAA,EACpB;AAAA,EACA,OAAO;AACL,UAAM,QAAQ,KAAK,MAAM;AACzB,QAAI,MAAM,SAAS,KAAK,KAAK;AAC3B,YAAM,WAAW,KAAK,MAAM;AAC5B,UAAI,SAAS,SAAS,KAAK,UAAU,SAAS,UAAU,KAAK;AAC3D,cAAM,aAAa,KAAK,MAAM;AAC9B,YAAI,WAAW,SAAS,KAAK,QAAQ;AACnC,gBAAM,aAAa,KAAK,MAAM;AAC9B,cAAI,WAAW,SAAS,KAAK,OAAO;AAClC,kBAAM,IAAI,MAAM,0BAA0B;AAAA,UAC5C;AACA,eAAK,YAAY,KAAK,UAAU;AAChC,iBAAO,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC;AAAA,QAClC;AACA,YAAI,WAAW,SAAS,KAAK,KAAK;AAChC,gBAAM,gBAAgB,KAAK,MAAM;AACjC,cAAI,cAAc,SAAS,KAAK,UAAU,cAAc,UAAU,SAAS;AACzE,kBAAM,kBAAkB,KAAK,MAAM;AACnC,gBAAI,gBAAgB,SAAS,KAAK,QAAQ;AACxC,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,sBAAM,aAAa,KAAK,MAAM;AAC9B,oBAAI,WAAW,SAAS,KAAK,OAAO;AAClC,wBAAM,IAAI,MAAM,4BAA4B;AAAA,gBAC9C;AAAA,cACF;AACA,oBAAM,QAAQ,OAAO,OAAO,IAAK,gBAAgB,OAAQ;AACzD,qBAAO,IAAI,MAAM,KAAK,OAAO,OAAO,gBAAgB,MAAM,MAAM;AAAA,YAClE;AACA,iBAAK,YAAY,KAAK,eAAe;AAAA,UACvC;AACA,eAAK,YAAY,KAAK,aAAa;AAAA,QACrC;AACA,aAAK,YAAY,KAAK,UAAU;AAAA,MAClC;AACA,WAAK,YAAY,KAAK,QAAQ;AAAA,IAChC;AACA,WAAO;AAAA,EACT;AACF;AACA,IAAMC,iBAAgB;AAAA,EACpB,iBAAiB;AAAA,EACjB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,eAAe;AAAA,EACf,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM,CAAC;AACT;AACAA,eAAc,KAAK,MAAM,IAAI;AACtB,IAAMC,QAAO;AACb,IAAMC,QAAO;AACb,IAAMC,UAAS,UAAkBA,QAAO,MAAML,cAAa;AAC3D,IAAMM,UAAS,UAAQ;AAC5B,QAAML,WAAU,OAAO,OAAOC,gBAAe,EAAE,WAAW,IAAI,iBAAiB,MAAMA,cAAa,EAAE,CAAC;AACrG,SAAiBI,QAAO,MAAML,QAAO;AACvC;;;AK9HA;;cAAAM;EAAA,cAAAC;EAAA,cAAAC;EAAA,YAAAC;EAAA;;;;ACEM,SAAU,YAAY,GAAa;AACvC,SAAO,UAAU,OAAO,CAAC,EAAE,MAAM,CAAC;AACpC;AAEM,SAAU,cAAc,GAAS;AACrC,SAAO,UAAU,OAAO,IAAI,GAAG;AACjC;;;AC0BM,SAAU,UAAU,OAAoB;AAC5C,QAAM,CAAC,iBAAiB,SAAS,SAAS,IAAI;AAC9C,SAAO;IACL;IACA,YAAY,CAAC,EAAE,WAAW,iBAAiB,UAAS,CAAE;IACtD,MAAM,IAAI,OAAO,cAAc,OAAO,CAAC;;AAE3C;AAEA,SAAS,gBAAgB,WAAuB;AAC9C,QAAM,UAA4B;IAChC,WAAW,cAAc,UAAU,SAAS;;AAE9C,MAAI,UAAU;AAAQ,YAAQ,SAAS,UAAU;AACjD,MAAI,UAAU;AAAW,YAAQ,YAAY,cAAc,UAAU,SAAS;AAC9E,SAAO;AACT;AAEM,SAAUC,QAAO,KAAW;AAChC,QAAM,UAAU,cAAc,IAAI,OAAO;AACzC,MAAI;AACF,QAAI,OAAO,OAAO;WACX,GAAP;AACA,UAAM,IAAI,MAAM,oBAAoB;;AAEtC,SAAO;IACL;IACA,YAAY,IAAI,WAAW,IAAI,eAAe;;AAElD;AAEA,SAAS,gBAAgB,SAAyB;AAChD,QAAM,OAAqB;IACzB,WAAW,YAAY,QAAQ,SAAS;;AAE1C,MAAI,QAAQ;AAAQ,SAAK,SAAS,QAAQ;AAC1C,MAAI,QAAQ;AAAW,SAAK,YAAY,YAAY,QAAQ,SAAS;AACrE,SAAO;AACT;AAEM,SAAUC,SAAO,SAAmB;AACxC,QAAM,UAAkB;IACtB,SAAS,YAAY,QAAQ,OAAO;IACpC,YAAY,QAAQ,WAAW,IAAI,eAAe;;AAEpD,UAAQ,OAAO,IAAI,OAAO,IAAI,WAAW,QAAQ,OAAO,CAAC;AACzD,SAAO;AACT;;;ACjDM,SAAUC,WAAU,OAAoB;AAC5C,QAAM,CAAC,iBAAiB,eAAe,IAAI,YAAY,GAAG,IAAI;AAC9D,QAAM,MAAc;IAClB;IACA;IACA,WAAW;IACX;;AAEF,MAAI;AAAe,QAAI,aAAa,CAAC,EAAE,cAAa,CAAE;AACtD,SAAO;AACT;AAEA,SAAS,gBAAgB,WAAuB;AAC9C,QAAM,SAA2B,CAAA;AACjC,MAAI,UAAU;AAAe,WAAO,gBAAgB,cAAc,UAAU,aAAa;AACzF,MAAI,UAAU;AAAQ,WAAO,SAAS,UAAU;AAChD,SAAO;AACT;AAEM,SAAUC,QAAO,KAAW;AAChC,QAAM,SAAqB;IACzB,YAAY,cAAc,IAAI,UAAU;IACxC,WAAW,cAAc,IAAI,SAAS;IACtC,IAAI,cAAc,IAAI,EAAE;IACxB,KAAK,cAAc,IAAI,GAAG;;AAE5B,MAAI,IAAI;AAAK,WAAO,MAAM,cAAc,IAAI,GAAG;AAC/C,MAAI,IAAI;AAAY,WAAO,aAAa,IAAI,WAAW,IAAI,eAAe;AAC1E,MAAI,IAAI;AAAa,WAAO,cAAc,IAAI;AAC9C,SAAO;AACT;AAEA,SAAS,gBAAgB,SAAyB;AAChD,QAAM,YAA0B,CAAA;AAChC,MAAI,QAAQ;AAAe,cAAU,gBAAgB,YAAY,QAAQ,aAAa;AACtF,MAAI,QAAQ;AAAQ,cAAU,SAAS,QAAQ;AAC/C,SAAO;AACT;AAEM,SAAUC,SAAO,SAAmB;AACxC,QAAM,MAAc;IAClB,YAAY,YAAY,QAAQ,UAAU;IAC1C,WAAW,YAAY,QAAQ,SAAS;IACxC,IAAI,YAAY,QAAQ,EAAE;IAC1B,KAAK,YAAY,QAAQ,GAAG;;AAE9B,MAAI,QAAQ;AAAK,QAAI,MAAM,YAAY,QAAQ,GAAG;AAClD,MAAI,QAAQ;AAAY,QAAI,aAAa,QAAQ,WAAW,IAAI,eAAe;AAC/E,MAAI,QAAQ;AAAa,QAAI,cAAc,QAAQ;AACnD,SAAO;AACT;;;AHvEO,IAAMC,QAAO;AAGb,IAAMC,QAAO;AAEpB,SAAS,SAAS,MAA+C;AAC/D,SACE,aAAa,QACb,OAAO,KAAK,YAAY,YACxB,gBAAgB,QAChB,MAAM,QAAQ,KAAK,UAAU;AAEjC;AAEA,SAAS,aACP,MAA+C;AAE/C,SACE,aAAa,QACb,KAAK,mBAAmB,cACxB,gBAAgB,QAChB,MAAM,QAAQ,KAAK,UAAU;AAEjC;AAEA,SAAS,aACP,MAA+C;AAE/C,SACE,gBAAgB,QAChB,KAAK,sBAAsB,cAC3B,QAAQ,QACR,KAAK,cAAc,cACnB,eAAe,QACf,KAAK,qBAAqB,cAC1B,SAAS,QACT,KAAK,eAAe;AAExB;AAEA,SAAS,SAAS,MAA+C;AAC/D,SACE,gBAAgB,QAChB,OAAO,KAAK,eAAe,YAC3B,QAAQ,QACR,OAAO,KAAK,OAAO,YACnB,eAAe,QACf,OAAO,KAAK,cAAc,YAC1B,SAAS,QACT,OAAO,KAAK,QAAQ;AAExB;AAUM,SAAU,UAAU,MAA8B;AACtD,MAAI,OAAO,SAAS,UAAU;AAC5B,UAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,QAAI,MAAM,WAAW,GAAG;AACtB,aAAe,UAAU,KAAK;eACrB,MAAM,WAAW,GAAG;AAC7B,aAAkBC,WAAU,KAAK;;AAEnC,UAAM,IAAI,MAAM,yBAAyB;;AAE3C,MAAI,SAAS,IAAI,KAAK,SAAS,IAAI,GAAG;AACpC,WAAO;;AAET,QAAM,IAAI,MAAM,mCAAmC;AACrD;AAEM,SAAUC,SAAO,KAA6B;AAClD,MAAI,OAAO,QAAQ,UAAU;AAC3B,UAAM,UAAU,GAAG;;AAErB,MAAI;AACJ,MAAI,SAAS,GAAG,GAAG;AACjB,kBAAsBA,QAAO,GAAG;aACvB,SAAS,GAAG,GAAG;AACxB,kBAAyBA,QAAO,GAAG;SAC9B;AACL,UAAM,IAAI,MAAM,yBAAyB;;AAE3C,SAAO,IAAI,WAAgBA,QAAO,WAAW,CAAC;AAChD;AAEM,SAAUC,SAAO,MAAuC;AAC5D,MAAI;AACJ,MAAI;AACF,cAAeA,QAAO,IAAI;WACnB,GAAP;AACA,UAAM,IAAI,MAAM,6BAA6B;;AAE/C,MAAI,aAAa,OAAO,GAAG;AACzB,WAAeA,SAAO,OAAO;aACpB,aAAa,OAAO,GAAG;AAChC,WAAkBA,SAAO,OAAO;SAC3B;AACL,UAAM,IAAI,MAAM,6BAA6B;;AAEjD;;;AIrHA;AAAA;AAAA;AAAA;AAEA,IAAMC,QAAO;AACb,IAAMC,QAAO;AACb,IAAMC,WAAS;AACf,IAAM,SAAS,WAAgB,OAAOF,OAAME,SAAO,KAAK,CAAC;AAClD,IAAM,WAAW;AAAA,EACtB,MAAAF;AAAA,EACA,MAAAC;AAAA,EACA,QAAAC;AAAA,EACA;AACF;;;ACXA,IAAAC,oBAAA;AAAA,SAAAA,mBAAA;AAAA,kBAAAC;AAAA;AAKO,IAAMC,YAAW,KAAK;AAAA,EAC3B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ,CAAAC,SAAO,SAASA,IAAG;AAAA,EAC3B,QAAQ,SAAO,WAAW,GAAG;AAC/B,CAAC;;;ACVD;AAAA;AAAA;AAAA;AACO,IAAM,QAAQ,QAAQ;AAAA,EAC3B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACND;AAAA;AAAA;AAAA;AACO,IAAM,QAAQ,QAAQ;AAAA,EAC3B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACND;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,MAAM;AAAA,EAC1B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;;;ACLD;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,cAAc,QAAQ;AAAA,EACjC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACZD;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,MAAM;AAAA,EAC1B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;AACM,IAAM,cAAc,MAAM;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;;;ACVD;AAAA;AAAA;AAAA;AACA,IAAM,WAAW,MAAM,KAAK,orEAAs2F;AACl4F,IAAM,uBAAuB,SAAS,OAAO,CAAC,GAAG,GAAG,MAAM;AACxD,IAAE,KAAK;AACP,SAAO;AACT,GAAG,CAAC,CAAC;AACL,IAAM,uBAAuB,SAAS,OAAO,CAAC,GAAG,GAAG,MAAM;AACxD,IAAE,EAAE,YAAY,CAAC,KAAK;AACtB,SAAO;AACT,GAAG,CAAC,CAAC;AACL,SAASC,SAAO,MAAM;AACpB,SAAO,KAAK,OAAO,CAAC,GAAG,MAAM;AAC3B,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACT,GAAG,EAAE;AACP;AACA,SAASC,SAAO,KAAK;AACnB,QAAM,OAAO,CAAC;AACd,aAAW,QAAQ,KAAK;AACtB,UAAM,MAAM,qBAAqB,KAAK,YAAY,CAAC;AACnD,QAAI,QAAQ,QAAW;AACrB,YAAM,IAAI,MAAM,+BAAgC,MAAO;AAAA,IACzD;AACA,SAAK,KAAK,GAAG;AAAA,EACf;AACA,SAAO,IAAI,WAAW,IAAI;AAC5B;AACO,IAAM,eAAe,KAAK;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAAD;AAAA,EACA,QAAAC;AACF,CAAC;;;AChCD;AAAA;AAAA;AAAA;AAAA;AACA,IAAM,MAAM,CAAAC,UAAQ,OAAM,SAAQ,IAAI,WAAW,MAAM,OAAO,OAAO,OAAOA,OAAM,IAAI,CAAC;AAChF,IAAM,SAASC,MAAK;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,IAAI,SAAS;AACvB,CAAC;AACM,IAAM,SAASA,MAAK;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,IAAI,SAAS;AACvB,CAAC;;;ACXD;AAAA;AAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA;AACO,IAAMC,QAAO;AACb,IAAMC,QAAO;AACb,IAAMC,WAAS,UAAQ,OAAO,IAAI;AAClC,IAAMC,WAAS,UAAQ,OAAO,IAAI;;;ACJzC,IAAAC,gBAAA;AAAA,SAAAA,eAAA;AAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAMC,eAAc,IAAI,YAAY;AACpC,IAAMC,eAAc,IAAI,YAAY;AAC7B,IAAMF,QAAO;AACb,IAAMH,QAAO;AACb,IAAME,WAAS,UAAQE,aAAY,OAAO,KAAK,UAAU,IAAI,CAAC;AAC9D,IAAMH,WAAS,UAAQ,KAAK,MAAMI,aAAY,OAAO,IAAI,CAAC;;;ACgBjE,IAAM,QAAQ;AAAA,EACZ,GAAGC;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACL;AACA,IAAM,SAAS;AAAA,EACb,GAAG;AAAA,EACH,GAAG;AACL;AACA,IAAM,SAAS;AAAA,EACb;AAAA,EACA,MAAAC;AACF;;;ACxCA,IAAM,OAAO;AAEb,IAAM,UAAU,CAAAC,aAAWA,YAAWA,SAAQ,oBAC3C,mBAAmB,aAAa,oBAChC;AAEH,IAAM,KAAK;AAEX,IAAM,YAAY;AAElB,IAAM,KAAK;AAAA;AAAA,KAEN,oBAAoB;AAAA,KACpB,oBAAoB,OAAO;AAAA,KAC3B,qBAAqB,UAAU;AAAA,KAC/B,wBAAwB,mBAAmB,UAAU;AAAA,KACrD,wBAAwB,mBAAmB,UAAU;AAAA,KACrD,wBAAwB,mBAAmB,UAAU;AAAA,KACrD,wBAAwB,mBAAmB,UAAU;AAAA,aAC7C,mBAAmB,UAAU;AAAA;AAAA,EAExC,QAAQ,gBAAgB,EAAE,EAAE,QAAQ,OAAO,EAAE,EAAE,KAAK;AAGtD,IAAM,WAAW,IAAI,OAAO,OAAO,YAAY,MAAM;AACrD,IAAM,UAAU,IAAI,OAAO,IAAI,KAAK;AACpC,IAAM,UAAU,IAAI,OAAO,IAAI,KAAK;AAEpC,IAAM,UAAU,CAAAA,aAAWA,YAAWA,SAAQ,QAC3C,WACA,IAAI,OAAO,MAAM,QAAQA,QAAO,IAAI,KAAK,QAAQA,QAAO,SAAS,QAAQA,QAAO,IAAI,KAAK,QAAQA,QAAO,MAAM,GAAG;AAEpH,QAAQ,KAAK,CAAAA,aAAWA,YAAWA,SAAQ,QAAQ,UAAU,IAAI,OAAO,GAAG,QAAQA,QAAO,IAAI,KAAK,QAAQA,QAAO,KAAK,GAAG;AAC1H,QAAQ,KAAK,CAAAA,aAAWA,YAAWA,SAAQ,QAAQ,UAAU,IAAI,OAAO,GAAG,QAAQA,QAAO,IAAI,KAAK,QAAQA,QAAO,KAAK,GAAG;AAE1H,IAAO,mBAAQ;;;AClCA,SAAR,gBAAiC,WAAW;AAClD,QAAM,kBAAkB,IAAI,eAAe,UAAU,GAAG,UAAU;AAElE,SAAO,eAAe,iBAAiB,QAAQ;AAAA,IAC9C,OAAO,mBAAmB,UAAU,QAAQ;AAAA,IAC5C,cAAc;AAAA,EACf,CAAC;AAED,SAAO;AACR;AAEO,SAAS,iBAAiB;AAChC,SAAO;AACR;;;ACdA,IAAM,EAAC,UAAAC,UAAQ,IAAI,OAAO;AAEX,SAAR,SAA0B,OAAO;AACvC,SAAOA,UAAS,KAAK,KAAK,MAAM;AACjC;;;ACFA,IAAM,UAAU;AAAA,EACf,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AACV;AAEe,SAAR,aAA8B,QAAQC,WAAU,CAAC,GAAG;AAC1D,MAAI,CAAC,SAAS,MAAM,GAAG;AACtB,UAAM,IAAI,UAAU,4BAA4B;AAAA,EACjD;AAEA,QAAM,QAAQ,OAAO,KAAK,OAAO,EAAE,IAAI,WACrC,OAAOA,SAAQ,UAAU,YAAYA,SAAQ,QAAQ,OAAO,SAAS,QAAQ,QAAQ,EACtF,EAAE,KAAK,EAAE;AAEV,QAAMC,gBAAe,IAAI,OAAOD,SAAQ,UAAU,OAAO,QAAQ,KAAK;AAEtE,EAAAC,cAAa,YAAY,OAAOD,SAAQ,cAAc,WACrDA,SAAQ,YACR,OAAO;AAER,SAAOC;AACR;;;ACfO,SAAS,QAAQ,OAAOC,SAAQ,EAAC,QAAO,IAAI,CAAC,GAAG;AACtD,MAAI;AACH,WAAO,gBAAgB,MAAM,aAAY,KAAK,EAAE,KAAKA,OAAM,GAAG,EAAC,QAAO,CAAC,EAAE;AAAA,EAC1E,SAAS,OAAP;AACD,QAAI,eAAe,KAAK,GAAG;AAC1B,aAAO;AAAA,IACR;AAEA,UAAM;AAAA,EACP;AACD;;;ACnBA,IAAM,gBAAgB;AACtB,IAAM,gBAAgB;AAEtB,IAAM,UAAU;AAAA,EACf,SAAS;AACV;AAEO,SAAS,KAAKC,SAAQ;AAC5B,SAAO,QAAQ,iBAAQ,EAAC,OAAO,KAAI,CAAC,GAAGA,QAAO,MAAM,GAAG,aAAa,GAAG,OAAO;AAC/E;AAEO,SAAS,OAAOA,SAAQ;AAC9B,SAAO,QAAQ,iBAAQ,GAAG,EAAC,OAAO,KAAI,CAAC,GAAGA,QAAO,MAAM,GAAG,aAAa,GAAG,OAAO;AAClF;AAEO,SAAS,OAAOA,SAAQ;AAC9B,SAAO,QAAQ,iBAAQ,GAAG,EAAC,OAAO,KAAI,CAAC,GAAGA,QAAO,MAAM,GAAG,aAAa,GAAG,OAAO;AAClF;;;ACdO,SAAS,YAAY,OAAO,GAAG;AACpC,MAAI,WAAW,UAAU,QAAQ,WAAW,OAAO,eAAe,MAAM;AACtE,WAAO,WAAW,OAAO,YAAY,IAAI;AAAA,EAC3C;AACA,SAAO,IAAI,WAAW,IAAI;AAC5B;;;ACTA,SAAS,YAAYC,OAAM,QAAQC,UAAQC,UAAQ;AACjD,SAAO;AAAA,IACL,MAAAF;AAAA,IACA;AAAA,IACA,SAAS;AAAA,MACP,MAAAA;AAAA,MACA;AAAA,MACA,QAAAC;AAAA,IACF;AAAA,IACA,SAAS,EAAE,QAAAC,SAAO;AAAA,EACpB;AACF;AACA,IAAM,SAAS,YAAY,QAAQ,KAAK,CAAAC,SAAO;AAC7C,QAAM,UAAU,IAAI,YAAY,MAAM;AACtC,SAAO,MAAM,QAAQ,OAAOA,IAAG;AACjC,GAAG,SAAO;AACR,QAAM,UAAU,IAAI,YAAY;AAChC,SAAO,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC;AACxC,CAAC;AACD,IAAM,QAAQ,YAAY,SAAS,KAAK,CAAAA,SAAO;AAC7C,MAAIC,UAAS;AACb,WAAS,IAAI,GAAG,IAAID,KAAI,QAAQ,KAAK;AACnC,IAAAC,WAAU,OAAO,aAAaD,KAAI,EAAE;AAAA,EACtC;AACA,SAAOC;AACT,GAAG,SAAO;AACR,QAAM,IAAI,UAAU,CAAC;AACrB,QAAMD,OAAM,YAAY,IAAI,MAAM;AAClC,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,IAAAA,KAAI,KAAK,IAAI,WAAW,CAAC;AAAA,EAC3B;AACA,SAAOA;AACT,CAAC;AACD,IAAM,QAAQ;AAAA,EACZ,MAAM;AAAA,EACN,SAAS;AAAA,EACT,KAAK,MAAM;AAAA,EACX,QAAQ;AAAA,EACR;AAAA,EACA,QAAQ;AAAA,EACR,GAAG;AACL;AACA,IAAO,gBAAQ;;;AC3CR,SAASE,UAAS,OAAO,WAAW,QAAQ;AACjD,QAAMC,QAAO,cAAM;AACnB,MAAI,CAACA,OAAM;AACT,UAAM,IAAI,MAAM,yBAA0B,WAAY;AAAA,EACxD;AACA,OAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,WAAO,WAAW,OAAO,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU,EAAE,SAAS,MAAM;AAAA,EACjG;AACA,SAAOA,MAAK,QAAQ,OAAO,KAAK,EAAE,UAAU,CAAC;AAC/C;;;ACNO,IAAM,OAAO;AACb,IAAM,OAAO;AAIb,IAAM,UAAU,SAAU,IAAU;AACzC,MAAI,SAAS;AACb,OAAK,GAAG,SAAQ,EAAG,KAAI;AAEvB,MAAI,KAAK,EAAE,GAAG;AACZ,UAAM,QAAQ,IAAI,WAAW,SAAS,CAAC;AAEvC,OAAG,MAAM,KAAK,EAAE,QAAQ,CAAC,SAAQ;AAC/B,YAAM,YAAY,SAAS,MAAM,EAAE,IAAI;IACzC,CAAC;AAED,WAAO;;AAGT,MAAI,KAAK,EAAE,GAAG;AACZ,UAAM,WAAW,GAAG,MAAM,KAAK,CAAC;AAEhC,QAAI;AACJ,SAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACpC,YAAM,OAAO,KAAK,SAAS,EAAE;AAC7B,UAAI;AAEJ,UAAI,MAAM;AACR,mBAAW,QAAQ,SAAS,EAAE;AAC9B,iBAAS,KAAKC,UAAmB,SAAS,MAAM,GAAG,CAAC,GAAG,QAAQ;;AAGjE,UAAI,YAAY,QAAQ,EAAE,IAAI,GAAG;AAC/B,iBAAS,OAAO,GAAG,GAAGA,UAAmB,SAAS,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC;;;AAI5E,QAAI,SAAS,OAAO,IAAI;AACtB,aAAO,SAAS,SAAS;AAAG,iBAAS,QAAQ,GAAG;eACvC,SAAS,SAAS,SAAS,OAAO,IAAI;AAC/C,aAAO,SAAS,SAAS;AAAG,iBAAS,KAAK,GAAG;eACpC,SAAS,SAAS,GAAG;AAC9B,WAAK,IAAI,GAAG,IAAI,SAAS,UAAU,SAAS,OAAO,IAAI;AAAI;AAC3D,YAAM,OAAsC,CAAC,GAAG,CAAC;AACjD,WAAK,IAAI,IAAI,SAAS,QAAQ,IAAI,GAAG,KAAK;AACxC,aAAK,KAAK,GAAG;;AAEf,eAAS,OAAO,MAAM,UAAU,IAAI;;AAGtC,UAAM,QAAQ,IAAI,WAAW,SAAS,EAAE;AAExC,SAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACpC,YAAMC,QAAO,SAAS,SAAS,IAAI,EAAE;AACrC,YAAM,YAAaA,SAAQ,IAAK;AAChC,YAAM,YAAYA,QAAO;;AAG3B,WAAO;;AAGT,QAAM,IAAI,MAAM,oBAAoB;AACtC;AAGO,IAAMD,YAAW,SAAUE,MAAiB,SAAiB,GAAGC,SAAe;AACpF,WAAS,CAAC,CAAC;AACX,EAAAA,UAASA,WAAA,OAAAA,UAAWD,KAAI,SAAS;AAEjC,QAAM,OAAO,IAAI,SAASA,KAAI,MAAM;AAEpC,MAAIC,YAAW,GAAG;AAChB,UAAM,SAAS,CAAA;AAGf,aAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK;AAC/B,aAAO,KAAKD,KAAI,SAAS,EAAE;;AAG7B,WAAO,OAAO,KAAK,GAAG;;AAGxB,MAAIC,YAAW,IAAI;AACjB,UAAM,SAAS,CAAA;AAGf,aAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK,GAAG;AAClC,aAAO,KAAK,KAAK,UAAU,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC;;AAGrD,WAAO,OAAO,KAAK,GAAG,EACnB,QAAQ,sBAAsB,QAAQ,EACtC,QAAQ,UAAU,IAAI;;AAG3B,SAAO;AACT;;;AC5FA,IAAM,IAAI;AACH,IAAM,QAAkC,CAAA;AACxC,IAAM,QAAkC,CAAA;AAExC,IAAM,QAA6D;EACxE,CAAC,GAAG,IAAI,KAAK;EACb,CAAC,GAAG,IAAI,KAAK;EACb,CAAC,IAAI,IAAI,MAAM;EACf,CAAC,IAAI,KAAK,KAAK;EACf,CAAC,IAAI,GAAG,SAAS;EACjB,CAAC,IAAI,GAAG,OAAO,IAAI;EACnB,CAAC,IAAI,GAAG,QAAQ,IAAI;EACpB,CAAC,IAAI,GAAG,QAAQ,IAAI;EACpB,CAAC,IAAI,GAAG,WAAW,IAAI;EACvB,CAAC,KAAK,IAAI,MAAM;EAChB,CAAC,KAAK,IAAI,KAAK;EACf,CAAC,KAAK,GAAG,iBAAiB;EAC1B,CAAC,KAAK,GAAG,mBAAmB;EAC5B,CAAC,KAAK,GAAG,cAAc;EACvB,CAAC,KAAK,GAAG,QAAQ;EACjB,CAAC,KAAK,GAAG,aAAa;EACtB,CAAC,KAAK,GAAG,KAAK;EACd,CAAC,KAAK,GAAG,KAAK;EACd,CAAC,KAAK,GAAG,QAAQ,OAAO,IAAI;EAI5B,CAAC,KAAK,GAAG,MAAM;EAEf,CAAC,KAAK,GAAG,KAAK;EACd,CAAC,KAAK,GAAG,OAAO;EAChB,CAAC,KAAK,IAAI,OAAO;EACjB,CAAC,KAAK,KAAK,QAAQ;EACnB,CAAC,KAAK,GAAG,UAAU;EACnB,CAAC,KAAK,GAAG,MAAM;EACf,CAAC,KAAK,GAAG,cAAc;EACvB,CAAC,KAAK,GAAG,UAAU;EACnB,CAAC,KAAK,GAAG,IAAI;EACb,CAAC,KAAK,GAAG,KAAK;EACd,CAAC,KAAK,GAAG,oBAAoB;EAC7B,CAAC,KAAK,GAAG,MAAM;EACf,CAAC,KAAK,GAAG,QAAQ;;AAInB,MAAM,QAAQ,SAAM;AAClB,QAAM,QAAQ,eAAe,GAAG,GAAG;AACnC,QAAM,MAAM,QAAQ;AACpB,QAAM,MAAM,QAAQ;AACtB,CAAC;AAEK,SAAU,eAAgBC,OAAc,MAAcC,OAAc,YAAkB,MAAU;AACpG,SAAO;IACL,MAAAD;IACA;IACA,MAAAC;IACA,YAAY,QAAQ,UAAU;IAC9B,MAAM,QAAQ,IAAI;;AAEtB;AAEM,SAAU,YAAa,OAAsB;AACjD,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,MAAM,UAAU,MAAM;AACxB,aAAO,MAAM;;AAGf,UAAM,IAAI,MAAM,0BAA0B,OAAO;aACxC,OAAO,UAAU,UAAU;AACpC,QAAI,MAAM,UAAU,MAAM;AACxB,aAAO,MAAM;;AAGf,UAAM,IAAI,MAAM,0BAA0B,OAAO;;AAGnD,QAAM,IAAI,MAAM,6BAA6B,OAAO,OAAO;AAC7D;;;AC7EA,IAAAC,iBAAmB;;;ACPZ,SAASC,YAAWC,SAAQ,WAAW,QAAQ;AACpD,QAAMC,QAAO,cAAM;AACnB,MAAI,CAACA,OAAM;AACT,UAAM,IAAI,MAAM,yBAA0B,WAAY;AAAA,EACxD;AACA,OAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,WAAO,WAAW,OAAO,KAAKD,SAAQ,MAAM;AAAA,EAC9C;AACA,SAAOC,MAAK,QAAQ,OAAO,GAAIA,MAAK,SAAWD,SAAS;AAC1D;;;ACTO,SAASE,QAAO,QAAQC,SAAQ;AACrC,MAAI,CAACA,SAAQ;AACX,IAAAA,UAAS,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,QAAQ,CAAC;AAAA,EAC5D;AACA,QAAM,SAAS,YAAYA,OAAM;AACjC,MAAI,SAAS;AACb,aAAW,OAAO,QAAQ;AACxB,WAAO,IAAI,KAAK,MAAM;AACtB,cAAU,IAAI;AAAA,EAChB;AACA,SAAO;AACT;;;AFeM,SAAU,gBAAiB,OAAwBC,MAAe;AACtE,QAAM,WAAW,YAAY,KAAK;AAClC,UAAQ,SAAS;SACV;SACA;AACH,aAAO,SAASA,IAAG;SAEhB;SACA;SACA;SACA;AACH,aAAO,WAAWA,IAAG,EAAE,SAAQ;SAE5B;SACA;SACA;SACA;SACA;SACA;AACH,aAAO,UAAUA,IAAG;SAEjB;AACH,aAAO,SAASA,IAAG;SAChB;AACH,aAAO,YAAYA,IAAG;SACnB;AACH,aAAO,YAAYA,IAAG;SACnB;AACH,aAAO,SAASA,IAAG;;AAEnB,aAAOC,UAAmBD,MAAK,QAAQ;;AAE7C;AAEM,SAAU,eAAgB,OAAwB,KAAW;AACjE,QAAM,WAAW,YAAY,KAAK;AAClC,UAAQ,SAAS;SACV;AACH,aAAO,SAAS,GAAG;SAChB;AACH,aAAO,SAAS,GAAG;SAEhB;SACA;SACA;SACA;AACH,aAAO,WAAW,SAAS,KAAK,EAAE,CAAC;SAEhC;SACA;SACA;SACA;SACA;SACA;AACH,aAAO,UAAU,GAAG;SAEjB;AACH,aAAO,SAAS,GAAG;SAChB;AACH,aAAO,YAAY,GAAG;SACnB;AACH,aAAO,aAAa,GAAG;SACpB;AACH,aAAO,SAAS,GAAG;;AAEnB,aAAOE,YAAqB,KAAK,QAAQ;;AAE/C;AAEA,IAAM,WAAW,OAAO,OAAO,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO;AAC1D,IAAM,iBAAkB,WAAA;AACtB,MAAI,MAAM,SAAS,GAAG,GAAG,SAAS,EAAE;AACpC,WAAS,MAAM,CAAC,EAAE,QAAQ,CAAC,MAAO,MAAM,IAAI,GAAG,CAAC,CAAE;AAClD,SAAO;AACT,EAAE;AAEF,SAAS,SAAU,UAAgB;AACjC,MAAI,CAAI,KAAK,QAAQ,GAAG;AACtB,UAAM,IAAI,MAAM,oBAAoB;;AAEtC,SAAU,QAAQ,QAAQ;AAC5B;AAEA,SAAS,SAAU,QAAkB;AACnC,QAAM,WAAcD,UAAS,QAAQ,GAAG,OAAO,MAAM;AACrD,MAAI,YAAY,MAAM;AACpB,UAAM,IAAI,MAAM,oBAAoB;;AAEtC,MAAI,CAAI,KAAK,QAAQ,GAAG;AACtB,UAAM,IAAI,MAAM,oBAAoB;;AAEtC,SAAO;AACT;AAEA,SAAS,WAAY,MAAY;AAC/B,QAAMD,OAAM,IAAI,YAAY,CAAC;AAC7B,QAAM,OAAO,IAAI,SAASA,IAAG;AAC7B,OAAK,UAAU,GAAG,IAAI;AAEtB,SAAO,IAAI,WAAWA,IAAG;AAC3B;AAEA,SAAS,WAAYA,MAAe;AAClC,QAAM,OAAO,IAAI,SAASA,KAAI,MAAM;AACpC,SAAO,KAAK,UAAUA,KAAI,UAAU;AACtC;AAEA,SAAS,UAAW,KAAW;AAC7B,QAAMA,OAAME,YAAqB,GAAG;AACpC,QAAM,OAAO,WAAW,KAAK,eAAAC,QAAO,OAAOH,KAAI,MAAM,CAAC;AACtD,SAAOI,QAAiB,CAAC,MAAMJ,IAAG,GAAG,KAAK,SAASA,KAAI,MAAM;AAC/D;AAEA,SAAS,UAAWA,MAAe;AACjC,QAAM,OAAO,eAAAG,QAAO,OAAOH,IAAG;AAC9B,EAAAA,OAAMA,KAAI,MAAM,eAAAG,QAAO,OAAO,KAAK;AAEnC,MAAIH,KAAI,WAAW,MAAM;AACvB,UAAM,IAAI,MAAM,sBAAsB;;AAGxC,SAAOC,UAAmBD,IAAG;AAC/B;AAEA,SAAS,SAAU,MAAY;AAC7B,MAAI;AAEJ,MAAI,KAAK,OAAO,OAAO,KAAK,OAAO,KAAK;AACtC,SAAYK,QAAO,UAAU,OAAO,IAAI,MAAM,CAAC,EAAE;SAC5C;AACL,SAAK,IAAI,MAAM,IAAI,EAAE,UAAU;;AAIjC,QAAM,OAAO,WAAW,KAAK,eAAAF,QAAO,OAAO,GAAG,MAAM,CAAC;AACrD,SAAOC,QAAiB,CAAC,MAAM,EAAE,GAAG,KAAK,SAAS,GAAG,MAAM;AAC7D;AAEA,SAAS,SAAU,OAAa;AAC9B,QAAM,KAAK,eAAe,OAAO,KAAK;AACtC,QAAM,OAAO,WAAW,KAAK,eAAAD,QAAO,OAAO,GAAG,MAAM,CAAC;AACrD,SAAOC,QAAiB,CAAC,MAAM,EAAE,GAAG,KAAK,SAAS,GAAG,MAAM;AAC7D;AACA,SAAS,SAAUJ,MAAe;AAChC,QAAM,OAAO,eAAAG,QAAO,OAAOH,IAAG;AAC9B,QAAM,OAAOA,KAAI,MAAM,eAAAG,QAAO,OAAO,KAAK;AAE1C,MAAI,KAAK,WAAW,MAAM;AACxB,UAAM,IAAI,MAAM,sBAAsB;;AAGxC,SAAO,MAAMF,UAAmB,MAAM,WAAW;AACnD;AAKA,SAAS,SAAUD,MAAe;AAChC,QAAM,OAAO,eAAAG,QAAO,OAAOH,IAAG;AAC9B,QAAM,UAAUA,KAAI,MAAM,eAAAG,QAAO,OAAO,KAAK;AAE7C,MAAI,QAAQ,WAAW,MAAM;AAC3B,UAAM,IAAI,MAAM,sBAAsB;;AAGxC,SAAOF,UAAmB,SAAS,WAAW;AAChD;AAEA,SAAS,YAAa,KAAW;AAC/B,QAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,MAAI,KAAK,WAAW,GAAG;AACrB,UAAM,IAAI,MAAM,kCAAkC,KAAK,KAAK,MAAM,sCAAsC;;AAE1G,MAAI,KAAK,GAAG,WAAW,IAAI;AACzB,UAAM,IAAI,MAAM,+BAA+B,KAAK,6BAA6B;;AAInF,QAAMD,OAAM,OAAO,OAAO,MAAM,KAAK,EAAE;AAGvC,QAAM,OAAO,SAAS,KAAK,IAAI,EAAE;AACjC,MAAI,OAAO,KAAK,OAAO,OAAO;AAC5B,UAAM,IAAI,MAAM,uCAAuC;;AAEzD,QAAM,UAAU,WAAW,IAAI;AAC/B,SAAOI,QAAiB,CAACJ,MAAK,OAAO,GAAGA,KAAI,SAAS,QAAQ,MAAM;AACrE;AAEA,SAAS,aAAc,KAAW;AAChC,QAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,MAAI,KAAK,WAAW,GAAG;AACrB,UAAM,IAAI,MAAM,kCAAkC,KAAK,KAAK,MAAM,sCAAsC;;AAE1G,MAAI,KAAK,GAAG,WAAW,IAAI;AACzB,UAAM,IAAI,MAAM,+BAA+B,KAAK,8BAA8B;;AAGpF,QAAMA,OAAM,OAAO,OAAO,IAAI,KAAK,IAAI;AAGvC,QAAM,OAAO,SAAS,KAAK,IAAI,EAAE;AACjC,MAAI,OAAO,KAAK,OAAO,OAAO;AAC5B,UAAM,IAAI,MAAM,uCAAuC;;AAEzD,QAAM,UAAU,WAAW,IAAI;AAC/B,SAAOI,QAAiB,CAACJ,MAAK,OAAO,GAAGA,KAAI,SAAS,QAAQ,MAAM;AACrE;AAEA,SAAS,YAAaA,MAAe;AACnC,QAAM,YAAYA,KAAI,MAAM,GAAGA,KAAI,SAAS,CAAC;AAC7C,QAAM,YAAYA,KAAI,MAAMA,KAAI,SAAS,CAAC;AAC1C,QAAM,OAAOC,UAAmB,WAAW,QAAQ;AACnD,QAAM,OAAO,WAAW,SAAS;AACjC,SAAO,GAAG,QAAQ;AACpB;;;AGhPA,IAAAK,iBAAmB;AASb,SAAU,qBAAsB,KAAW;AAC/C,QAAM,SAAS,CAAA;AACf,QAAM,QAAQ,IAAI,MAAM,GAAG,EAAE,MAAM,CAAC;AACpC,MAAI,MAAM,WAAW,KAAK,MAAM,OAAO,IAAI;AACzC,WAAO,CAAA;;AAGT,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM;AACnB,UAAM,QAAQ,YAAY,IAAI;AAE9B,QAAI,MAAM,SAAS,GAAG;AACpB,aAAO,KAAK,CAAC,IAAI,CAAC;AAClB;;AAGF;AACA,QAAI,KAAK,MAAM,QAAQ;AACrB,YAAM,WAAW,sBAAsB,GAAG;;AAI5C,QAAI,MAAM,SAAS,MAAM;AACvB,aAAO,KAAK;QACV;QAIA,UAAU,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC;OACnC;AACD;;AAGF,WAAO,KAAK,CAAC,MAAM,MAAM,EAAE,CAAC;;AAG9B,SAAO;AACT;AAKM,SAAU,qBAAsB,QAAqB;AACzD,QAAM,QAAkB,CAAA;AACxB,SAAO,IAAI,CAAC,QAAO;AACjB,UAAM,QAAQ,eAAe,GAAG;AAChC,UAAM,KAAK,MAAM,IAAI;AACrB,QAAI,IAAI,SAAS,KAAK,IAAI,MAAM,MAAM;AACpC,YAAM,KAAK,IAAI,EAAE;;AAEnB,WAAO;EACT,CAAC;AAED,SAAO,UAAU,MAAM,KAAK,GAAG,CAAC;AAClC;AAKM,SAAU,qBAAsB,QAAgC;AACpE,SAAO,OAAO,IAAI,CAAC,QAAO;AACxB,QAAI,CAAC,MAAM,QAAQ,GAAG,GAAG;AACvB,YAAM,CAAC,GAAG;;AAEZ,UAAM,QAAQ,eAAe,GAAG;AAChC,QAAI,IAAI,SAAS,GAAG;AAClB,aAAO,CAAC,MAAM,MAAM,eAAe,MAAM,MAAM,IAAI,EAAE,CAAC;;AAExD,WAAO,CAAC,MAAM,IAAI;EACpB,CAAC;AACH;AAOM,SAAU,qBAAsB,QAAe;AACnD,SAAO,OAAO,IAAI,SAAM;AACtB,UAAM,QAAQ,eAAe,GAAG;AAChC,QAAI,IAAI,MAAM,MAAM;AAClB,aAAO,CAAC,MAAM,MAAM,gBAAgB,MAAM,MAAM,IAAI,EAAE,CAAC;;AAEzD,WAAO,CAAC,MAAM,IAAI;EACpB,CAAC;AACH;AAKM,SAAU,cAAe,QAAe;AAC5C,SAAO,UAAUC,QAAiB,OAAO,IAAI,CAAC,QAAO;AACnD,UAAM,QAAQ,eAAe,GAAG;AAChC,QAAIC,OAAM,WAAW,KAAK,eAAAC,QAAO,OAAO,MAAM,IAAI,CAAC;AAEnD,QAAI,IAAI,SAAS,KAAK,IAAI,MAAM,MAAM;AACpC,MAAAD,OAAMD,QAAiB,CAACC,MAAK,IAAI,EAAE,CAAC;;AAGtC,WAAOA;EACT,CAAC,CAAC,CAAC;AACL;AAEM,SAAU,YAAa,GAAa,MAA2B;AACnE,MAAI,EAAE,OAAO,GAAG;AACd,WAAO,EAAE,OAAO;aACP,EAAE,SAAS,GAAG;AACvB,WAAO;SACF;AACL,UAAM,OAAO,eAAAC,QAAO,OAAO,IAAI;AAC/B,WAAO,OAAO,eAAAA,QAAO,OAAO;;AAEhC;AAEM,SAAU,cAAeD,MAAe;AAC5C,QAAM,SAAuC,CAAA;AAC7C,MAAI,IAAI;AACR,SAAO,IAAIA,KAAI,QAAQ;AACrB,UAAME,QAAO,eAAAD,QAAO,OAAOD,MAAK,CAAC;AACjC,UAAM,IAAI,eAAAC,QAAO,OAAO;AAExB,UAAM,IAAI,YAAYC,KAAI;AAE1B,UAAM,OAAO,YAAY,GAAGF,KAAI,MAAM,IAAI,CAAC,CAAC;AAE5C,QAAI,SAAS,GAAG;AACd,aAAO,KAAK,CAACE,KAAI,CAAC;AAClB,WAAK;AACL;;AAGF,UAAM,OAAOF,KAAI,MAAM,IAAI,GAAG,IAAI,IAAI,IAAI;AAE1C,SAAM,OAAO;AAEb,QAAI,IAAIA,KAAI,QAAQ;AAClB,YAAM,WAAW,iCAAiCG,UAAmBH,MAAK,QAAQ,CAAC;;AAIrF,WAAO,KAAK,CAACE,OAAM,IAAI,CAAC;;AAG1B,SAAO;AACT;AAKM,SAAU,cAAeF,MAAe;AAC5C,QAAM,IAAI,cAAcA,IAAG;AAC3B,QAAM,IAAI,qBAAqB,CAAC;AAChC,SAAO,qBAAqB,CAAC;AAC/B;AAKM,SAAU,cAAe,KAAW;AACxC,QAAM,UAAU,GAAG;AACnB,QAAM,IAAI,qBAAqB,GAAG;AAClC,QAAM,IAAI,qBAAqB,CAAC;AAEhC,SAAO,cAAc,CAAC;AACxB;AAKM,SAAUI,YAAY,KAAW;AACrC,SAAO,cAAc,GAAG;AAC1B;AAKM,SAAU,UAAWJ,MAAe;AACxC,QAAM,MAAM,cAAcA,IAAG;AAC7B,MAAI,OAAO,MAAM;AACf,UAAM;;AAER,SAAO,WAAW,KAAKA,IAAG;AAC5B;AAEM,SAAU,cAAeA,MAAe;AAC5C,MAAI;AACF,kBAAcA,IAAG;WACV,KAAP;AACA,WAAO;;AAEX;AAMM,SAAU,UAAW,KAAW;AACpC,SAAO,MAAM,IAAI,KAAI,EAAG,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,GAAG;AAC9D;AAEM,SAAU,WAAY,KAAW;AACrC,SAAO,IAAI,MAAM,4BAA4B,GAAG;AAClD;AAEM,SAAU,eAAgB,KAAU;AACxC,QAAM,QAAQ,YAAY,IAAI,EAAE;AAChC,SAAO;AACT;;;ACxNA,IAAAK,iBAAmB;AAGnB,sBAAoB;;;ACLb,SAASC,QAAO,GAAG,GAAG;AAC3B,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AACA,MAAI,EAAE,eAAe,EAAE,YAAY;AACjC,WAAO;AAAA,EACT;AACA,WAAS,IAAI,GAAG,IAAI,EAAE,YAAY,KAAK;AACrC,QAAI,EAAE,OAAO,EAAE,IAAI;AACjB,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;;;;;;;;;;;;;;;;;;;;;;;ADJA,IAAM,UAAU,OAAO,IAAI,4BAA4B;AAEvD,IAAM,YAAY;EAChB,YAAY,KAAK,EAAE;EACnB,YAAY,MAAM,EAAE;EACpB,YAAY,MAAM,EAAE;EACpB,YAAY,SAAS,EAAE;;AAGzB,IAAM,YAAY;EAChB,YAAY,KAAK,EAAE;EACnB,YAAY,MAAM,EAAE;;AAoCf,IAAM,YAAY,oBAAI,IAAG;AAChC,IAAM,SAAS,OAAO,IAAI,sCAAsC;AA6U1D,SAAU,YAAa,OAAU;AACrC,SAAO,QAAQ,+BAAQ,OAAO;AAChC;AAQA,IAAM,mBAAN,MAAsB;EAiBpB,YAAa,MAAqB;AAflC,6BAAA,IAAA,MAAA,MAAA;AACA,6BAAA,IAAA,MAAA,MAAA;AACA,mCAAA,IAAA,MAAA,MAAA;AAEA,SAAA,MAAoB;AAalB,QAAI,QAAQ,MAAM;AAChB,aAAO;;AAGT,QAAI,gBAAgB,YAAY;AAC9B,WAAK,QAAc,UAAU,IAAI;eACxB,OAAO,SAAS,UAAU;AACnC,UAAI,KAAK,SAAS,KAAK,KAAK,OAAO,CAAC,MAAM,KAAK;AAC7C,cAAM,IAAI,MAAM,cAAc,6BAA6B;;AAE7D,WAAK,QAAcC,YAAW,IAAI;eACzB,YAAY,IAAI,GAAG;AAC5B,WAAK,QAAc,UAAU,KAAK,KAAK;WAClC;AACL,YAAM,IAAI,MAAM,qDAAqD;;EAEzE;EAEA,WAAQ;AACN,QAAI,uBAAA,MAAI,0BAAA,GAAA,KAAY,MAAM;AACxB,6BAAA,MAAI,0BAAiB,cAAc,KAAK,KAAK,GAAC,GAAA;;AAGhD,WAAO,uBAAA,MAAI,0BAAA,GAAA;EACb;EAEA,SAAM;AACJ,WAAO,KAAK,SAAQ;EACtB;EAEA,YAAS;AACP,UAAMC,SAAQ,KAAK,WAAU;AAC7B,UAAM,QAAQ,KAAK,SAAQ,EAAG,MAAM,GAAG,EAAE,MAAM,CAAC;AAChD,QAAI;AACJ,QAAI;AAEJ,QAAI,MAAM,SAAS,GAAG;AAEpB,UAAI,UAAU,SAASA,OAAM,EAAE,KAAK,UAAU,SAASA,OAAM,EAAE,GAAG;AAChE,oBAAY,YAAY,KAAK,EAAE;AAC/B,eAAO;aACF;AACL,oBAAY,YAAY,MAAM,EAAE,EAAE;AAClC,eAAO,SAAS,MAAM,EAAE;;eAEjB,UAAU,SAASA,OAAM,EAAE,GAAG;AACvC,kBAAY,YAAY,KAAK,EAAE;AAC/B,aAAO;WACF;AACL,YAAM,IAAI,MAAM,qGAAqG;;AAGvH,UAAM,OAAwB;MAC5B,QAASA,OAAM,OAAO,MAAMA,OAAM,OAAO,KAAM,IAAI;MACnD,MAAM,MAAM;MACZ;MACA;;AAGF,WAAO;EACT;EAEA,SAAM;AACJ,WAAO,KAAK,WAAU,EAAG,IAAI,CAAAC,UAAQ,OAAO,OAAO,CAAA,GAAI,YAAYA,KAAI,CAAC,CAAC;EAC3E;EAEA,aAAU;AACR,UAAMD,SAAkB,CAAA;AACxB,UAAME,OAAM,KAAK;AACjB,QAAI,IAAI;AACR,WAAO,IAAIA,KAAI,QAAQ;AACrB,YAAMD,QAAO,eAAAE,QAAO,OAAOD,MAAK,CAAC;AACjC,YAAM,IAAI,eAAAC,QAAO,OAAO;AAExB,YAAM,IAAI,YAAYF,KAAI;AAC1B,YAAM,OAAa,YAAY,GAAGC,KAAI,MAAM,IAAI,CAAC,CAAC;AAElD,WAAM,OAAO;AACb,MAAAF,OAAM,KAAKC,KAAI;;AAGjB,WAAOD;EACT;EAEA,aAAU;AACR,WAAO,KAAK,OAAM,EAAG,IAAI,WAAS,MAAM,IAAI;EAC9C;EAEA,SAAM;AACJ,QAAI,uBAAA,MAAI,0BAAA,GAAA,KAAY,MAAM;AACxB,6BAAA,MAAI,0BAAiB,cAAc,KAAK,KAAK,GAAC,GAAA;;AAGhD,WAAO,uBAAA,MAAI,0BAAA,GAAA;EACb;EAEA,eAAY;AACV,QAAI,uBAAA,MAAI,gCAAA,GAAA,KAAkB,MAAM;AAC9B,6BAAA,MAAI,gCAAuB,qBAAqB,KAAK,OAAM,CAAE,GAAC,GAAA;;AAGhE,WAAO,uBAAA,MAAI,gCAAA,GAAA;EACb;EAEA,YAAa,MAAoB;AAC/B,WAAO,IAAI,iBAAiB,IAAI;AAChC,WAAO,IAAI,iBAAiB,KAAK,SAAQ,IAAK,KAAK,SAAQ,CAAE;EAC/D;EAEA,YAAa,MAAwB;AACnC,UAAM,aAAa,KAAK,SAAQ;AAChC,UAAM,IAAI,KAAK,SAAQ;AACvB,UAAM,IAAI,EAAE,YAAY,UAAU;AAClC,QAAI,IAAI,GAAG;AACT,YAAM,IAAI,MAAM,WAAW,KAAK,SAAQ,kCAAmC,KAAK,SAAQ,GAAI;;AAE9F,WAAO,IAAI,iBAAiB,EAAE,MAAM,GAAG,CAAC,CAAC;EAC3C;EAEA,gBAAiBC,OAAY;AAC3B,UAAM,SAAS,KAAK,OAAM;AAC1B,aAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,UAAI,OAAO,GAAG,OAAOA,OAAM;AACzB,eAAO,IAAI,iBAAuB,cAAc,OAAO,MAAM,GAAG,CAAC,CAAC,CAAC;;;AAGvE,WAAO;EACT;EAEA,YAAS;AACP,QAAI;AACF,YAAM,SAAS,KAAK,aAAY,EAAG,OAAO,CAACG,WAAS;AAClD,YAAIA,OAAM,OAAO,MAAM,KAAK,MAAM;AAChC,iBAAO;;AAET,eAAO;MACT,CAAC;AAGD,YAAM,QAAQ,OAAO,IAAG;AACxB,WAAI,+BAAQ,OAAM,MAAM;AACtB,cAAM,YAAY,MAAM;AAIxB,YAAI,UAAU,OAAO,OAAO,UAAU,OAAO,KAAK;AAChD,iBAAOC,UAAmB,UAAU,OAAO,IAAI,WAAW,GAAG,WAAW;;AAI1E,eAAOA,UAAmB,IAAI,MAAM,SAAS,EAAE,UAAU,OAAO,WAAW;;AAG7E,aAAO;aACA,GAAP;AACA,aAAO;;EAEX;EAEA,UAAO;AACL,QAAI,OAAO;AACX,QAAI;AACF,aAAO,KAAK,aAAY,EAAG,OAAO,CAAC,UAAS;AAC1C,cAAM,QAAQ,YAAY,MAAM,EAAE;AAClC,YAAI,MAAM,SAAS,MAAM;AACvB,iBAAO;;AAET,eAAO;MACT,CAAC,EAAE,GAAG;AAEN,UAAI,QAAQ,MAAM;AAChB,eAAO;;YAET;AACA,aAAO;;AAET,WAAO;EACT;EAEA,OAAQ,MAA2B;AACjC,WAAOC,QAAiB,KAAK,OAAO,KAAK,KAAK;EAChD;EAEA,MAAM,QAASC,UAAsB;AACnC,UAAM,kBAAkB,KAAK,OAAM,EAAG,KAAK,CAAC,MAAM,EAAE,UAAU;AAG9D,QAAI,mBAAmB,MAAM;AAC3B,aAAO,CAAC,IAAI;;AAGd,UAAM,WAAW,UAAU,IAAI,gBAAgB,IAAI;AACnD,QAAI,YAAY,MAAM;AACpB,gBAAM,gBAAAC,SAAQ,IAAI,MAAM,6BAA6B,gBAAgB,MAAM,GAAG,2BAA2B;;AAG3G,UAAM,YAAY,MAAM,SAAS,MAAMD,QAAO;AAC9C,WAAO,UAAU,IAAI,CAAC,MAAM,IAAI,iBAAiB,CAAC,CAAC;EACrD;EAEA,cAAW;AACT,UAAMA,WAAU,KAAK,UAAS;AAE9B,QAAIA,SAAQ,cAAc,SAASA,SAAQ,cAAc,OAAO;AAC9D,YAAM,IAAI,MAAM,gEAAgEA,SAAQ,gEAAgE;;AAG1J,WAAO;MACL,QAAQA,SAAQ;MAChB,SAASA,SAAQ;MACjB,MAAMA,SAAQ;;EAElB;EAEA,mBAAoB,MAAgB;AAClC,UAAM,UAAU,sBAAQ,MAAM,OAAM;AAEpC,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO;;AAGT,QAAI,OAAO,GAAG,SAAS,KAAK,OAAO,GAAG,SAAS,IAAI;AACjD,aAAO;;AAET,QAAI,OAAO,GAAG,SAAS,KAAK,OAAO,GAAG,SAAS,KAAK;AAClD,aAAO;;AAET,WAAO;EACT;EAaA,EAAA,2BAAA,oBAAA,QAAA,GAAA,2BAAA,oBAAA,QAAA,GAAA,iCAAA,oBAAA,QAAA,GAAA,KA9PC,QA8PA,YAAQ;AACP,WAAO,KAAK,QAAO;EACrB;EAEA,UAAO;AACL,WAAO,gBACLF,UAAmB,KAAK,OAAO,QAAQ,IAAI,QACrC,cAAc,KAAK,KAAK,IAAI;EACtC;;AAcI,SAAU,UAAW,MAAqB;AAC9C,SAAO,IAAI,iBAAiB,IAAI;AAClC;;;AExqBA,iBAA+C;;;ACJ/C,IAAI,aAAa;AAOjB,MAAM,aACN,MAAM,KAAK,IAAI;AAEf,MAAM,WACN,MAAM,aACN,MAAM,KACN,MAAM,cAAc,IAAI;AAExB,MAAM,cACN,MAAM,KACN,MAAM,MAAM;AAEZ,MAAM,SACN,MAAM,MACN,MAAM,IAAI,MAAM,KAAK;AAErB,MAAM,SACN,MAAM,MACN,MAAM,IAAI,MAAM,IAAI;AAEpB,MAAM,OACN,MAAM,KACN,MAAM,IAAI,MAAM,IAAI;AAEpB,MAAM,MACN,MAAM,IAAI,MAAM,IAAI;AAEpB,MAAM,OACN,MAAM,KACN,MAAM,IAAI,MAAM,IAAI;AAEpB,MAAM,QACN,MAAM,IACN,MAAM,KAAK,SAAS;AAEpB,MAAM,OACN,MAAM,KACN,MAAM,IAAI,MAAM,IAAI;AAUpB,SAAS,MAAM,MAAI,IAAI,SAAO,MAAK;AACjC,MAAI,SAAS;AAEb,SAAO,MAAI,IAAI,QAAQ,iBAAiB,MAAM;AAC9C,MAAI,QAAQ,YAAY,SAAS,GAAG,GAAG,OAAM;AAC3C,YAAQ,UAAU,KAAK;AACvB,QAAI;AAAO,gBAAU,UAAU,KAAK,WAAW,GAAG,EAAE,IAAI;AAAA,EAC1D,CAAC;AAED,SAAO,UAAW,UAAU,UAAU,MAAM,KAAK;AACnD;AAEA,SAAS,UAAU,KAAK;AACtB,SAAO,MAAM,QAAQ,MAAM,IAAI,YAAY,EAAE,QAAQ,MAAM,EAAE;AAC/D;AAEA,IAAO,yBAAQ;;;ACtEf,mBAAkB;AASlB,aAAAI,QAAM,WAAW,IAAI,CAAC,MAAkB;AACtC,SAAO,KAAK,OAAO,cAAc,UAAU,WAAW,CAAC;AACzD;AAGA,aAAAA,QAAM,WAAW,IAAI,CAAC,MAAkB;AACtC,SAAO,KAAK,OAAO,cAAc,OAAO,WAAW,CAAC;AACtD;AAGA,aAAAA,QAAM,WAAW,IAAI,CAAC,MAAkB;AACtC,SAAO,KAAK,OAAO,cAAc,OAAO,WAAW,CAAC;AACtD;AAGA,aAAAA,QAAM,WAAW,IAAI,CAAC,MAAc;AAClC,SAAO,KAAK,OAAO,cAAc,EAAE,SAAQ;AAC7C;AAGA,aAAAA,QAAM,WAAW,IAAI,CAAC,MAAW;AAC/B,SAAO,KAAK,OAAO,cAAc,EAAE,SAAQ;AAC7C;AAGA,aAAAA,QAAM,WAAW,IAAI,CAAC,MAAU;AAC9B,SAAO,KAAK,OAAO,cAAc,EAAE,SAAQ;AAC7C;AASM,SAAU,OAAQC,OAAY;AAClC,SAAO,OAAO,WAAO,aAAAD,SAAMC,KAAI,GAAG;IAChC,WAAO,aAAAD,SAAM,GAAGC,aAAY;IAC5B,WAAO,aAAAD,SAAM,GAAGC,aAAY;GAC7B;AACH;;;AF3CA,kBAAiB;;;AGDjB,IAAAC,gBAAyB;AACzB,IAAO,wBAAQ,cAAAC;;;ACEf,IAAM,cAAuB,CAAC,GAAG,MAAM;AACvC,IAAM,SAAS,CAAC,KAAa,MAAc,OAAe,SAA6B;AAErF,MAAK,QAAQ,QAAS,KAAK,eAAe;AAAO,WAAO,SAAS,OAAO;AAExE,MAAI,WAAW;AACf,MAAI,eAAe,IAAI;AACvB,QAAMC,QAAO,MAAM,MAAM,SAAS;AAClC,MAAIA,MAAK,aAAa,OAAO;AAE3B,eAAW,SAAS,QAAQ,UAAU;AACtC,mBAAe,SAAS,SAAS,SAAS,OAAO,KAAK;;AAExD,SAAO,GAAG,cAAc,MAAM;AAChC;AAEA,IAAM,WAAoC;EACxC,KAAK;EACL,KAAK,CAAC,KAAK,SAAS,GAAG,UACrB,MAAM,WAAW,KAAK,MAAM,GAAG,aAAa,QACxC,UACA,IAAI;EAEV,KAAK,CAAC,KAAK,SAAS,GAAG,OAAO,SAC5B,MAAM,KAAK,OAAK,CAAC,QAAQ,SAAS,MAAM,KAAK,EAAE,SAAS,EAAE,QAAQ,CAAC,IAC/D,GAAG,OAAO,YACV,OAAO,KAAK,SAAS,OAAO,IAAI;EAEtC,KAAK,CAAC,KAAK,YAAY,SAAS,OAAO;EACvC,SAAS;EACT,MAAM;EACN,MAAM;EACN,MAAM,CAAC,KAAK,YAAY,GAAG,YAAY;EACvC,KAAK,CAAC,KAAK,YAAY,GAAG,WAAW;EACrC,MAAM,SAAO,UAAU;EACvB,OAAO,SAAO,WAAW;EACzB,IAAI,SAAO,QAAQ;EACnB,KAAK,SAAO,SAAS;EACrB,sBAAsB,SAAO,GAAG;EAChC,mBAAmB,SAAO,GAAG;EAC7B,qBAAqB,SAAO,GAAG;;AAQ3B,SAAU,eAAgB,OAAwC,MAAyB;AAC/F,QAAM,KAAK,UAAU,KAAK;AAC1B,QAAM,QAAQ,GAAG,SAAQ,EAAG,MAAM,GAAG,EAAE,MAAM,CAAC;AAC9C,SAAO,GACJ,OAAM,EACN,IAAI,WAAM;AA7Df,QAAAC,KAAA;AA6DmB;MACb,WAAUA,MAAA,MAAM,MAAK,MAAX,OAAAA,MAAiB;MAC3B,SAAU,MAAM,MAAM,QAAQ,WAAM,MAAK,MAAX,YAAiB,KAAK;;GACpD,EACD,OAAO,CAAC,KAAa,MAAY,GAAWC,WAAiB;AAC5D,UAAM,SAAS,SAAS,KAAK;AAC7B,QAAI,UAAU,MAAM;AAClB,YAAM,IAAI,MAAM,wBAAwB,KAAK,UAAU;;AAEzD,WAAO,OAAO,KAAK,KAAK,SAAS,GAAGA,QAAO,IAAI;EACjD,GAAG,EAAE;AACT;;;AC9DO,SAAS,YAAa,KAAK;AAChC,MAAI;AAEF,UAAM,eAAe,UAAU,GAAG,CAAC;AAAA,EACrC,SAA4B,KAA1B;AAAA,EAAiC;AAEnC,QAAM,IAAI,SAAS;AAEnB,SAAO;AACT;;;ACnBA,IAAO,wBAAQ,MAAM;AAAC;;;ANWtB,IAAM,MAAM,OAAO,oCAAoC;AACvD,IAAM,QAAQ,sBAAU,KAAK,EAAE,iBAAiB,KAAK,CAAC;AAEtD,IAAM,mBAAmB,wBAAa,yBAAc,SAAS,WAAW;AACxE,IAAM,eAAe,wBAAa,yBAAc,SAAS,WAAW;AACpE,IAAM,eAAe,wBAAa,yBAAc,SAAS,OAAO;AAYhE,IAAM,mBAAmB,CAACC,WAAU,CAAC,MAAM;AACzC,MAAI;AAEJ,MAAI,OAAO,CAAC;AACZ,MAAI;AAEJ,MAAI,OAAOA,aAAY,YAAY,YAAYA,QAAO,GAAG;AACvD,UAAM,IAAI,IAAI,YAAYA,QAAO,CAAC;AAAA,EACpC,WAAWA,oBAAmB,KAAK;AACjC,UAAMA;AAAA,EACR,WAAW,OAAOA,SAAQ,QAAQ,YAAY,YAAYA,SAAQ,GAAG,GAAG;AACtE,UAAM,IAAI,IAAI,YAAYA,SAAQ,GAAG,CAAC;AACtC,WAAOA;AAAA,EACT,WAAWA,SAAQ,eAAe,KAAK;AACrC,UAAMA,SAAQ;AACd,WAAOA;AAAA,EACT,OAAO;AACL,WAAOA,YAAW,CAAC;AAEnB,UAAM,YAAY,KAAK,YAAY,kBAAkB,QAAQ,KAAK,EAAE;AACpE,UAAM,QAAQ,KAAK,QAAQ,cAAc,MAAM,GAAG,EAAE;AACpD,UAAM,OAAQ,KAAK,QAAQ;AAE3B,UAAM,IAAI,IAAI,GAAG,cAAc,QAAQ,MAAM;AAAA,EAC/C;AAEA,MAAI,KAAK,SAAS;AAChB,QAAI,WAAW,KAAK;AAAA,EACtB,WAAW,IAAI,aAAa,OAAO,IAAI,aAAa,QAAW;AAC7D,QAAI,WAAW;AAAA,EACjB;AAEA,MAAI,mBAAQ;AACV,UAAM,QAAQ,sBAAS,GAAG;AAE1B,YAAQ,KAAK,SAAS,IAAI,MAAM;AAAA,MAC9B,WAAW;AAAA,MAEX,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AAEA,SAAO;AAAA,IACL,GAAG;AAAA,IACH,MAAM,IAAI;AAAA,IACV,UAAU,IAAI,SAAS,QAAQ,KAAK,EAAE;AAAA,IACtC,MAAM,OAAO,IAAI,IAAI;AAAA,IACrB,SAAS,IAAI;AAAA,IACb;AAAA,IACA;AAAA,EACF;AACF;AAKO,IAAM,eAAe,OAAO,aAAa;AAC9C,MAAI;AAEJ,MAAI;AACF,SAAK,SAAS,QAAQ,IAAI,cAAc,KAAK,IAAI,WAAW,kBAAkB,GAAG;AAC/E,YAAM,OAAO,MAAM,SAAS,KAAK;AACjC,UAAI,IAAI;AACR,YAAM,KAAK,WAAW,KAAK;AAAA,IAC7B,OAAO;AACL,YAAM,MAAM,SAAS,KAAK;AAAA,IAC5B;AAAA,EACF,SAA4B,KAA1B;AACA,QAAI,kCAAkC,GAAG;AAEzC,UAAM,IAAI;AAAA,EACZ;AAGA,MAAI,QAAQ,IAAI,YAAAC,QAAK,UAAU,QAAQ;AAEvC,MAAI,KAAK;AAEP,QAAI,IAAI,SAAS,sBAAsB,GAAG;AACxC,cAAQ,IAAI,YAAAA,QAAK,aAAa;AAAA,IAChC;AAGA,QAAI,OAAO,IAAI,SAAS,2BAA2B,GAAG;AACpD,cAAQ,IAAI,YAAAA,QAAK,aAAa;AAAA,IAChC;AAAA,EACF;AAGA,MAAI,OAAO,IAAI,SAAS,mBAAmB,GAAG;AAC5C,YAAQ,IAAI,YAAAA,QAAK,aAAa;AAAA,EAChC;AAGA,MAAI,KAAK;AACP,UAAM,UAAU;AAAA,EAClB;AAEA,QAAM;AACR;AAEA,IAAM,cAAc;AAKpB,IAAM,YAAY,CAAC,QAAQ;AACzB,SAAO,IAAI,QAAQ,aAAa,SAAU,OAAO;AAC/C,WAAO,MAAM,MAAM,YAAY;AAAA,EACjC,CAAC;AACH;AAKA,IAAM,eAAe,CAAC,UAAU;AAC9B,SAAO,OAAO,UAAU,WAAW,uBAAc,KAAK,IAAI;AAC5D;AAEO,IAAM,SAAN,cAAqB,YAAAA,QAAK;AAAA,EAI/B,YAAaD,WAAU,CAAC,GAAG;AACzB,UAAM,OAAO,iBAAiBA,QAAO;AAErC,UAAM;AAAA,MACJ,SAAS,aAAa,KAAK,WAAW,CAAC,KAAK;AAAA,MAC5C,SAAS,KAAK;AAAA,MACd,MAAM,GAAG,KAAK;AAAA,MACd,aAAa;AAAA,MACb,uBAAuB,CAAC,WAAW;AACjC,cAAM,MAAM,IAAI,gBAAgB;AAEhC,mBAAW,CAAC,KAAK,KAAK,KAAK,QAAQ;AACjC,cACE,UAAU,eACV,UAAU,UACV,QAAQ,UACR;AACA,gBAAI,OAAO,UAAU,GAAG,GAAG,KAAK;AAAA,UAClC;AAGA,cAAI,QAAQ,aAAa,CAAC,MAAM,KAAK,GAAG;AACtC,gBAAI,OAAO,UAAU,GAAG,GAAG,KAAK;AAAA,UAClC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,OAAO,KAAK;AAAA,IACd,CAAC;AAGD,WAAO,KAAK;AAEZ,WAAO,KAAK;AAEZ,WAAO,KAAK;AAEZ,WAAO,KAAK;AAEZ,UAAM,QAAQ,KAAK;AAMnB,SAAK,QAAQ,CAAC,UAAUA,WAAU,CAAC,MAAM;AACvC,UAAI,OAAO,aAAa,YAAY,CAAC,SAAS,WAAW,GAAG,GAAG;AAC7D,mBAAW,GAAG,KAAK,OAAO;AAAA,MAC5B;AAEA,aAAO,MAAM,KAAK,MAAM,UAAU,MAAMA,UAAS;AAAA,QAC/C,QAAQ;AAAA,MACV,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;AACF;AAEO,IAAM,YAAY,YAAAC,QAAK;;;AO1LvB,IAAM,YAAY,CAAC,OAAO;AAC/B,SAAO,CAACC,aAAY;AAClB,WAAO,GAAG,IAAI,OAAOA,QAAO,GAAGA,QAAO;AAAA,EACxC;AACF;;;ACzBO,SAAS,aAAc,MAAM;AAClC,MAAI,QAAQ,MAAM;AAChB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AAEA,SAAO,KAAK,SAAS,CAAC,EAAE,SAAS,GAAG,GAAG;AACzC;;;ACdA,IAAAC,mBAAoB;AAKb,SAAS,WAAY,OAAO;AACjC,MAAI,SAAS,MAAM;AACjB,WAAO;AAAA,EACT;AAGA,MAAI;AAGJ,MAAI,MAAM,QAAQ,MAAM;AACtB,YAAQ;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf;AAAA,EACF;AAGA,MAAI,MAAM,WAAW,MAAM;AACzB,YAAQ;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf;AAAA,EACF;AAGA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,YAAQ;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf;AAAA,EACF;AAGA,MAAI,iBAAiB,MAAM;AACzB,UAAM,KAAK,MAAM,QAAQ;AACzB,UAAM,OAAO,KAAK,MAAM,KAAK,GAAI;AAEjC,YAAQ;AAAA,MACN;AAAA,MACA,QAAQ,KAAM,OAAO,OAAS;AAAA,IAChC;AAAA,EACF;AAiBA,MAAI,CAAC,OAAO,UAAU,eAAe,KAAK,OAAO,MAAM,GAAG;AACxD,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,QAAQ,MAAM,SAAS,SAAS,MAAM,QAAQ,KAAK,MAAM,QAAQ,YAAY;AACxF,cAAM,iBAAAC,SAAQ,IAAI,MAAM,oDAAoD,GAAG,yBAAyB;AAAA,EAC1G;AAEA,SAAO;AACT;;;ACjEO,SAAS,kBAAmB,EAAE,KAAK,cAAc,SAAS,OAAO,SAASC,SAAQ,IAAI,CAAC,GAAG;AAC/F,MAAI,cAAc;AAChB,IAAAA,WAAU;AAAA,MACR,GAAGA;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AAEA,MAAI,SAAS;AACX,IAAAA,SAAQ,OAAO;AAAA,EACjB;AAEA,MAAI,SAAS,MAAM;AACjB,YAAQ,WAAW,KAAK;AAExB,IAAAA,SAAQ,QAAQ,MAAM;AACtB,IAAAA,SAAQ,aAAa,MAAM;AAAA,EAC7B;AAEA,MAAI,QAAQ,MAAM;AAChB,IAAAA,SAAQ,OAAO,aAAa,IAAI;AAAA,EAClC;AAEA,MAAIA,SAAQ,WAAW,CAAC,MAAMA,SAAQ,OAAO,GAAG;AAE9C,IAAAA,SAAQ,UAAU,GAAGA,SAAQ;AAAA,EAC/B;AAEA,MAAI,QAAQ,UAAa,QAAQ,MAAM;AACrC,UAAM,CAAC;AAAA,EACT,WAAW,CAAC,MAAM,QAAQ,GAAG,GAAG;AAC9B,UAAM,CAAC,GAAG;AAAA,EACZ;AAEA,QAAM,kBAAkB,IAAI,gBAAgBA,QAAO;AAEnD,MAAI,QAAQ,CAAoBC,SAAQ,gBAAgB,OAAO,OAAOA,IAAG,CAAC;AAE1E,SAAO;AACT;;;ACrCO,IAAM,iBAAiB,UAAU,SAAO;AAI7C,iBAAe,SAAUC,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,OAAO,MAAM,IAAI,KAAK,oBAAoB;AAAA,MACpD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC,GAAG,KAAK;AAET,YAAQ,IAAI,QAAQ,CAAC,GAAG,IAAI,CAAgC,MAAM,IAAI,MAAM,EAAE,IAAI,CAAC;AAAA,EACrF;AACA,SAAO;AACT,CAAC;;;ACdM,IAAM,wBAAwB,UAAU,SAAO;AAIpD,iBAAe,gBAAiB,QAAQC,WAAU,CAAC,GAAG;AACpD,UAAM,MAAM,OAAO,MAAM,IAAI,KAAK,oBAAoB;AAAA,MACpD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,GAAGA;AAAA,QACH,MAAM,OAAO,SAAS;AAAA,MACxB,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC,GAAG,KAAK;AAET,YAAQ,IAAI,QAAQ,CAAC,GAAG,IAAI,CAAgC,MAAM,IAAI,MAAM,EAAE,IAAI,CAAC;AAAA,EACrF;AACA,SAAO;AACT,CAAC;;;ACnBD,IAAAC,mBAAoB;;;ACyBb,IAAMC,UAAS,OAAO,IAAI,iBAAiB;;;ADnBlD,IAAM,cAAc,OACjB,OAAO,KAAK,EACZ,IAAI,WAAS,MAAM,OAAO,EAE1B,OAAO,CAAC,KAAK,SAAS,IAAI,GAAG,IAAI,GAAG,MAAM,SAAS,OAAO;AAG7D,IAAM,kBAAkB;AAExB,IAAM,wCAAwC;AAC9C,IAAM,yCAAyC;AAwB/C,IAAM,aAAN,MAAgB;EAOd,YAAa,MAAgB;AAC3B,SAAK,OAAO,KAAK;AACjB,SAAK,YAAY,KAAK;AACtB,SAAK,aAAa,KAAK;AAGvB,WAAO,eAAe,MAAM,UAAU;MACpC,YAAY;MACZ,UAAU;KACX;EACH;EAEA,KAAK,OAAO,eAAY;AACtB,WAAO,UAAU,KAAK,SAAQ;EAChC;EAEA,KAAKC,WAAO;AACV,WAAO;EACT;EAEA,WAAQ;AACN,QAAI,KAAK,UAAU,MAAM;AACvB,WAAK,SAAS,UAAU,OAAO,KAAK,UAAU,KAAK,EAAE,MAAM,CAAC;;AAG9D,WAAO,KAAK;EACd;EAIA,QAAK;AACH,WAAO,IAAI,SAAS,iBAAiB,KAAK,SAAS;EACrD;EAEA,UAAO;AACL,WAAO,KAAK,UAAU;EACxB;EAKA,SAAM;AACJ,WAAO,KAAK,SAAQ;EACtB;EAKA,OAAQ,IAAgC;AAtG1C,QAAAC;AAuGI,QAAI,cAAc,YAAY;AAC5B,aAAOC,QAAiB,KAAK,UAAU,OAAO,EAAE;eACvC,OAAO,OAAO,UAAU;AACjC,aAAO,iBAAiB,EAAE,EAAE,OAAO,IAAc;iBACxCD,MAAA,yBAAI,cAAJ,gBAAAA,IAAe,UAAS,MAAM;AACvC,aAAOC,QAAiB,KAAK,UAAU,OAAO,GAAG,UAAU,KAAK;WAC3D;AACL,YAAM,IAAI,MAAM,cAAc;;EAElC;;AAGF,IAAM,gBAAN,cAA4B,WAAU;EAIpC,YAAa,MAAmB;AAC9B,UAAM,EAAE,GAAG,MAAM,MAAM,MAAK,CAAE;AAJhB,SAAA,OAAO;AAMrB,SAAK,YAAY,KAAK;EACxB;;AAGF,IAAM,oBAAN,cAAgC,WAAU;EAIxC,YAAa,MAAuB;AAClC,UAAM,EAAE,GAAG,MAAM,MAAM,UAAS,CAAE;AAJpB,SAAA,OAAO;AAMrB,SAAK,YAAY,KAAK,UAAU;EAClC;;AAGF,IAAM,sBAAN,cAAkC,WAAU;EAI1C,YAAa,MAAyB;AACpC,UAAM,EAAE,GAAG,MAAM,MAAM,YAAW,CAAE;AAJtB,SAAA,OAAO;AAMrB,SAAK,YAAY,KAAK,UAAU;EAClC;;AAuBI,SAAU,iBAAkB,KAAa,SAA+B;AAC5E,YAAU,4BAAW;AAErB,MAAI,IAAI,OAAO,CAAC,MAAM,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK;AAGlD,UAAM,YAAmBC,QAAO,UAAU,OAAO,IAAI,KAAK,CAAC;AAE3D,QAAI,IAAI,WAAW,KAAK,GAAG;AACzB,aAAO,IAAI,kBAAkB,EAAE,UAAS,CAAE;eACjC,IAAI,WAAW,KAAK,GAAG;AAChC,aAAO,IAAI,oBAAoB,EAAE,UAAS,CAAE;WACvC;AACL,aAAO,IAAI,cAAc,EAAE,UAAS,CAAE;;;AAI1C,SAAO,gBAAgB,YAAY,OAAO,GAAG,CAAC;AAChD;AAEM,SAAU,gBAAiBC,MAAe;AAC9C,MAAI;AACF,UAAM,YAAmBD,QAAOC,IAAG;AAEnC,QAAI,UAAU,SAAS,SAAS,MAAM;AACpC,UAAI,UAAU,OAAO,WAAW,uCAAuC;AACrE,eAAO,IAAI,kBAAkB,EAAE,UAAS,CAAE;iBACjC,UAAU,OAAO,WAAW,wCAAwC;AAC7E,eAAO,IAAI,oBAAoB,EAAE,UAAS,CAAE;;;AAIhD,QAAI,UAAU,SAAS,OAAO,MAAM;AAClC,aAAO,IAAI,cAAc,EAAE,UAAS,CAAE;;UAExC;AACA,WAAO,cAAc,IAAI,OAAOA,IAAG,CAAC;;AAGtC,QAAM,IAAI,MAAM,gCAAgC;AAClD;AAEM,SAAU,cAAe,KAAQ;AACrC,MAAI,OAAO,QAAQ,IAAI,aAAa,QAAQ,IAAI,WAAW,QAAS,IAAI,YAAY,KAAK,IAAI,SAAS,iBAAkB;AACtH,UAAM,IAAI,MAAM,gCAAgC;;AAGlD,QAAM,YAAY,IAAI;AAEtB,MAAI,UAAU,SAAS,OAAO,MAAM;AAClC,WAAO,IAAI,cAAc,EAAE,WAAW,IAAI,UAAS,CAAE;aAC5C,UAAU,SAAS,SAAS,MAAM;AAC3C,QAAI,UAAU,OAAO,WAAW,uCAAuC;AACrE,aAAO,IAAI,kBAAkB,EAAE,WAAW,IAAI,UAAS,CAAE;eAChD,UAAU,OAAO,WAAW,wCAAwC;AAC7E,aAAO,IAAI,oBAAoB,EAAE,WAAW,IAAI,UAAS,CAAE;;;AAI/D,QAAM,IAAI,MAAM,gCAAgC;AAClD;;;AE1NO,IAAM,aAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,cAAc,kBAAkBA,QAAO;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,gBAAgB,MAAM,IAAI,KAAK,CAAC;AAAA,EACzC;AACA,SAAO;AACT,CAAC;AAKD,SAAS,gBAAiB,KAAK;AAC7B,SAAO;AAAA,IACL,eAAe,IAAI;AAAA,IACnB,WAAW,IAAI,YAAY,CAAC,GAAG,IAAI,CAAgC,MAAM,IAAI,MAAM,EAAE,IAAI,CAAC;AAAA,IAC1F,QAAQ,IAAI,SAAS,CAAC,GAAG,IAAI,CAAuB,QAAQ,iBAAiB,GAAG,CAAC;AAAA,IACjF,gBAAgB,OAAO,IAAI,cAAc;AAAA,IACzC,cAAc,OAAO,IAAI,YAAY;AAAA,IACrC,YAAY,OAAO,IAAI,UAAU;AAAA,IACjC,UAAU,OAAO,IAAI,QAAQ;AAAA,IAC7B,iBAAiB,OAAO,IAAI,eAAe;AAAA,IAC3C,iBAAiB,OAAO,IAAI,eAAe;AAAA,EAC7C;AACF;;;ACjCO,IAAM,eAAe,UAAU,SAAO;AAI3C,iBAAe,OAAQ,KAAKC,WAAU,CAAC,GAAG;AACxC,UAAM,MAAM,MAAM,IAAI,KAAK,kBAAkB;AAAA,MAC3C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,IAAI,SAAS;AAAA,QAClB,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,IAAI,KAAK;AAAA,EAClB;AACA,SAAO;AACT,CAAC;;;ACjBM,SAAS,cAAe,QAAQ;AACrC,SAAO;AAAA,IACL,UAAU,eAAe,MAAM;AAAA,IAC/B,iBAAiB,sBAAsB,MAAM;AAAA,IAC7C,QAAQ,aAAa,MAAM;AAAA,IAC3B,MAAM,WAAW,MAAM;AAAA,EACzB;AACF;;;ACPO,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,IAAK,KAAKC,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,MAAM,IAAI,KAAK,aAAa;AAAA,MACtC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,IAAI,SAAS;AAAA,QAClB,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,IAAI,WAAW,MAAM,IAAI,YAAY,CAAC;AAAA,EAC/C;AACA,SAAO;AACT,CAAC;;;ACzBD,IAAAC,mBAAoB;AACpB,yBAAuB;AACvB,0CAA8B;AAC9B,oBAAgB;;;ACCT,SAAS,QAAS,KAAK;AAC5B,SAAO,YAAY,OAAO,GAAG,KAAK,eAAe;AACnD;AAMO,SAAS,OAAQ,KAAK;AAC3B,SAAO,IAAI,gBACR,IAAI,YAAY,SAAS,UAAU,IAAI,YAAY,SAAS,WAC7D,OAAO,IAAI,WAAW;AAC1B;AAQO,SAAS,aAAc,KAAK;AACjC,SAAO,OAAO,QAAQ,aAAa,IAAI,QAAQ,IAAI;AACrD;AAMO,IAAM,mBAAmB,CAAC,UAC/B,SAAS,OAAO,MAAM,cAAc;;;ADpBtC,eAAsB,iBAAkB,OAAO;AAE7C,MAAI,QAAQ,KAAK,GAAG;AAClB,WAAO,IAAI,KAAK,CAAC,KAAK,CAAC;AAAA,EACzB;AAGA,MAAI,OAAO,UAAU,YAAY,iBAAiB,QAAQ;AACxD,WAAO,IAAI,KAAK,CAAC,MAAM,SAAS,CAAC,CAAC;AAAA,EACpC;AAGA,MAAI,OAAO,KAAK,GAAG;AACjB,WAAO;AAAA,EACT;AAGA,MAAI,iBAAiB,KAAK,GAAG;AAC3B,gBAAQ,oCAAAC,SAAkB,KAAK;AAAA,EACjC;AAGA,MAAI,OAAO,YAAY,SAAS,OAAO,iBAAiB,OAAO;AAE7D,UAAM,eAAW,mBAAAC,SAAW,KAAK;AAGjC,UAAM,EAAE,OAAO,KAAK,IAAI,MAAM,SAAS,KAAK;AAE5C,QAAI,MAAM;AAER,aAAO,SAAS,QAAQ;AAAA,IAC1B;AAEA,aAAS,KAAK,KAAK;AAGnB,QAAI,OAAO,UAAU,KAAK,GAAG;AAC3B,aAAO,IAAI,KAAK,CAAC,WAAW,KAAK,UAAM,cAAAC,SAAI,QAAQ,CAAC,CAAC,CAAC;AAAA,IACxD;AAGA,QAAI,QAAQ,KAAK,KAAK,OAAO,UAAU,YAAY,iBAAiB,QAAQ;AAC1E,aAAO,SAAS,QAAQ;AAAA,IAC1B;AAAA,EACF;AAEA,YAAM,iBAAAC,SAAQ,IAAI,MAAM,qBAAqB,OAAO,GAAG,sBAAsB;AAC/E;AAKA,eAAe,SAAU,QAAQ;AAC/B,QAAM,QAAQ,CAAC;AAEf,mBAAiB,SAAS,QAAQ;AAChC,UAAM,KAAK,KAAK;AAAA,EAClB;AAEA,SAAO,IAAI,KAAK,KAAK;AACvB;;;AE1EA,IAAAC,mBAAoB;AACpB,IAAAC,uCAA8B;AAC9B,IAAAC,sBAAuB;AACvB,oBAAgB;;;ACHhB,IAAAC,mBAAoB;;;ACCpB,qBAAsB;AAGtB,IAAM,UAAU,eAAAC,QAAU;AAA1B,IAAkC,UAAU,eAAAA,QAAU;AAAtD,IAA8D,QAAQ,eAAAA,QAAU;AAGhF,IAAM,QAAQ,eAAAA,QAAU,MAAM,mBAAmB,eAAAA,QAAU,MAAM,iBAAiB,CAAC;AAE5E,IAAM,OAAO,MAAM,QAAQ,MAAM;AAwBpC,WAASC,MAAK,GAAG;AACb,SAAK,aAAa,CAAC;AACnB,QAAI;AACA,eAAS,KAAK,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE;AAClD,YAAI,EAAE,GAAG,OAAO;AACZ,eAAK,GAAG,MAAM,EAAE,GAAG;AAAA;AAAA,EACnC;AAQA,EAAAA,MAAK,UAAU,OAAO;AAQtB,EAAAA,MAAK,UAAU,OAAO,MAAM,UAAU,CAAC,CAAC;AAQxC,EAAAA,MAAK,UAAU,WAAW,MAAM,OAAO,MAAM,KAAK,SAAS,GAAE,GAAE,IAAI,IAAI;AAQvE,EAAAA,MAAK,UAAU,aAAa,MAAM;AAQlC,EAAAA,MAAK,UAAU,WAAW,MAAM,OAAO,MAAM,KAAK,SAAS,GAAE,GAAE,IAAI,IAAI;AAQvE,EAAAA,MAAK,UAAU,SAAS,MAAM,OAAO,MAAM,KAAK,SAAS,GAAE,GAAE,IAAI,IAAI;AAQrE,EAAAA,MAAK,UAAU,OAAO;AAQtB,EAAAA,MAAK,UAAU,QAAQ;AAWvB,EAAAA,MAAK,SAAS,SAASC,SAAO,GAAG,GAAG;AAChC,QAAI,CAAC;AACD,UAAI,QAAQ,OAAO;AACvB,MAAE,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI;AACxB,QAAI,EAAE,QAAQ,QAAQ,OAAO,eAAe,KAAK,GAAG,MAAM;AACtD,QAAE,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI;AAC7B,QAAI,EAAE,YAAY,QAAQ,OAAO,eAAe,KAAK,GAAG,UAAU;AAC9D,QAAE,OAAO,EAAE,EAAE,OAAO,EAAE,QAAQ;AAClC,QAAI,EAAE,cAAc,QAAQ,EAAE,WAAW,QAAQ;AAC7C,eAAS,IAAI,GAAG,IAAI,EAAE,WAAW,QAAQ,EAAE;AACvC,UAAE,OAAO,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE;AAAA,IAC3C;AACA,QAAI,EAAE,YAAY,QAAQ,OAAO,eAAe,KAAK,GAAG,UAAU;AAC9D,QAAE,OAAO,EAAE,EAAE,OAAO,EAAE,QAAQ;AAClC,QAAI,EAAE,UAAU,QAAQ,OAAO,eAAe,KAAK,GAAG,QAAQ;AAC1D,QAAE,OAAO,EAAE,EAAE,OAAO,EAAE,MAAM;AAChC,QAAI,EAAE,QAAQ,QAAQ,OAAO,eAAe,KAAK,GAAG,MAAM;AACtD,QAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI;AAC9B,QAAI,EAAE,SAAS,QAAQ,OAAO,eAAe,KAAK,GAAG,OAAO;AACxD,YAAM,SAAS,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,KAAK,CAAC,EAAE,OAAO;AAC/D,WAAO;AAAA,EACX;AAaA,EAAAD,MAAK,SAAS,SAASE,SAAO,GAAG,GAAG;AAChC,QAAI,EAAE,aAAa;AACf,UAAI,QAAQ,OAAO,CAAC;AACxB,QAAI,IAAI,MAAM,SAAY,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,IAAI,MAAM,KAAK;AAChE,WAAO,EAAE,MAAM,GAAG;AACd,UAAI,IAAI,EAAE,OAAO;AACjB,cAAQ,MAAM;AAAA,aACT;AACD,YAAE,OAAO,EAAE,MAAM;AACjB;AAAA,aACC;AACD,YAAE,OAAO,EAAE,MAAM;AACjB;AAAA,aACC;AACD,YAAE,WAAW,EAAE,OAAO;AACtB;AAAA,aACC;AACD,cAAI,EAAE,EAAE,cAAc,EAAE,WAAW;AAC/B,cAAE,aAAa,CAAC;AACpB,eAAK,IAAI,OAAO,GAAG;AACf,gBAAI,KAAK,EAAE,OAAO,IAAI,EAAE;AACxB,mBAAO,EAAE,MAAM;AACX,gBAAE,WAAW,KAAK,EAAE,OAAO,CAAC;AAAA,UACpC;AACI,cAAE,WAAW,KAAK,EAAE,OAAO,CAAC;AAChC;AAAA,aACC;AACD,YAAE,WAAW,EAAE,OAAO;AACtB;AAAA,aACC;AACD,YAAE,SAAS,EAAE,OAAO;AACpB;AAAA,aACC;AACD,YAAE,OAAO,EAAE,OAAO;AAClB;AAAA,aACC;AACD,YAAE,QAAQ,MAAM,SAAS,OAAO,GAAG,EAAE,OAAO,CAAC;AAC7C;AAAA;AAEA,YAAE,SAAS,IAAI,CAAC;AAChB;AAAA;AAAA,IAER;AACA,QAAI,CAAC,EAAE,eAAe,MAAM;AACxB,YAAM,MAAM,cAAc,2BAA2B,EAAE,UAAU,EAAE,CAAC;AACxE,WAAO;AAAA,EACX;AAUA,EAAAF,MAAK,aAAa,SAAS,WAAW,GAAG;AACrC,QAAI,aAAa,MAAM;AACnB,aAAO;AACX,QAAI,IAAI,IAAI,MAAM,KAAK;AACvB,YAAQ,EAAE;AAAA,WACL;AAAA,WACA;AACD,UAAE,OAAO;AACT;AAAA,WACC;AAAA,WACA;AACD,UAAE,OAAO;AACT;AAAA,WACC;AAAA,WACA;AACD,UAAE,OAAO;AACT;AAAA,WACC;AAAA,WACA;AACD,UAAE,OAAO;AACT;AAAA,WACC;AAAA,WACA;AACD,UAAE,OAAO;AACT;AAAA,WACC;AAAA,WACA;AACD,UAAE,OAAO;AACT;AAAA;AAEJ,QAAI,EAAE,QAAQ,MAAM;AAChB,UAAI,OAAO,EAAE,SAAS;AAClB,cAAM,OAAO,OAAO,EAAE,MAAM,EAAE,OAAO,MAAM,UAAU,MAAM,OAAO,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC;AAAA,eAC/E,EAAE,KAAK;AACZ,UAAE,OAAO,EAAE;AAAA,IACnB;AACA,QAAI,EAAE,YAAY,MAAM;AACpB,UAAI,MAAM;AACN,SAAC,EAAE,WAAW,MAAM,KAAK,UAAU,EAAE,QAAQ,GAAG,WAAW;AAAA,eACtD,OAAO,EAAE,aAAa;AAC3B,UAAE,WAAW,SAAS,EAAE,UAAU,EAAE;AAAA,eAC/B,OAAO,EAAE,aAAa;AAC3B,UAAE,WAAW,EAAE;AAAA,eACV,OAAO,EAAE,aAAa;AAC3B,UAAE,WAAW,IAAI,MAAM,SAAS,EAAE,SAAS,QAAQ,GAAG,EAAE,SAAS,SAAS,CAAC,EAAE,SAAS,IAAI;AAAA,IAClG;AACA,QAAI,EAAE,YAAY;AACd,UAAI,CAAC,MAAM,QAAQ,EAAE,UAAU;AAC3B,cAAM,UAAU,kCAAkC;AACtD,QAAE,aAAa,CAAC;AAChB,eAAS,IAAI,GAAG,IAAI,EAAE,WAAW,QAAQ,EAAE,GAAG;AAC1C,YAAI,MAAM;AACN,WAAC,EAAE,WAAW,KAAK,MAAM,KAAK,UAAU,EAAE,WAAW,EAAE,GAAG,WAAW;AAAA,iBAChE,OAAO,EAAE,WAAW,OAAO;AAChC,YAAE,WAAW,KAAK,SAAS,EAAE,WAAW,IAAI,EAAE;AAAA,iBACzC,OAAO,EAAE,WAAW,OAAO;AAChC,YAAE,WAAW,KAAK,EAAE,WAAW;AAAA,iBAC1B,OAAO,EAAE,WAAW,OAAO;AAChC,YAAE,WAAW,KAAK,IAAI,MAAM,SAAS,EAAE,WAAW,GAAG,QAAQ,GAAG,EAAE,WAAW,GAAG,SAAS,CAAC,EAAE,SAAS,IAAI;AAAA,MACjH;AAAA,IACJ;AACA,QAAI,EAAE,YAAY,MAAM;AACpB,UAAI,MAAM;AACN,SAAC,EAAE,WAAW,MAAM,KAAK,UAAU,EAAE,QAAQ,GAAG,WAAW;AAAA,eACtD,OAAO,EAAE,aAAa;AAC3B,UAAE,WAAW,SAAS,EAAE,UAAU,EAAE;AAAA,eAC/B,OAAO,EAAE,aAAa;AAC3B,UAAE,WAAW,EAAE;AAAA,eACV,OAAO,EAAE,aAAa;AAC3B,UAAE,WAAW,IAAI,MAAM,SAAS,EAAE,SAAS,QAAQ,GAAG,EAAE,SAAS,SAAS,CAAC,EAAE,SAAS,IAAI;AAAA,IAClG;AACA,QAAI,EAAE,UAAU,MAAM;AAClB,UAAI,MAAM;AACN,SAAC,EAAE,SAAS,MAAM,KAAK,UAAU,EAAE,MAAM,GAAG,WAAW;AAAA,eAClD,OAAO,EAAE,WAAW;AACzB,UAAE,SAAS,SAAS,EAAE,QAAQ,EAAE;AAAA,eAC3B,OAAO,EAAE,WAAW;AACzB,UAAE,SAAS,EAAE;AAAA,eACR,OAAO,EAAE,WAAW;AACzB,UAAE,SAAS,IAAI,MAAM,SAAS,EAAE,OAAO,QAAQ,GAAG,EAAE,OAAO,SAAS,CAAC,EAAE,SAAS,IAAI;AAAA,IAC5F;AACA,QAAI,EAAE,QAAQ,MAAM;AAChB,QAAE,OAAO,EAAE,SAAS;AAAA,IACxB;AACA,QAAI,EAAE,SAAS,MAAM;AACjB,UAAI,OAAO,EAAE,UAAU;AACnB,cAAM,UAAU,8BAA8B;AAClD,QAAE,QAAQ,MAAM,SAAS,WAAW,EAAE,KAAK;AAAA,IAC/C;AACA,WAAO;AAAA,EACX;AAWA,EAAAA,MAAK,WAAW,SAAS,SAAS,GAAG,GAAG;AACpC,QAAI,CAAC;AACD,UAAI,CAAC;AACT,QAAI,IAAI,CAAC;AACT,QAAI,EAAE,UAAU,EAAE,UAAU;AACxB,QAAE,aAAa,CAAC;AAAA,IACpB;AACA,QAAI,EAAE,UAAU;AACZ,QAAE,OAAO,EAAE,UAAU,SAAS,QAAQ;AACtC,UAAI,EAAE,UAAU;AACZ,UAAE,OAAO;AAAA,WACR;AACD,UAAE,OAAO,CAAC;AACV,YAAI,EAAE,UAAU;AACZ,YAAE,OAAO,MAAM,UAAU,EAAE,IAAI;AAAA,MACvC;AACA,UAAI,MAAM,MAAM;AACZ,YAAI,IAAI,IAAI,MAAM,KAAK,GAAG,GAAG,IAAI;AACjC,UAAE,WAAW,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI;AAAA,MACzF;AACI,UAAE,WAAW,EAAE,UAAU,SAAS,MAAM;AAC5C,UAAI,MAAM,MAAM;AACZ,YAAI,IAAI,IAAI,MAAM,KAAK,GAAG,GAAG,IAAI;AACjC,UAAE,WAAW,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI;AAAA,MACzF;AACI,UAAE,WAAW,EAAE,UAAU,SAAS,MAAM;AAC5C,UAAI,MAAM,MAAM;AACZ,YAAI,IAAI,IAAI,MAAM,KAAK,GAAG,GAAG,IAAI;AACjC,UAAE,SAAS,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI;AAAA,MACvF;AACI,UAAE,SAAS,EAAE,UAAU,SAAS,MAAM;AAC1C,QAAE,OAAO;AACT,QAAE,QAAQ;AAAA,IACd;AACA,QAAI,EAAE,QAAQ,QAAQ,EAAE,eAAe,MAAM,GAAG;AAC5C,QAAE,OAAO,EAAE,UAAU,SAAS,MAAM,KAAK,SAAS,EAAE,QAAQ,EAAE;AAAA,IAClE;AACA,QAAI,EAAE,QAAQ,QAAQ,EAAE,eAAe,MAAM,GAAG;AAC5C,QAAE,OAAO,EAAE,UAAU,SAAS,MAAM,OAAO,OAAO,EAAE,MAAM,GAAG,EAAE,KAAK,MAAM,IAAI,EAAE,UAAU,QAAQ,MAAM,UAAU,MAAM,KAAK,EAAE,IAAI,IAAI,EAAE;AAAA,IAC7I;AACA,QAAI,EAAE,YAAY,QAAQ,EAAE,eAAe,UAAU,GAAG;AACpD,UAAI,OAAO,EAAE,aAAa;AACtB,UAAE,WAAW,EAAE,UAAU,SAAS,OAAO,EAAE,QAAQ,IAAI,EAAE;AAAA;AAEzD,UAAE,WAAW,EAAE,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS,KAAK,EAAE,QAAQ,IAAI,EAAE,UAAU,SAAS,IAAI,MAAM,SAAS,EAAE,SAAS,QAAQ,GAAG,EAAE,SAAS,SAAS,CAAC,EAAE,SAAS,IAAI,IAAI,EAAE;AAAA,IACnM;AACA,QAAI,EAAE,cAAc,EAAE,WAAW,QAAQ;AACrC,QAAE,aAAa,CAAC;AAChB,eAAS,IAAI,GAAG,IAAI,EAAE,WAAW,QAAQ,EAAE,GAAG;AAC1C,YAAI,OAAO,EAAE,WAAW,OAAO;AAC3B,YAAE,WAAW,KAAK,EAAE,UAAU,SAAS,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW;AAAA;AAE9E,YAAE,WAAW,KAAK,EAAE,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,SAAS,IAAI,MAAM,SAAS,EAAE,WAAW,GAAG,QAAQ,GAAG,EAAE,WAAW,GAAG,SAAS,CAAC,EAAE,SAAS,IAAI,IAAI,EAAE,WAAW;AAAA,MAClO;AAAA,IACJ;AACA,QAAI,EAAE,YAAY,QAAQ,EAAE,eAAe,UAAU,GAAG;AACpD,UAAI,OAAO,EAAE,aAAa;AACtB,UAAE,WAAW,EAAE,UAAU,SAAS,OAAO,EAAE,QAAQ,IAAI,EAAE;AAAA;AAEzD,UAAE,WAAW,EAAE,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS,KAAK,EAAE,QAAQ,IAAI,EAAE,UAAU,SAAS,IAAI,MAAM,SAAS,EAAE,SAAS,QAAQ,GAAG,EAAE,SAAS,SAAS,CAAC,EAAE,SAAS,IAAI,IAAI,EAAE;AAAA,IACnM;AACA,QAAI,EAAE,UAAU,QAAQ,EAAE,eAAe,QAAQ,GAAG;AAChD,UAAI,OAAO,EAAE,WAAW;AACpB,UAAE,SAAS,EAAE,UAAU,SAAS,OAAO,EAAE,MAAM,IAAI,EAAE;AAAA;AAErD,UAAE,SAAS,EAAE,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS,KAAK,EAAE,MAAM,IAAI,EAAE,UAAU,SAAS,IAAI,MAAM,SAAS,EAAE,OAAO,QAAQ,GAAG,EAAE,OAAO,SAAS,CAAC,EAAE,SAAS,IAAI,IAAI,EAAE;AAAA,IAC3L;AACA,QAAI,EAAE,QAAQ,QAAQ,EAAE,eAAe,MAAM,GAAG;AAC5C,QAAE,OAAO,EAAE;AAAA,IACf;AACA,QAAI,EAAE,SAAS,QAAQ,EAAE,eAAe,OAAO,GAAG;AAC9C,QAAE,QAAQ,MAAM,SAAS,SAAS,EAAE,OAAO,CAAC;AAAA,IAChD;AACA,WAAO;AAAA,EACX;AASA,EAAAA,MAAK,UAAU,SAAS,SAAS,SAAS;AACtC,WAAO,KAAK,YAAY,SAAS,MAAM,eAAAD,QAAU,KAAK,aAAa;AAAA,EACvE;AAaA,EAAAC,MAAK,WAAY,WAAW;AACxB,UAAM,aAAa,CAAC,GAAG,SAAS,OAAO,OAAO,UAAU;AACxD,WAAO,WAAW,KAAK,SAAS;AAChC,WAAO,WAAW,KAAK,eAAe;AACtC,WAAO,WAAW,KAAK,UAAU;AACjC,WAAO,WAAW,KAAK,cAAc;AACrC,WAAO,WAAW,KAAK,aAAa;AACpC,WAAO,WAAW,KAAK,eAAe;AACtC,WAAO;AAAA,EACX,EAAG;AAEH,SAAOA;AACX,GAAG;AAEI,IAAM,WAAW,MAAM,YAAY,MAAM;AAkB5C,WAASG,UAAS,GAAG;AACjB,QAAI;AACA,eAAS,KAAK,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE;AAClD,YAAI,EAAE,GAAG,OAAO;AACZ,eAAK,GAAG,MAAM,EAAE,GAAG;AAAA;AAAA,EACnC;AAQA,EAAAA,UAAS,UAAU,UAAU,MAAM,OAAO,MAAM,KAAK,SAAS,GAAE,GAAE,KAAK,IAAI;AAQ3E,EAAAA,UAAS,UAAU,wBAAwB;AAW3C,EAAAA,UAAS,SAAS,SAASF,SAAO,GAAG,GAAG;AACpC,QAAI,CAAC;AACD,UAAI,QAAQ,OAAO;AACvB,MAAE,OAAO,CAAC,EAAE,MAAM,EAAE,OAAO;AAC3B,QAAI,EAAE,yBAAyB,QAAQ,OAAO,eAAe,KAAK,GAAG,uBAAuB;AACxF,QAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,qBAAqB;AAChD,WAAO;AAAA,EACX;AAaA,EAAAE,UAAS,SAAS,SAASD,SAAO,GAAG,GAAG;AACpC,QAAI,EAAE,aAAa;AACf,UAAI,QAAQ,OAAO,CAAC;AACxB,QAAI,IAAI,MAAM,SAAY,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,IAAI,MAAM,SAAS;AACpE,WAAO,EAAE,MAAM,GAAG;AACd,UAAI,IAAI,EAAE,OAAO;AACjB,cAAQ,MAAM;AAAA,aACT;AACD,YAAE,UAAU,EAAE,MAAM;AACpB;AAAA,aACC;AACD,YAAE,wBAAwB,EAAE,QAAQ;AACpC;AAAA;AAEA,YAAE,SAAS,IAAI,CAAC;AAChB;AAAA;AAAA,IAER;AACA,QAAI,CAAC,EAAE,eAAe,SAAS;AAC3B,YAAM,MAAM,cAAc,8BAA8B,EAAE,UAAU,EAAE,CAAC;AAC3E,WAAO;AAAA,EACX;AAUA,EAAAC,UAAS,aAAa,SAAS,WAAW,GAAG;AACzC,QAAI,aAAa,MAAM;AACnB,aAAO;AACX,QAAI,IAAI,IAAI,MAAM,SAAS;AAC3B,QAAI,EAAE,WAAW,MAAM;AACnB,UAAI,MAAM;AACN,SAAC,EAAE,UAAU,MAAM,KAAK,UAAU,EAAE,OAAO,GAAG,WAAW;AAAA,eACpD,OAAO,EAAE,YAAY;AAC1B,UAAE,UAAU,SAAS,EAAE,SAAS,EAAE;AAAA,eAC7B,OAAO,EAAE,YAAY;AAC1B,UAAE,UAAU,EAAE;AAAA,eACT,OAAO,EAAE,YAAY;AAC1B,UAAE,UAAU,IAAI,MAAM,SAAS,EAAE,QAAQ,QAAQ,GAAG,EAAE,QAAQ,SAAS,CAAC,EAAE,SAAS;AAAA,IAC3F;AACA,QAAI,EAAE,yBAAyB,MAAM;AACjC,QAAE,wBAAwB,EAAE,0BAA0B;AAAA,IAC1D;AACA,WAAO;AAAA,EACX;AAWA,EAAAA,UAAS,WAAW,SAAS,SAAS,GAAG,GAAG;AACxC,QAAI,CAAC;AACD,UAAI,CAAC;AACT,QAAI,IAAI,CAAC;AACT,QAAI,EAAE,UAAU;AACZ,UAAI,MAAM,MAAM;AACZ,YAAI,IAAI,IAAI,MAAM,KAAK,GAAG,GAAG,KAAK;AAClC,UAAE,UAAU,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI,EAAE,UAAU,SAAS,EAAE,SAAS,IAAI;AAAA,MACxF;AACI,UAAE,UAAU,EAAE,UAAU,SAAS,MAAM;AAC3C,QAAE,wBAAwB;AAAA,IAC9B;AACA,QAAI,EAAE,WAAW,QAAQ,EAAE,eAAe,SAAS,GAAG;AAClD,UAAI,OAAO,EAAE,YAAY;AACrB,UAAE,UAAU,EAAE,UAAU,SAAS,OAAO,EAAE,OAAO,IAAI,EAAE;AAAA;AAEvD,UAAE,UAAU,EAAE,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS,KAAK,EAAE,OAAO,IAAI,EAAE,UAAU,SAAS,IAAI,MAAM,SAAS,EAAE,QAAQ,QAAQ,GAAG,EAAE,QAAQ,SAAS,CAAC,EAAE,SAAS,IAAI,EAAE;AAAA,IAC3L;AACA,QAAI,EAAE,yBAAyB,QAAQ,EAAE,eAAe,uBAAuB,GAAG;AAC9E,QAAE,wBAAwB,EAAE;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AASA,EAAAA,UAAS,UAAU,SAAS,SAAS,SAAS;AAC1C,WAAO,KAAK,YAAY,SAAS,MAAM,eAAAJ,QAAU,KAAK,aAAa;AAAA,EACvE;AAEA,SAAOI;AACX,GAAG;AAEI,IAAM,WAAW,MAAM,YAAY,MAAM;AAiB5C,WAASC,UAAS,GAAG;AACjB,QAAI;AACA,eAAS,KAAK,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE;AAClD,YAAI,EAAE,GAAG,OAAO;AACZ,eAAK,GAAG,MAAM,EAAE,GAAG;AAAA;AAAA,EACnC;AAQA,EAAAA,UAAS,UAAU,WAAW;AAW9B,EAAAA,UAAS,SAAS,SAASH,SAAO,GAAG,GAAG;AACpC,QAAI,CAAC;AACD,UAAI,QAAQ,OAAO;AACvB,QAAI,EAAE,YAAY,QAAQ,OAAO,eAAe,KAAK,GAAG,UAAU;AAC9D,QAAE,OAAO,EAAE,EAAE,OAAO,EAAE,QAAQ;AAClC,WAAO;AAAA,EACX;AAaA,EAAAG,UAAS,SAAS,SAASF,SAAO,GAAG,GAAG;AACpC,QAAI,EAAE,aAAa;AACf,UAAI,QAAQ,OAAO,CAAC;AACxB,QAAI,IAAI,MAAM,SAAY,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,IAAI,MAAM,SAAS;AACpE,WAAO,EAAE,MAAM,GAAG;AACd,UAAI,IAAI,EAAE,OAAO;AACjB,cAAQ,MAAM;AAAA,aACT;AACD,YAAE,WAAW,EAAE,OAAO;AACtB;AAAA;AAEA,YAAE,SAAS,IAAI,CAAC;AAChB;AAAA;AAAA,IAER;AACA,WAAO;AAAA,EACX;AAUA,EAAAE,UAAS,aAAa,SAAS,WAAW,GAAG;AACzC,QAAI,aAAa,MAAM;AACnB,aAAO;AACX,QAAI,IAAI,IAAI,MAAM,SAAS;AAC3B,QAAI,EAAE,YAAY,MAAM;AACpB,QAAE,WAAW,OAAO,EAAE,QAAQ;AAAA,IAClC;AACA,WAAO;AAAA,EACX;AAWA,EAAAA,UAAS,WAAW,SAAS,SAAS,GAAG,GAAG;AACxC,QAAI,CAAC;AACD,UAAI,CAAC;AACT,QAAI,IAAI,CAAC;AACT,QAAI,EAAE,UAAU;AACZ,QAAE,WAAW;AAAA,IACjB;AACA,QAAI,EAAE,YAAY,QAAQ,EAAE,eAAe,UAAU,GAAG;AACpD,QAAE,WAAW,EAAE;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AASA,EAAAA,UAAS,UAAU,SAAS,SAAS,SAAS;AAC1C,WAAO,KAAK,YAAY,SAAS,MAAM,eAAAL,QAAU,KAAK,aAAa;AAAA,EACvE;AAEA,SAAOK;AACX,GAAG;;;ADprBH,IAAM,oBAAoB,SAAS,QAAQ,CAAC;AAC5C,IAAM,yBAAyB,SAAS,QAAQ,CAAC;AAK1C,SAAS,UAAW,MAAM;AAC/B,MAAI,QAAQ,MAAM;AAChB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,OAAO;AAAA,EAChB;AAEA,SAAO,KAAK,SAAS;AAErB,MAAI,KAAK,UAAU,GAAG,CAAC,MAAM,KAAK;AAEhC,WAAO,SAAS,MAAM,CAAC,IAAI;AAAA,EAC7B;AAGA,SAAO,SAAS,MAAM,EAAE,IAAI;AAC9B;AAKO,SAASC,YAAY,OAAO;AACjC,MAAI,SAAS,MAAM;AACjB,WAAO;AAAA,EACT;AAGA,MAAI;AAGJ,MAAI,MAAM,QAAQ,MAAM;AACtB,YAAQ;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf;AAAA,EACF;AAGA,MAAI,MAAM,WAAW,MAAM;AACzB,YAAQ;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf;AAAA,EACF;AAGA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,YAAQ;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,IACf;AAAA,EACF;AAGA,MAAI,iBAAiB,MAAM;AACzB,UAAM,KAAK,MAAM,QAAQ;AACzB,UAAM,OAAO,KAAK,MAAM,KAAK,GAAI;AAEjC,YAAQ;AAAA,MACN;AAAA,MACA,QAAQ,KAAM,OAAO,OAAS;AAAA,IAChC;AAAA,EACF;AAiBA,MAAI,CAAC,OAAO,UAAU,eAAe,KAAK,OAAO,MAAM,GAAG;AACxD,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,QAAQ,MAAM,SAAS,SAAS,MAAM,QAAQ,KAAK,MAAM,QAAQ,YAAY;AACxF,cAAM,iBAAAC,SAAQ,IAAI,MAAM,oDAAoD,GAAG,yBAAyB;AAAA,EAC1G;AAEA,SAAO;AACT;;;AD5FA,gBAAwB,2BAA4B,OAAOC,mBAAkB;AAM3E,MAAI,OAAO,UAAU,YAAY,iBAAiB,UAAU,QAAQ,KAAK,KAAK,OAAO,KAAK,KAAK,MAAM,gBAAgB;AACnH,cAAM,iBAAAC,SAAQ,IAAI,MAAM,kGAAkG,GAAG,sBAAsB;AAAA,EACrJ;AAGA,MAAI,iBAAiB,KAAK,GAAG;AAC3B,gBAAQ,qCAAAC,SAAkB,KAAK;AAAA,EACjC;AAGA,MAAI,OAAO,YAAY,SAAS,OAAO,iBAAiB,OAAO;AAC7D,UAAM,eAAW,oBAAAC,SAAW,KAAK;AACjC,UAAM,EAAE,OAAO,KAAK,IAAI,MAAM,SAAS,KAAK;AAE5C,QAAI,MAAM;AAER,aAAQ,CAAC;AACT;AAAA,IACF;AAEA,aAAS,KAAK,KAAK;AAInB,QAAI,OAAO,UAAU,KAAK,GAAG;AAC3B,gBAAM,iBAAAF,SAAQ,IAAI,MAAM,kGAAkG,GAAG,sBAAsB;AAAA,IACrJ;AAIA,QAAI,MAAM,gBAAgB;AAExB,iBAAQ,cAAAG,SAAI,UAAU,CAAgCC,WAAU,aAAa,EAAE,SAASA,OAAM,GAAGL,iBAAgB,CAAC;AAClH;AAAA,IACF;AAEA,QAAI,QAAQ,KAAK,GAAG;AAElB,YAAM,aAAa,EAAE,SAAS,SAAS,GAAGA,iBAAgB;AAC1D;AAAA,IACF;AAMA,QAAI,aAAa,KAAK,KAAK,MAAM,OAAO,aAAa,MAAM,OAAO,kBAAkB,iBAAiB,KAAK,KAAK,OAAO,KAAK,GAAG;AAC5H,iBAAQ,cAAAI,SAAI,UAAU,CAAgCC,WAAU,aAAaA,QAAOL,iBAAgB,CAAC;AACrG;AAAA,IACF;AAAA,EACF;AAKA,MAAI,aAAa,KAAK,GAAG;AACvB,cAAM,iBAAAC,SAAQ,IAAI,MAAM,kGAAkG,GAAG,sBAAsB;AAAA,EACrJ;AAEA,YAAM,iBAAAA,SAAQ,IAAI,MAAM,uBAAuB,OAAO,KAAK,GAAG,sBAAsB;AACtF;AAMA,eAAe,aAAc,OAAOD,mBAAkB;AAEpD,QAAM,EAAE,MAAM,MAAM,OAAO,QAAQ,IAAI;AAGvC,QAAM,OAAO;AAAA,IACX,MAAM,QAAQ;AAAA,IACd,MAAM,UAAU,IAAI;AAAA,IACpB,OAAOM,YAAW,KAAK;AAAA,EACzB;AAEA,MAAI,SAAS;AACX,SAAK,UAAU,MAAMN,kBAAiB,OAAO;AAAA,EAC/C,WAAW,CAAC,MAAM;AAEhB,SAAK,UAAU,MAAMA,kBAAiB,KAAK;AAAA,EAC7C;AAEA,SAAO;AACT;;;AGlGO,SAAS,eAAgB,OAAO;AAErC,SAAO,2BAA2B,OAAO,kBAAkB,IAAI;AACjE;;;ACnBO,SAASO,cAAc,MAAM;AAClC,MAAI,QAAQ,MAAM;AAChB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AAEA,SAAO,KAAK,SAAS,CAAC,EAAE,SAAS,GAAG,GAAG;AACzC;;;ACCA,eAAsB,iBAAkB,QAAQ,iBAAiB,UAAU,CAAC,GAAG;AAC7E,QAAM,QAAQ,CAAC;AACf,QAAM,WAAW,IAAI,SAAS;AAC9B,MAAI,QAAQ;AACZ,MAAI,QAAQ;AAEZ,mBAAiB,EAAE,SAAS,MAAM,MAAM,MAAM,KAAK,eAAe,MAAM,GAAG;AACzE,QAAI,aAAa;AACjB,UAAM,OAAO,UAAU,SAAS;AAEhC,QAAI,QAAQ,GAAG;AACb,mBAAa,IAAI;AAAA,IACnB;AAEA,QAAI,YAAY,OAAO;AACvB,UAAM,KAAK,CAAC;AAEZ,QAAI,SAAS,QAAQ,SAAS,QAAW;AACvC,SAAG,KAAK,QAAQC,cAAa,IAAI,GAAG;AAAA,IACtC;AAEA,QAAK,SAAU,MAAM;AACnB,YAAM,EAAE,MAAM,MAAM,IAAK;AAEzB,SAAG,KAAK,SAAS,MAAM;AAEvB,UAAI,SAAS,MAAM;AACjB,WAAG,KAAK,eAAe,OAAO;AAAA,MAChC;AAAA,IACF;AAEA,QAAI,GAAG,QAAQ;AACb,kBAAY,GAAG,aAAa,GAAG,KAAK,GAAG;AAAA,IACzC;AAEA,QAAI,SAAS;AACX,eAAS,IAAI,WAAW,SAAS,QAAQ,OAAO,mBAAmB,IAAI,IAAI,MAAS;AACpF,YAAM,MAAM,QAAQ,QAAQ;AAC5B,YAAM,KAAK,EAAE,MAAM,MAAM,OAAO,OAAO,IAAI,CAAC;AAC5C,cAAQ;AAAA,IACV,WAAW,QAAQ,MAAM;AACvB,eAAS,IAAI,WAAW,IAAI,KAAK,CAAC,EAAE,GAAG,mBAAmB,IAAI,GAAG,EAAE,MAAM,0BAA0B,CAAC,CAAC;AAAA,IACvG,OAAO;AACL,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACvD;AAEA;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,EACR;AACF;;;ACtEA,wBAA0B;AAM1B,SAAS,OAAQ,SAAS;AACxB,SAAO,QAAQ,OAAO,OAAO;AAC/B;AAKO,SAAS,eAAgB,SAAS;AACvC,aAAO,6BAAU,OAAO,OAAO,CAAC;AAClC;;;ACJO,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,IAAK,MAAMC,WAAU,CAAC,GAAG;AAEtC,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,QAAI;AACJ,QAAI;AACF,YAAM,WAAW,MAAM,IAAI,KAAK,aAAa;AAAA,QAC3C;AAAA,QACA,cAAc,kBAAkBA,QAAO;AAAA,QACvC,GACE,MAAM,iBAAiB,CAAC,IAAI,GAAG,YAAYA,SAAQ,OAAO;AAAA,MAE9D,CAAC;AACD,YAAM,MAAM,SAAS,KAAK;AAAA,IAC5B,SAA4B,KAA1B;AAGA,UAAIA,SAAQ,WAAW,UAAU;AAC/B,eAAO,IAAI,MAAM,EAAE,GAAGA,UAAS,QAAQ,WAAW,CAAC;AAAA,MACrD,WAAWA,SAAQ,WAAW,YAAY;AACxC,eAAO,IAAI,MAAM,EAAE,GAAGA,UAAS,QAAQ,OAAO,CAAC;AAAA,MACjD;AAEA,YAAM;AAAA,IACR;AAEA,WAAO,IAAI,MAAM,IAAI,GAAG;AAAA,EAC1B;AAEA,SAAO;AACT,CAAC;;;ACpCM,IAAM,WAAW,UAAU,SAAO;AAIvC,kBAAiB,GAAI,KAAKC,WAAU,CAAC,GAAG;AACtC,QAAI,CAAC,MAAM,QAAQ,GAAG,GAAG;AACvB,YAAM,CAAC,GAAG;AAAA,IACZ;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,IAAI,IAAI,CAAAC,SAAOA,KAAI,SAAS,CAAC;AAAA,QAClC,mBAAmB;AAAA,QACnB,GAAGD;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,WAAW,IAAI,OAAO,GAAG;AACxC,YAAME,iBAAgB,OAAO;AAAA,IAC/B;AAAA,EACF;AAEA,SAAO;AACT,CAAC;AAKD,SAASA,iBAAiB,SAAS;AAEjC,QAAM,MAAM;AAAA,IACV,KAAK,IAAI,MAAM,QAAQ,IAAI;AAAA,EAC7B;AAEA,MAAI,QAAQ,OAAO;AACjB,QAAI,QAAQ,IAAI,MAAM,QAAQ,KAAK;AAAA,EACrC;AAEA,SAAO;AACT;;;AC1CO,IAAMC,cAAa,UAAU,SAAO;AAIzC,iBAAe,KAAM,KAAKC,WAAU,CAAC,GAAG;AACtC,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,IAAI,SAAS;AAAA,QAClB,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,EAAE,KAAK,IAAI,MAAM,KAAK,GAAG,GAAG,MAAM,KAAK,KAAK;AAAA,EACrD;AAEA,SAAO;AACT,CAAC;;;ACpBM,SAAS,YAAa,QAAQ;AACnC,SAAO;AAAA,IACL,KAAK,UAAU,MAAM;AAAA,IACrB,KAAK,UAAU,MAAM;AAAA,IACrB,IAAI,SAAS,MAAM;AAAA,IACnB,MAAMC,YAAW,MAAM;AAAA,EACzB;AACF;;;ACNO,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,IAAK,MAAMC,WAAU,CAAC,GAAG;AACtC,UAAM,MAAM,MAAM,IAAI,KAAK,iBAAiB;AAAA,MAC1C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,WAAO,EAAE,OAAO,MAAM,IAAI,CAAuB,OAAO,UAAU,EAAE,CAAC,EAAE;AAAA,EACzE;AAEA,SAAO;AACT,CAAC;;;ACpBM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAOC,WAAU,CAAC,GAAG;AAClC,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,GAAGA;AAAA,QACH,KAAK;AAAA,MACP,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,WAAO,EAAE,OAAO,MAAM,IAAI,CAAuB,OAAO,UAAU,EAAE,CAAC,EAAE;AAAA,EACzE;AAEA,SAAO;AACT,CAAC;;;ACpBM,IAAM,aAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,kBAAkB;AAAA,MAC3C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,WAAO,EAAE,OAAO,MAAM,IAAI,CAAuB,OAAO,UAAU,EAAE,CAAC,EAAE;AAAA,EACzE;AAEA,SAAO;AACT,CAAC;;;ACjBM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAOC,WAAU,CAAC,GAAG;AAClC,UAAM,MAAM,MAAM,IAAI,KAAK,iBAAiB;AAAA,MAC1C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,GAAGA;AAAA,QACH,SAAS;AAAA,MACX,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,WAAO,EAAE,OAAO,MAAM,IAAI,CAAuB,OAAO,UAAU,EAAE,CAAC,EAAE;AAAA,EACzE;AAEA,SAAO;AACT,CAAC;;;ACpBM,IAAMC,YAAW,UAAU,SAAO;AAIvC,iBAAe,GAAI,MAAMC,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,WAAO,EAAE,OAAO,MAAM,IAAI,CAAuB,OAAO,UAAU,EAAE,CAAC,EAAE;AAAA,EACzE;AAEA,SAAO;AACT,CAAC;;;ACpBM,SAAS,gBAAiB,QAAQ;AACvC,SAAO;AAAA,IACL,KAAK,UAAU,MAAM;AAAA,IACrB,OAAO,YAAY,MAAM;AAAA,IACzB,MAAM,WAAW,MAAM;AAAA,IACvB,OAAO,YAAY,MAAM;AAAA,IACzB,IAAIC,UAAS,MAAM;AAAA,EACrB;AACF;;;ACTO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,SAASC,WAAU,CAAC,GAAG;AAC3C,UAAM,MAAM,MAAM,IAAI,KAAK,wBAAwB;AAAA,MACjD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO;AAAA,MACL,UAAU,KAAK;AAAA,MAAQ,SAAS,KAAK;AAAA,IACvC;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;ACnBM,SAAS,cAAe,KAAK;AAClC,MAAI,OAAO,MAAM;AACf,WAAO;AAAA,EACT;AAEA,QAAM,OAAO;AAGb,QAAM,SAAS,CAAC;AAEhB,SAAO,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,UAAU,MAAM;AAC9C,QAAI,KAAK,KAAK,CAAC,GAAG;AAChB,eAAS,EAAE,YAAY,KAAK,IAAI;AAAA,IAClC,WAAW,KAAK,KAAK,EAAE,EAAE,GAAG;AAC1B,eAAS,EAAE,GAAG,YAAY,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI;AAAA,IAClD,OAAO;AACL,eAAS,KAAK,IAAI;AAAA,IACpB;AACA,WAAO;AAAA,EACT,GAAG,MAAM;AACX;;;ACrBO,IAAMC,cAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,uBAAuB;AAAA,MAChD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,KAAK,IAAI,CAAoC,YAAY,cAAc,OAAO,CAAC;AAAA,EACxF;AACA,SAAO;AACT,CAAC;;;ACnBM,SAAS,eAAgB,QAAQ;AACtC,SAAO;AAAA,IACL,OAAO,YAAY,MAAM;AAAA,IACzB,MAAMC,YAAW,MAAM;AAAA,EACzB;AACF;;;ACHO,IAAMC,aAAY,UAAU,SAAO;AAIxC,QAAM,MAAM,OAAO,KAAKC,WAAU,CAAC,MAAM;AACvC,QAAI,CAAC,KAAK;AACR,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,UAAU;AAAA,MACnC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,KAAK;AAAA,EACd;AAEA,SAAO;AACT,CAAC;;;ACvBM,IAAM,eAAe,UAAU,SAAO;AAI3C,QAAM,SAAS,OAAOC,WAAU,CAAC,MAAM;AACrC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO;AAAA,EACT;AAEA,SAAO;AACT,CAAC;;;ACfM,IAAM,gBAAgB,UAAU,SAAO;AAI5C,QAAM,UAAU,OAAO,QAAQC,WAAU,CAAC,MAAM;AAE9C,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,UAAM,MAAM,MAAM,IAAI,KAAK,kBAAkB;AAAA,MAC3C;AAAA,MACA,cAAc,kBAAkBA,QAAO;AAAA,MACvC,GACE,MAAM,iBAAiB,CAACC,YAAqB,KAAK,UAAU,MAAM,CAAC,CAAC,GAAG,YAAYD,SAAQ,OAAO;AAAA,IAEtG,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AAEA,SAAO;AACT,CAAC;;;ACxBM,IAAM,YAAY,UAAU,SAAO;AAIxC,QAAM,MAAM,OAAO,KAAK,OAAOE,WAAU,CAAC,MAAM;AAC9C,QAAI,OAAO,QAAQ,UAAU;AAC3B,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AAEA,UAAM,SAAS;AAAA,MACb,GAAGA;AAAA,MACH,GAAG,YAAY,KAAK,KAAK;AAAA,IAC3B;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,UAAU;AAAA,MACnC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB,MAAM;AAAA,MACtC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AAEA,SAAO;AACT,CAAC;AAMD,IAAM,cAAc,CAAC,KAAK,UAAU;AAClC,UAAQ,OAAO;AAAA,SACR;AACH,aAAO,EAAE,KAAK,CAAC,KAAK,MAAM,SAAS,CAAC,GAAG,MAAM,KAAK;AAAA,SAC/C;AACH,aAAO,EAAE,KAAK,CAAC,KAAK,KAAK,EAAE;AAAA;AAE3B,aAAO,EAAE,KAAK,CAAC,KAAK,KAAK,UAAU,KAAK,CAAC,GAAG,MAAM,KAAK;AAAA;AAE7D;;;ACtCO,SAAS,aAAc,QAAQ;AACpC,SAAO;AAAA,IACL,QAAQ,aAAa,MAAM;AAAA,IAC3B,KAAKC,WAAU,MAAM;AAAA,IACrB,KAAK,UAAU,MAAM;AAAA,IACrB,SAAS,cAAc,MAAM;AAAA,IAC7B,UAAU,eAAe,MAAM;AAAA,EACjC;AACF;;;ACTO,IAAM,eAAe,UAAU,SAAO;AAI3C,kBAAiB,UAAW,MAAMC,WAAU,CAAC,GAAG;AAC9C,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,KAAK,SAAS;AAAA,MACrB,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAQ,IAAI,SAAS;AAAA,EACvB;AAEA,SAAO;AACT,CAAC;;;ACxBD,IAAAC,mBAAoB;AAepB,gBAAwB,QAAS,KAAK,MAAMC,SAAQ,UAAUC,UAAS;AAIrE,QAAM,OAAO,OAAOC,SAAQ;AAC1B,UAAM,QAAQ,MAAMF,QAAO,SAASE,KAAI,IAAI;AAC5C,UAAM,QAAQ,MAAM,SAASA,MAAKD,QAAO;AAEzC,WAAO,MAAM,OAAO,KAAK;AAAA,EAC3B;AAEA,QAAM,QAAQ,KAAK,MAAM,GAAG,EAAE,OAAO,OAAO;AAC5C,MAAI,QAAQ,MAAM,KAAK,GAAG;AAC1B,MAAI,UAAU;AAGd,SAAO,MAAM,QAAQ;AACnB,UAAM,MAAM,MAAM,MAAM;AAExB,QAAI,CAAC,KAAK;AACR,gBAAM,iBAAAE,SAAQ,IAAI,MAAM,2BAA2B,OAAO,GAAG,kBAAkB;AAAA,IACjF;AAEA,QAAI,OAAO,UAAU,eAAe,KAAK,OAAO,GAAG,GAAG;AACpD,cAAQ,MAAM;AAEd,YAAM;AAAA,QACJ;AAAA,QACA,eAAe,MAAM,KAAK,GAAG;AAAA,MAC/B;AAAA,IACF,OAAO;AACL,gBAAM,iBAAAA,SAAQ,IAAI,MAAM,kBAAkB,cAAc,SAAS,GAAG,aAAa;AAAA,IACnF;AAEA,UAAMD,OAAM,IAAI,MAAM,KAAK;AAE3B,QAAIA,MAAK;AACP,gBAAUA;AACV,cAAQ,MAAM,KAAK,KAAK;AAAA,IAC1B;AAAA,EACF;AAEA,QAAM;AAAA,IACJ;AAAA,IACA,eAAe;AAAA,EACjB;AACF;;;AC5DA,sBAAkB;AAClB,qBAAiB;AACjB,IAAAE,mBAAoB;AAYb,IAAMC,aAAY,CAACC,SAAQC,aAAY;AAC5C,QAAM,KAAK,UAAU,CAAC,KAAK,SAAS;AAClC,UAAM,WAAW,UAAe,IAAI;AAKpC,UAAM,MAAM,OAAO,KAAKA,WAAU,CAAC,MAAM;AACvC,UAAIA,SAAQ,MAAM;AAChB,cAAM,QAAQA,SAAQ,eAClB,UAAM,gBAAAC,SAAM,QAAQ,KAAKD,SAAQ,MAAMD,SAAQ,UAAUC,QAAO,CAAC,IACjE,UAAM,eAAAE,SAAK,QAAQ,KAAKF,SAAQ,MAAMD,SAAQ,UAAUC,QAAO,CAAC;AAEpE,cAAM,SAAU;AAEhB,YAAI,CAAC,QAAQ;AACX,oBAAM,iBAAAG,SAAQ,IAAI,MAAM,WAAW,GAAG,eAAe;AAAA,QACvD;AAEA,eAAO;AAAA,MACT;AAEA,YAAM,QAAQ,MAAMJ,QAAO,SAAS,IAAI,IAAI;AAC5C,YAAM,QAAQ,MAAM,SAAS,KAAKC,QAAO;AACzC,YAAM,OAAO,MAAM,OAAO,KAAK;AAE/B,aAAO;AAAA,QACL,OAAO;AAAA,QACP,eAAe;AAAA,MACjB;AAAA,IACF;AAEA,WAAO;AAAA,EACT,CAAC;AAED,SAAO,GAAGA,QAAO;AACnB;;;ACzCO,IAAM,eAAe,UAAU,SAAO;AAI3C,kBAAiB,UAAW,QAAQI,WAAU,CAAC,GAAG;AAChD,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAC5D,UAAM,EAAE,SAAS,KAAK,IAAI,MAAM,iBAAiB,QAAQ,YAAYA,SAAQ,OAAO;AAEpF,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,kBAAkB,EAAE,aAAaA,SAAQ,SAAS,CAAC;AAAA,IACnE,CAAC;AAED,qBAAiB,EAAE,KAAK,KAAK,IAAI,OAAO,GAAG;AACzC,UAAI,SAAS,QAAW;AACtB,cAAM,EAAE,KAAK,EAAE,KAAK,IAAI,GAAG,YAAY,IAAI;AAE3C,cAAM;AAAA,UACJ,MAAM;AAAA,YACJ,KAAK,IAAI,MAAM,GAAG;AAAA,YAClB,aAAa;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;AC3BM,IAAMC,aAAY,CAACC,SAAQC,aAAY;AAC5C,QAAM,KAAK,UAAU,CAAC,QAAQ;AAI5B,UAAM,MAAM,OAAO,SAASA,WAAU,CAAC,MAAM;AAC3C,YAAM,WAAW;AAAA,QACf,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,GAAGA;AAAA,MACL;AAEA,UAAI;AAEJ,UAAI,SAAS,YAAY;AAIvB,YAAI,EAAE,mBAAmB,aAAa;AACpC,gBAAM,IAAI,MAAM,sDAAsD;AAAA,QACxE;AACA,qBAAa;AAAA,MACf,OAAO;AAIL,cAAM,aAAa,MAAMD,QAAO,SAAS,SAAS,UAAU;AAC5D,qBAAa,WAAW,OAAO,OAAO;AAGtC,iBAAS,aAAa,SAAS;AAAA,MACjC;AAGA,YAAM,aAAa,IAAI,gBAAgB;AACvC,YAAM,SAAS,YAAY,WAAW,QAAQ,SAAS,MAAM;AAE7D,YAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,QACpC,SAAS,SAAS;AAAA,QAClB;AAAA,QACA,cAAc,kBAAkB,QAAQ;AAAA,QACxC,GACE,MAAM,iBAAiB,CAAC,UAAU,GAAG,YAAY,SAAS,OAAO;AAAA,MAErE,CAAC;AACD,YAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,aAAO,IAAI,MAAM,KAAK,IAAI,IAAI;AAAA,IAChC;AAEA,WAAO;AAAA,EACT,CAAC;AAED,SAAO,GAAGC,QAAO;AACnB;;;AC5DO,IAAM,gBAAgB,UAAU,SAAO;AAI5C,QAAMC,WAAU,OAAO,UAAUC,WAAU,CAAC,MAAM;AAChD,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG,WAAWA,SAAQ,OAAO,IAAIA,SAAQ,OAAO,QAAQ,WAAW,GAAG,IAAI;AAAA,QAC/E,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,EAAE,KAAK,IAAI,MAAM,KAAK,IAAI,IAAI,GAAG,eAAe,KAAK,QAAQ;AAAA,EACtE;AAEA,SAAOD;AACT,CAAC;;;ACnBM,SAAS,UAAWE,SAAQ,QAAQ;AACzC,SAAO;AAAA,IACL,QAAQ,aAAa,MAAM;AAAA,IAC3B,KAAKC,WAAUD,SAAQ,MAAM;AAAA,IAC7B,QAAQ,aAAa,MAAM;AAAA,IAC3B,KAAKE,WAAUF,SAAQ,MAAM;AAAA,IAC7B,SAAS,cAAc,MAAM;AAAA,EAC/B;AACF;;;ACfO,IAAM,eAAe;AACrB,IAAM,eAAe;AACrB,IAAM,YAAY;AAClB,IAAM,aAAa;AACnB,IAAM,WAAW;AACjB,IAAM,QAAQ;AACd,IAAM,aAAa;AACnB,IAAM,cAAc;;;ACapB,IAAM,WAAW,CAAC,UAAU;AAvBnC,MAAAG;AAwBE,MAAI,MAAM,SAAS,cAAc;AAC/B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,IACd;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,cAAc;AAC/B,WAAO;AAAA,MACL,MAAM,iBAAiB,MAAM,EAAE;AAAA,MAC/B,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MAEZ,aAAa;AAAA,MAEb,aAAa;AAAA,MACb,SAAS,MAAM,aAAa,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,MAAM,OAAO,EAAE,IAAI,iBAAiB,EAAE,GAAG,YAAY,MAAM,IAAI,UAAQ,UAAU,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,EAAE;AAAA,MACpJ,YAAY,MAAM,aAAa,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,MAAM,OAAO,EAAE,IAAI,iBAAiB,EAAE,GAAG,YAAY,MAAM,IAAI,UAAQ,UAAU,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,EAAE;AAAA,IAGzJ;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,WAAW;AAG5B,QAAI,OAAO;AAAA,MAET,KAAIA,MAAA,MAAM,OAAN,OAAAA,MAAY,iBAAiB,MAAM,EAAE;AAAA,MAEzC,YAAY,CAAC;AAAA,MACb,WAAW,CAAC;AAAA,IACd;AAEA,QAAI,MAAM,aAAa,MAAM,UAAU,QAAQ;AAE7C,aAAO;AAAA,QACL,IAAI,iBAAiB,MAAM,UAAU,GAAG,EAAE;AAAA,QAC1C,YAAY,MAAM,UAAU,GAAG,MAAM,IAAI,UAAQ,UAAU,IAAI,CAAC;AAAA,QAChE,WAAW,CAAC;AAAA,MACd;AAAA,IACF;AAEA,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,YAAY;AAC7B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAO,IAAI,MAAM,MAAM,KAAK;AAAA,IAC9B;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,UAAU;AAC3B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,WAAW,MAAM,UAAU,IAAI,CAAC,EAAE,IAAI,MAAM,OAAO,EAAE,IAAI,iBAAiB,EAAE,GAAG,YAAY,MAAM,IAAI,UAAQ,UAAU,IAAI,CAAC,GAAG,WAAW,CAAC,EAAE,EAAE;AAAA,IACjJ;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,OAAO;AACxB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,OAAOC,YAAqB,MAAM,OAAO,WAAW;AAAA,IACtD;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,YAAY;AAC7B,UAAM,QAAQ,MAAM,UAAU,IAAI,CAAC,EAAE,GAAG,MAAM,iBAAiB,EAAE,CAAC;AAElE,QAAI,CAAC,MAAM,QAAQ;AACjB,YAAM,IAAI,MAAM,eAAe;AAAA,IACjC;AAEA,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,MAAM,MAAM;AAAA,IACd;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,aAAa;AAC9B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM,MAAM;AAAA,MACZ,MAAM,iBAAiB,MAAM,EAAE;AAAA,IACjC;AAAA,EACF;AAEA,QAAM,IAAI,MAAM,wBAAwB;AAC1C;;;AChHO,IAAM,iBAAiB,UAAU,SAAO;AAI7C,kBAAiB,SAAU,QAAQC,WAAU,CAAC,GAAG;AAC/C,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,SAAS,IAAI,OAAO,GAAG;AACtC,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;ACpBM,IAAM,kBAAkB,UAAU,SAAO;AAI9C,kBAAiB,UAAW,KAAKC,WAAU,CAAC,GAAG;AAC7C,UAAM,MAAM,MAAM,IAAI,KAAK,iBAAiB;AAAA,MAC1C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,IAAI,SAAS;AAAA,QAClB,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,SAAS,IAAI,OAAO,GAAG;AACtC,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;ACnBM,IAAMC,aAAY,UAAU,SAAO;AAIxC,kBAAiB,IAAK,KAAKC,WAAU,CAAC,GAAG;AACvC,UAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,MACpC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAE9B,KAAK,eAAe,aAAaC,UAAmB,GAAG,IAAI,IAAI,SAAS;AAAA,QACxE,GAAGD;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,SAAS,IAAI,OAAO,GAAG;AACtC,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;ACrBM,IAAM,gBAAgB,UAAU,SAAO;AAI5C,kBAAiB,QAAS,MAAME,WAAU,EAAE,WAAW,MAAM,GAAG;AAE9D,UAAM,SAAS,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAEjD,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,OAAO,IAAI,SAAO,IAAI,SAAS,CAAC;AAAA,QACrC,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,SAAS,IAAI,OAAO,GAAG;AACtC,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;ACrBM,IAAMC,aAAY,UAAU,SAAO;AAIxC,kBAAiB,IAAK,KAAK,OAAOC,WAAU,CAAC,GAAG;AAE9C,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,UAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,MACpC;AAAA,MACA,cAAc,kBAAkB;AAAA,QAC9B,KAAK,eAAe,aAAaC,UAAmB,GAAG,IAAI,IAAI,SAAS;AAAA,QACxE,GAAGD;AAAA,MACL,CAAC;AAAA,MACD,GACE,MAAM,iBAAiB,CAAC,KAAK,GAAG,YAAYA,SAAQ,OAAO;AAAA,IAE/D,CAAC;AAED,qBAAiB,SAAS,IAAI,OAAO,GAAG;AACtC,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;AC7BM,IAAM,cAAc,UAAU,SAAO;AAI1C,kBAAiB,MAAO,QAAQE,WAAU,CAAC,GAAG;AAC5C,UAAM,MAAM,MAAM,IAAI,KAAK,aAAa;AAAA,MACtC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,OAAO,SAAS;AAAA,QACrB,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,SAAS,IAAI,OAAO,GAAG;AACtC,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,SAAO;AACT,CAAC;;;ACnBM,SAAS,UAAW,QAAQ;AACjC,SAAO;AAAA,IACL,UAAU,eAAe,MAAM;AAAA,IAC/B,WAAW,gBAAgB,MAAM;AAAA,IACjC,KAAKC,WAAU,MAAM;AAAA,IACrB,SAAS,cAAc,MAAM;AAAA,IAC7B,KAAKC,WAAU,MAAM;AAAA,IACrB,OAAO,YAAY,MAAM;AAAA,EAC3B;AACF;;;ACXO,IAAM,aAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,aAAa;AAAA,MACtC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,IAAI,KAAK;AAAA,EAClB;AACA,SAAO;AACT,CAAC;;;ACdM,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,IAAKC,WAAU,CAAC,GAAG;AAChC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,WAAO,IAAI,KAAK;AAAA,EAClB;AACA,SAAO;AACT,CAAC;;;ACbM,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,IAAKC,WAAU,CAAC,GAAG;AAChC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,IAAI,KAAK;AAAA,EAClB;AACA,SAAO;AACT,CAAC;;;ACfM,SAAS,WAAY,QAAQ;AAClC,SAAO;AAAA,IACL,MAAM,WAAW,MAAM;AAAA,IACvB,KAAK,UAAU,MAAM;AAAA,IACrB,KAAK,UAAU,MAAM;AAAA,EACvB;AACF;;;ACLO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,MAAM,MAAMC,WAAU,CAAC,GAAG;AAC9C,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL;AAAA,QACA,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;ACjBM,IAAM,WAAW,UAAU,SAAO;AAIvC,iBAAe,GAAI,SAAS,aAAaC,WAAU,CAAC,GAAG;AAErD,UAAM,YAAY,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAE7D,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,UAAU,OAAO,WAAW,EAAE,IAAI,CAAAC,SAAO,IAAI,MAAMA,IAAG,IAAI,SAASA,SAAQA,IAAG;AAAA,QACnF,GAAGD;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;ACpBM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,MAAME,WAAU,CAAC,GAAG;AACxC,QAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACpD;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,IAAI,MAAM,KAAK,GAAG;AAAA,EAC3B;AACA,SAAO;AACT,CAAC;;;AC1BM,SAAS,0BAA2B,OAAO;AAChD,QAAM,OAAO,cAAc,KAAK;AAEhC,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,MAAM,GAAG;AACtD,SAAK,OAAO,SAAS,KAAK,MAAM,CAAC;AAAA,EACnC;AAEA,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,OAAO,GAAG;AACvD,SAAK,QAAQ;AAAA,MACX,MAAM,KAAK;AAAA,MACX,OAAO,KAAK,cAAc;AAAA,IAC5B;AAEA,WAAO,KAAK;AAAA,EACd;AAEA,SAAO;AACT;;;ACbO,IAAM,WAAW,UAAU,SAAO;AAIvC,kBAAiB,GAAI,MAAMC,WAAU,CAAC,GAAG;AACvC,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,IAAI,MAAM,IAAI,IAAI,SAAS,SAAS;AAAA,QAEzC,MAAM;AAAA,QACN,GAAGA;AAAA,QACH,QAAQ;AAAA,MACV,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,UAAU,IAAI,OAAO,GAAG;AAEvC,UAAI,aAAa,QAAQ;AACvB,mBAAW,SAAS,OAAO,WAAW,CAAC,GAAG;AACxC,gBAAMC,iBAAgB,0BAA0B,KAAK,CAAC;AAAA,QACxD;AAAA,MACF,OAAO;AACL,cAAMA,iBAAgB,0BAA0B,MAAM,CAAC;AAAA,MACzD;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAKD,SAASA,iBAAiB,OAAO;AAC/B,MAAI,MAAM,MAAM;AACd,UAAM,MAAM,IAAI,MAAM,MAAM,IAAI;AAAA,EAClC;AAEA,SAAO,MAAM;AAEb,QAAM,OAAO,MAAM,SAAS,IAAI,cAAc;AAE9C,SAAO;AACT;;;ACjDO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,MAAMC,WAAU,CAAC,GAAG;AACxC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;ACjBM,IAAM,WAAW,UAAU,SAAO;AAIvC,iBAAe,GAAI,SAAS,aAAaC,WAAU,CAAC,GAAG;AACrD,QAAI,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC3B,gBAAU,CAAC,OAAO;AAAA,IACpB;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,QAAQ,OAAO,WAAW;AAAA,QAC/B,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,IAAI,KAAK;AAAA,EACjB;AAEA,SAAO;AACT,CAAC;;;AC1BD,oBAAuB;AAOhB,IAAM,aAAa,UAAU,SAAO;AAIzC,kBAAiBC,MAAM,MAAMC,WAAU,CAAC,GAAG;AACzC,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,OAAOA,SAAQ;AAAA,QACf,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,eAAQ,cAAAC,SAAW,IAAI,IAAI;AAAA,EAC7B;AACA,SAAOF;AACT,CAAC;;;AC1BD,IAAAG,eAAiB;AAOV,IAAMC,YAAW,UAAU,SAAO;AAIvC,iBAAe,GAAI,MAAMC,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,OAAO,MAAM,IAAI,KAAK;AAG5B,QAAI,SAAS,IAAI;AAEf,YAAM,QAAQ,IAAI,aAAAC,QAAK,UAAU,GAAG;AACpC,YAAM,UAAU;AAChB,YAAM;AAAA,IACR;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACxBM,IAAMC,cAAa,UAAU,SAAO;AAIzC,iBAAe,KAAM,MAAMC,WAAU,CAAC,GAAG;AACvC,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,SAAK,eAAe,KAAK,gBAAgB;AACzC,WAAOC,iBAAgB,0BAA0B,IAAI,CAAC;AAAA,EACxD;AACA,SAAO;AACT,CAAC;AAKD,SAASA,iBAAiB,OAAO;AAC/B,QAAM,MAAM,IAAI,MAAM,MAAM,IAAI;AAChC,SAAO,MAAM;AACb,SAAO;AACT;;;AC9BO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,MAAMC,WAAU,CAAC,GAAG;AACxC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;ACbM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,MAAM,OAAOC,WAAU,CAAC,GAAG;AAE/C,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC;AAAA,MACA,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,gBAAgB;AAAA,QAChB,OAAOA,SAAQ;AAAA,QACf,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,GACE,MAAM,iBAAiB,CAAC;AAAA,QACtB,SAAS;AAAA,QACT,MAAM;AAAA,QACN,MAAM,aAAaA,SAAQ,IAAI;AAAA,QAC/B,OAAO,WAAWA,SAAQ,KAAK;AAAA,MACjC,CAAC,GAAG,YAAYA,SAAQ,OAAO;AAAA,IAEnC,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;AC3BM,SAAS,YAAa,QAAQ;AACnC,SAAO;AAAA,IACL,OAAO,YAAY,MAAM;AAAA,IACzB,IAAI,SAAS,MAAM;AAAA,IACnB,OAAO,YAAY,MAAM;AAAA,IACzB,IAAI,SAAS,MAAM;AAAA,IACnB,OAAO,YAAY,MAAM;AAAA,IACzB,IAAI,SAAS,MAAM;AAAA,IACnB,MAAM,WAAW,MAAM;AAAA,IACvB,IAAIC,UAAS,MAAM;AAAA,IACnB,MAAMC,YAAW,MAAM;AAAA,IACvB,OAAO,YAAY,MAAM;AAAA,IACzB,OAAO,YAAY,MAAM;AAAA,EAC3B;AACF;;;AC5BA,IAAAC,mBAAoB;AAOb,IAAMC,gBAAe,UAAU,SAAO;AAI3C,QAAM,YAAY,OAAOC,OAAM,UAAUC,WAAU,CAAC,MAAM;AACxD,cAAM,iBAAAC,SAAQ,IAAI,MAAM,iBAAiB,GAAG,qBAAqB;AAAA,EACnE;AAEA,SAAO;AACT,CAAC;;;ACRM,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,IAAKC,OAAMC,WAAU,EAAE,MAAM,UAAU,GAAG;AACvD,UAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,MACpC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAKD;AAAA,QACL,GAAGC;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAG5B,WAAO,cAAc,IAAI;AAAA,EAC3B;AACA,SAAO;AACT,CAAC;;;ACnBM,IAAMC,gBAAe,UAAU,SAAO;AAI3C,iBAAe,UAAWC,OAAM,KAAK,UAAUC,WAAU,CAAC,GAAG;AAC3D,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAKD;AAAA,QACL;AAAA,QACA;AAAA,QACA,GAAGC;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAG5B,WAAO,cAAc,IAAI;AAAA,EAC3B;AACA,SAAO;AACT,CAAC;;;AC7BD,IAAAC,oBAAoB;AAOb,IAAM,aAAa,UAAU,SAAO;AAIzC,QAAM,OAAO,OAAOC,OAAMC,WAAU,CAAC,MAAM;AACzC,cAAM,kBAAAC,SAAQ,IAAI,MAAM,iBAAiB,GAAG,qBAAqB;AAAA,EACnE;AAEA,SAAO;AACT,CAAC;;;ACRM,IAAMC,cAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,YAAQ,KAAK,QAAQ,CAAC,GAAG,IAAI,CAAqB,MAAM,cAAc,CAAC,CAAC;AAAA,EAC1E;AACA,SAAO;AACT,CAAC;;;ACfM,IAAM,eAAe,UAAU,SAAO;AAI3C,iBAAe,OAAQ,SAAS,SAASC,WAAU,CAAC,GAAG;AACrD,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,UACH;AAAA,UACA;AAAA,QACF;AAAA,QACA,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,WAAO,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,EACvC;AACA,SAAO;AACT,CAAC;;;ACrBM,IAAMC,YAAW,UAAU,SAAO;AAIvC,iBAAe,GAAIC,OAAMC,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,MAAM,IAAI,KAAK,UAAU;AAAA,MACnC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAKD;AAAA,QACL,GAAGC;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAG5B,WAAO,cAAc,KAAK,KAAK,EAAE;AAAA,EACnC;AACA,SAAO;AACT,CAAC;;;ACjBM,SAAS,UAAW,QAAQ;AACjC,SAAO;AAAA,IACL,QAAQC,cAAa,MAAM;AAAA,IAC3B,KAAK,UAAU,MAAM;AAAA,IACrB,QAAQC,cAAa,MAAM;AAAA,IAC3B,MAAM,WAAW,MAAM;AAAA,IACvB,MAAMC,YAAW,MAAM;AAAA,IACvB,QAAQ,aAAa,MAAM;AAAA,IAC3B,IAAIC,UAAS,MAAM;AAAA,EACrB;AACF;;;ACZO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,WAAWC,QAAOC,WAAU,CAAC,GAAG;AACpD,UAAM,MAAM,MAAM,IAAI,KAAK,aAAa;AAAA,MACtC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,UACH;AAAA,UACAD;AAAA,QACF;AAAA,QACA,GAAGC;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,EACvC;AACA,SAAO;AACT,CAAC;;;ACrBM,IAAMC,YAAW,UAAU,SAAO;AAIvC,iBAAe,GAAIC,WAAU,CAAC,GAAG;AAC/B,UAAM,MAAM,MAAM,IAAI,KAAK,UAAU;AAAA,MACnC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,WAAO,KAAK;AAAA,EACd;AACA,SAAO;AACT,CAAC;;;ACfM,IAAM,aAAa,UAAU,SAAO;AAIzC,kBAAiB,KAAMC,WAAU,CAAC,GAAG;AACnC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAQ,IAAI,OAAO;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACfM,SAAS,UAAW,QAAQ;AACjC,SAAO;AAAA,IACL,OAAO,YAAY,MAAM;AAAA,IACzB,IAAIC,UAAS,MAAM;AAAA,IACnB,MAAM,WAAW,MAAM;AAAA,EACzB;AACF;;;ACJO,IAAM,gBAAgB,UAAU,SAAO;AAI5C,iBAAe,QAAS,MAAMC,WAAU,CAAC,GAAG;AAC1C,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG;AAAA,QACR,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,WAAO,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,EACvC;AACA,SAAO;AACT,CAAC;;;ACnBM,IAAMC,iBAAgB,UAAU,SAAO;AAI5C,kBAAiBC,SAAS,MAAMC,WAAU,CAAC,GAAG;AAC5C,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,UAAU,IAAI,OAAO,GAAG;AACvC,YAAM,OAAO;AAAA,IACf;AAAA,EACF;AACA,SAAOD;AACT,CAAC;;;ACnBM,IAAM,eAAe,UAAU,SAAO;AAI3C,iBAAe,OAAQE,OAAMC,WAAU,CAAC,GAAG;AACzC,UAAM,MAAM,MAAM,IAAI,KAAK,sBAAsB;AAAA,MAC/C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAKD;AAAA,QACL,GAAGC;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,WAAO,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,EACvC;AACA,SAAO;AACT,CAAC;;;AClBM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAOC,WAAU,CAAC,GAAG;AAClC,UAAM,MAAM,MAAM,IAAI,KAAK,qBAAqB;AAAA,MAC9C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,WAAO,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,EACvC;AACA,SAAO;AACT,CAAC;;;AChBM,IAAM,aAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,oBAAoB;AAAA,MAC7C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,KAAK,WAAW,CAAC;AAAA,EAC1B;AACA,SAAO;AACT,CAAC;;;AChBM,SAAS,aAAc,QAAQ;AACpC,SAAO;AAAA,IACL,QAAQ,aAAa,MAAM;AAAA,IAC3B,OAAO,YAAY,MAAM;AAAA,IACzB,MAAM,WAAW,MAAM;AAAA,EACzB;AACF;;;ACNO,SAAS,WAAY,QAAQ;AAClC,SAAO;AAAA,IACL,SAAS,cAAc,MAAM;AAAA,IAC7B,SAASC,eAAc,MAAM;AAAA,IAC7B,QAAQ,aAAa,MAAM;AAAA,EAC7B;AACF;;;ACJO,IAAM,aAAa,UAAU,SAAO;AAIzC,iBAAe,KAAM,KAAKC,WAAU,CAAC,GAAG;AACtC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG,eAAe,aAAa,IAAI,OAAO,GAAG,IAAI;AAAA,QACtD,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAMC,QAAO,MAAM,IAAI,YAAY;AAEnC,WAAO,IAAI,WAAWA,OAAM,GAAGA,MAAK,UAAU;AAAA,EAChD;AACA,SAAO;AACT,CAAC;;;ACjBM,IAAMC,aAAY,UAAU,SAAO;AAIxC,iBAAe,IAAK,KAAKC,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG,eAAe,aAAa,IAAI,OAAO,GAAG,IAAI;AAAA,QACtD,cAAc;AAAA,QACd,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO;AAAA,MACL,MAAMC,YAAqB,KAAK,MAAM,WAAW;AAAA,MACjD,QAAQ,KAAK,SAAS,CAAC,GAAG,IAAI,CAAoB,UAAU;AAAA,QAC1D,MAAM,KAAK;AAAA,QACX,MAAM,IAAI,MAAM,KAAK,IAAI;AAAA,QACzB,OAAO,KAAK;AAAA,MACd,EAAE;AAAA,IACJ;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;AC3BM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,KAAKC,WAAU,CAAC,GAAG;AACvC,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG,eAAe,aAAa,IAAI,OAAO,GAAG,IAAI;AAAA,QACtD,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,YAAQ,KAAK,SAAS,CAAC,GAAG,IAAI,CAAoB,OAAO;AAAA,MACvD,MAAM,EAAE;AAAA,MACR,OAAO,EAAE;AAAA,MACT,MAAM,IAAI,MAAM,EAAE,IAAI;AAAA,IACxB,EAAE;AAAA,EACJ;AACA,SAAO;AACT,CAAC;;;ACtBM,IAAM,YAAY,UAAU,SAAO;AAIxC,iBAAe,UAAWC,WAAU,CAAC,GAAG;AACtC,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAKA,SAAQ;AAAA,QACb,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK;AAEhC,WAAO,IAAI,MAAM,IAAI;AAAA,EACvB;AACA,SAAO;AACT,CAAC;;;AChBM,IAAMC,aAAY,CAACC,SAAQC,aAAY;AAC5C,QAAM,KAAK,UAAU,CAAC,QAAQ;AAC5B,UAAM,SAASF,WAAaC,SAAQC,QAAO;AAK3C,mBAAe,IAAK,KAAKA,WAAU,CAAC,GAAG;AACrC,aAAO,OAAO,KAAK;AAAA,QACjB,GAAGA;AAAA,QACH,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT,CAAC;AAED,SAAO,GAAGA,QAAO;AACnB;;;ACtBO,IAAMC,cAAa,UAAU,SAAO;AAIzC,iBAAe,KAAM,KAAKC,WAAU,CAAC,GAAG;AACtC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG;AAAA,QACR,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,SAAS,MAAM,IAAI,KAAK;AAE9B,WAAO;AAAA,MACL,GAAG;AAAA,MACH,MAAM,IAAI,MAAM,OAAO,IAAI;AAAA,IAC7B;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACtBM,IAAM,gBAAgB,UAAU,SAAO;AAI5C,iBAAe,QAAS,KAAK,OAAOC,WAAU,CAAC,GAAG;AAChD,UAAM,MAAM,MAAM,IAAI,KAAK,yBAAyB;AAAA,MAClD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,UACH,GAAG;AAAA,UAEH,MAAM,QAAQ,MAAM,QAAQ;AAAA,WAE3B,MAAM,QAAQ,MAAM,OAAO,IAAI,SAAS,KAAK;AAAA,QAChD;AAAA,QACA,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK;AAEhC,WAAO,IAAI,MAAM,IAAI;AAAA,EACvB;AAEA,SAAO;AACT,CAAC;;;ACxBM,IAAM,mBAAmB,UAAU,SAAO;AAI/C,iBAAe,WAAY,KAAK,MAAMC,WAAU,CAAC,GAAG;AAElD,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,UAAM,MAAM,MAAM,IAAI,KAAK,4BAA4B;AAAA,MACrD;AAAA,MACA,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG;AAAA,QACR,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,GACE,MAAM,iBAAiB,CAAC,IAAI,GAAG,YAAYA,SAAQ,OAAO;AAAA,IAE9D,CAAC;AAED,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK;AAEhC,WAAO,IAAI,MAAM,IAAI;AAAA,EACvB;AACA,SAAO;AACT,CAAC;;;AC3BM,IAAM,eAAe,UAAU,SAAO;AAI3C,iBAAe,OAAQ,KAAK,OAAOC,WAAU,CAAC,GAAG;AAC/C,UAAM,MAAM,MAAM,IAAI,KAAK,wBAAwB;AAAA,MACjD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,UACH,GAAG;AAAA,UAEH,MAAM,QAAQ,MAAM,QAAQ;AAAA,QAC9B;AAAA,QACA,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK;AAEhC,WAAO,IAAI,MAAM,IAAI;AAAA,EACvB;AACA,SAAO;AACT,CAAC;;;ACrBM,IAAM,gBAAgB,UAAU,SAAO;AAI5C,iBAAe,QAAS,KAAK,MAAMC,WAAU,CAAC,GAAG;AAE/C,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,UAAM,MAAM,MAAM,IAAI,KAAK,yBAAyB;AAAA,MAClD;AAAA,MACA,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,UACH,GAAG;AAAA,QACL;AAAA,QACA,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,GACE,MAAM,iBAAiB,CAAC,IAAI,GAAG,YAAYA,SAAQ,OAAO;AAAA,IAE9D,CAAC;AAED,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK;AAEhC,WAAO,IAAI,MAAM,IAAI;AAAA,EACvB;AACA,SAAO;AACT,CAAC;;;AC9BM,SAAS,YAAa,QAAQ;AACnC,SAAO;AAAA,IACL,SAAS,cAAc,MAAM;AAAA,IAC7B,YAAY,iBAAiB,MAAM;AAAA,IACnC,QAAQ,aAAa,MAAM;AAAA,IAC3B,SAAS,cAAc,MAAM;AAAA,EAC/B;AACF;;;ACHO,SAAS,aAAcC,SAAQ,QAAQ;AAC5C,SAAO;AAAA,IACL,MAAM,WAAW,MAAM;AAAA,IACvB,KAAKC,WAAU,MAAM;AAAA,IACrB,OAAO,YAAY,MAAM;AAAA,IACzB,KAAK,UAAU,MAAM;AAAA,IACrB,KAAKC,WAAUF,SAAQ,MAAM;AAAA,IAC7B,MAAMG,YAAW,MAAM;AAAA,IACvB,OAAO,YAAY,MAAM;AAAA,EAC3B;AACF;;;ACtBA,IAAAC,oBAAoB;AA8CpB,gBAAwBC,gBAAgB,OAAO;AAE7C,MAAI,UAAU,QAAQ,UAAU,QAAW;AACzC,cAAM,kBAAAC,SAAQ,IAAI,MAAM,qBAAqB,OAAO,GAAG,sBAAsB;AAAA,EAC/E;AAGA,QAAM,MAAM,IAAI,MAAM,KAAK;AAE3B,MAAI,KAAK;AACP,UAAM,MAAM,EAAE,IAAI,CAAC;AACnB;AAAA,EACF;AAEA,MAAI,iBAAiB,UAAU,OAAO,UAAU,UAAU;AACxD,UAAM,MAAM,EAAE,MAAM,MAAM,CAAC;AAC3B;AAAA,EACF;AAIA,MAAI,MAAM,OAAO,QAAQ,MAAM,QAAQ,MAAM;AAE3C,WAAO,MAAM,MAAM,KAAK;AAAA,EAC1B;AAGA,MAAI,OAAO,YAAY,OAAO;AAE5B,UAAM,WAAW,MAAM,OAAO,UAAU;AACxC,UAAMC,SAAQ,SAAS,KAAK;AAC5B,QAAIA,OAAM;AAAM,aAAO;AAGvB,QAAI,IAAI,MAAMA,OAAM,KAAK,KAAKA,OAAM,iBAAiB,UAAU,OAAOA,OAAM,UAAU,UAAU;AAC9F,YAAM,MAAM,EAAE,KAAKA,OAAM,MAAM,CAAC;AAChC,iBAAWC,QAAO,UAAU;AAC1B,cAAM,MAAM,EAAE,KAAAA,KAAI,CAAC;AAAA,MACrB;AACA;AAAA,IACF;AAGA,QAAID,OAAM,MAAM,OAAO,QAAQA,OAAM,MAAM,QAAQ,MAAM;AACvD,YAAM,MAAMA,OAAM,KAAK;AACvB,iBAAW,OAAO,UAAU;AAC1B,cAAM,MAAM,GAAG;AAAA,MACjB;AACA;AAAA,IACF;AAEA,cAAM,kBAAAD,SAAQ,IAAI,MAAM,uBAAuB,OAAO,KAAK,GAAG,sBAAsB;AAAA,EACtF;AAGA,MAAI,OAAO,iBAAiB,OAAO;AAEjC,UAAM,WAAW,MAAM,OAAO,eAAe;AAC7C,UAAMC,SAAQ,MAAM,SAAS,KAAK;AAClC,QAAIA,OAAM;AAAM,aAAO;AAGvB,QAAI,IAAI,MAAMA,OAAM,KAAK,KAAKA,OAAM,iBAAiB,UAAU,OAAOA,OAAM,UAAU,UAAU;AAC9F,YAAM,MAAM,EAAE,KAAKA,OAAM,MAAM,CAAC;AAChC,uBAAiBC,QAAO,UAAU;AAChC,cAAM,MAAM,EAAE,KAAAA,KAAI,CAAC;AAAA,MACrB;AACA;AAAA,IACF;AAGA,QAAID,OAAM,MAAM,OAAO,QAAQA,OAAM,MAAM,QAAQ,MAAM;AACvD,YAAM,MAAMA,OAAM,KAAK;AACvB,uBAAiB,OAAO,UAAU;AAChC,cAAM,MAAM,GAAG;AAAA,MACjB;AACA;AAAA,IACF;AAEA,cAAM,kBAAAD,SAAQ,IAAI,MAAM,uBAAuB,OAAO,KAAK,GAAG,sBAAsB;AAAA,EACtF;AAEA,YAAM,kBAAAA,SAAQ,IAAI,MAAM,uBAAuB,OAAO,KAAK,GAAG,sBAAsB;AACtF;AAKA,SAAS,MAAO,OAAO;AACrB,QAAM,OAAO,MAAM,OAAO,GAAG,MAAM;AAEnC,MAAI,CAAC,MAAM;AACT,cAAM,kBAAAA,SAAQ,IAAI,MAAM,4DAA4D,GAAG,sBAAsB;AAAA,EAC/G;AAGA,QAAM,MAAM;AAAA,IACV;AAAA,IACA,WAAW,MAAM,cAAc;AAAA,EACjC;AAEA,MAAI,MAAM,YAAY,MAAM;AAC1B,QAAI,WAAW,MAAM;AAAA,EACvB;AAEA,SAAO;AACT;;;AC9IO,IAAM,eAAe,UAAU,SAAO;AAI3C,kBAAiB,OAAQ,QAAQG,WAAU,CAAC,GAAG;AAC7C,qBAAiB,EAAE,MAAM,WAAW,SAAS,KAAKC,gBAAe,MAAM,GAAG;AACxE,YAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,QACpC,QAAQD,SAAQ;AAAA,QAChB,cAAc,kBAAkB;AAAA,UAC9B,GAAGA;AAAA,UACH,KAAK;AAAA,UACL;AAAA,UACA,UAAU,WAAW,KAAK,UAAU,QAAQ,IAAI;AAAA,UAChD,QAAQ;AAAA,QACV,CAAC;AAAA,QACD,SAASA,SAAQ;AAAA,MACnB,CAAC;AAED,uBAAiB,OAAO,IAAI,OAAO,GAAG;AACpC,YAAI,IAAI,MAAM;AACZ,qBAAW,OAAO,IAAI,MAAM;AAC1B,kBAAM,IAAI,MAAM,GAAG;AAAA,UACrB;AACA;AAAA,QACF;AAEA,cAAM,IAAI,MAAM,GAAG;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACxCD,IAAAE,kBAAiB;AAWV,SAASC,WAAW,QAAQ;AACjC,QAAMC,OAAM,aAAa,MAAM;AAE/B,SAAO,UAAU,MAAM;AAIrB,mBAAe,IAAK,MAAMC,WAAU,CAAC,GAAG;AAEtC,iBAAO,gBAAAC,SAAKF,KAAI,CAAC;AAAA,QACf;AAAA,QACA,GAAGC;AAAA,MACL,CAAC,GAAGA,QAAO,CAAC;AAAA,IACd;AACA,WAAO;AAAA,EACT,CAAC,EAAE,MAAM;AACX;;;ACdA,SAASE,OAAO,MAAM,KAAK,UAAU;AAEnC,QAAM,MAAM;AAAA,IACV;AAAA,IACA,KAAK,IAAI,MAAM,GAAG;AAAA,EACpB;AAEA,MAAI,UAAU;AACZ,QAAI,WAAW;AAAA,EACjB;AAEA,SAAO;AACT;AAEO,IAAMC,YAAW,UAAU,SAAO;AAIvC,kBAAiB,GAAIC,WAAU,CAAC,GAAG;AAEjC,QAAI,QAAQ,CAAC;AAEb,QAAIA,SAAQ,OAAO;AACjB,cAAQ,MAAM,QAAQA,SAAQ,KAAK,IAAIA,SAAQ,QAAQ,CAACA,SAAQ,KAAK;AAAA,IACvE;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,UAAU;AAAA,MACnC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,GAAGA;AAAA,QACH,KAAK,MAAM,IAAI,UAAQ,GAAG,MAAM;AAAA,QAChC,QAAQ;AAAA,MACV,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,qBAAiB,OAAO,IAAI,OAAO,GAAG;AACpC,UAAI,IAAI,MAAM;AACZ,mBAAW,OAAO,OAAO,KAAK,IAAI,IAAI,GAAG;AACvC,gBAAMF,OAAM,IAAI,KAAK,KAAK,MAAM,KAAK,IAAI,KAAK,KAAK,QAAQ;AAAA,QAC7D;AACA;AAAA,MACF;AAEA,YAAMA,OAAM,IAAI,MAAM,IAAI,KAAK,IAAI,QAAQ;AAAA,IAC7C;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACpDM,IAAM,cAAc,UAAU,SAAO;AAI1C,kBAAiB,MAAO,QAAQG,WAAU,CAAC,GAAG;AAC5C,qBAAiB,EAAE,MAAM,UAAU,KAAKC,gBAAe,MAAM,GAAG;AAC9D,YAAM,eAAe,IAAI,gBAAgBD,SAAQ,YAAY;AAC7D,mBAAa,OAAO,OAAO,GAAG,MAAM;AAEpC,UAAI,aAAa;AAAM,qBAAa,IAAI,aAAa,OAAO,SAAS,CAAC;AAEtE,YAAM,MAAM,MAAM,IAAI,KAAK,UAAU;AAAA,QACnC,QAAQA,SAAQ;AAAA,QAChB,SAASA,SAAQ;AAAA,QACjB,cAAc,kBAAkB;AAAA,UAC9B,GAAGA;AAAA,UACH,KAAK,GAAG;AAAA,UACR;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAED,uBAAiB,OAAO,IAAI,OAAO,GAAG;AACpC,YAAI,IAAI,MAAM;AACZ,iBAAQ,IAAI,KAAK,IAAI,CAAuB,QAAQ,IAAI,MAAM,GAAG,CAAC;AAClE;AAAA,QACF;AACA,cAAM,IAAI,MAAM,GAAG;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACxCD,IAAAE,kBAAiB;AAWV,IAAMC,YAAW,CAAC,WAAW;AAClC,QAAMC,OAAM,YAAY,MAAM;AAE9B,SAAO,UAAU,MAAM;AAIrB,mBAAe,GAAI,MAAMC,WAAU,CAAC,GAAG;AAErC,iBAAO,gBAAAC,SAAKF,KAAI,CAAC;AAAA,QACf;AAAA,QACA,GAAGC;AAAA,MACL,CAAC,GAAGA,QAAO,CAAC;AAAA,IACd;AACA,WAAO;AAAA,EACT,CAAC,EAAE,MAAM;AACX;;;ACVO,IAAM,YAAY,CAAC,EAAE,MAAME,OAAM,QAAQ,QAAQ,KAAK,IAAI,MAAM;AACrE,SAAO;AAAA,IACL,KAAK,IAAI,MAAM,GAAG;AAAA,IAClB,MAAAA;AAAA,IACA;AAAA,EACF;AACF;AAMO,IAAM,gBAAgB,CAAC,YAAY;AACxC,MAAI,OAAO,YAAY,YAAY,YAAY,IAAI;AACjD,WAAO;AAAA,EACT,OAAO;AACL,UAAM,IAAI,UAAU,6BAA6B;AAAA,EACnD;AACF;AAMO,IAAMC,aAAY,CAAC,QAAQ;AAChC,MAAI,IAAI,MAAM,GAAG,GAAG;AAClB,WAAO,IAAI,SAAS;AAAA,EACtB,OAAO;AACL,UAAM,IAAI,UAAU,oCAAoC,OAAO,KAAK;AAAA,EACtE;AACF;AAMO,IAAM,cAAc,CAAC,EAAE,SAAS,KAAK,MAAAD,OAAM,QAAQ,KAAAE,KAAI,MAAM;AAClE,QAAM,QAAQ,kBAAkB;AAAA,IAC9B,SAAS,cAAc,OAAO;AAAA,IAC9B,MAAAF;AAAA,IACA,OAAOE,OAAM,OAAO;AAAA,EACtB,CAAC;AAED,MAAI,KAAK;AACP,eAAW,SAAS,KAAK;AACvB,YAAM,OAAO,OAAOD,WAAU,KAAK,CAAC;AAAA,IACtC;AAAA,EACF;AAEA,MAAI,QAAQ;AACV,eAAW,SAAS,QAAQ;AAC1B,YAAM,OAAO,UAAU,KAAK;AAAA,IAC9B;AAAA,EACF;AAEA,SAAO;AACT;AAMO,IAAM,kBAAkB,CAAC,EAAE,KAAK,SAAS,YAAY,MAAAD,OAAM,QAAQ,MAAM;AAC9E,QAAM,SAAS,kBAAkB;AAAA,IAC/B,KAAKC,WAAU,GAAG;AAAA,IAClB,SAAS,cAAc,OAAO;AAAA,IAC9B,MAAAD;AAAA,IACA,YAAY,aAAa,OAAO;AAAA,EAClC,CAAC;AAED,MAAI,SAAS;AACX,eAAW,UAAU,SAAS;AAC5B,aAAO,OAAO,UAAU,OAAO,SAAS,CAAC;AAAA,IAC3C;AAAA,EACF;AAEA,SAAO;AACT;;;ACrFO,SAASG,WAAW,QAAQ;AAIjC,iBAAe,IAAK,KAAK,EAAE,SAAS,QAAQ,YAAY,MAAM,GAAG;AAC/D,UAAM,WAAW,MAAM,OAAO,KAAK,kBAAkB;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,gBAAgB,EAAE,KAAK,GAAG,MAAM,CAAC;AAAA,IACjD,CAAC;AAED,WAAO,UAAU,MAAM,SAAS,KAAK,CAAC;AAAA,EACxC;AAEA,SAAO;AACT;;;AChBO,SAASC,UAAU,QAAQ;AAIhC,kBAAiB,GAAI,EAAE,SAAS,QAAQ,YAAY,MAAM,GAAG;AAC3D,UAAM,WAAW,MAAM,OAAO,KAAK,iBAAiB;AAAA,MAClD;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,YAAY,KAAK;AAAA,IACjC,CAAC;AAED,qBAAiB,OAAO,SAAS,OAAO,GAAG;AACzC,YAAM,UAAU,GAAG;AAAA,IACrB;AAAA,EACF;AAEA,SAAO;AACT;;;AClBO,SAASC,UAAU,QAAQ;AAIhC,iBAAe,GAAI,EAAE,SAAS,QAAQ,YAAY,MAAM,GAAG;AACzD,UAAM,OAAO,KAAK,iBAAiB;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,YAAY;AAAA,QACxB,GAAG;AAAA,QACH,KAAK;AAAA,MACP,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,SAAO;AACT;;;ACjBO,SAASC,aAAa,QAAQ;AAInC,iBAAe,MAAO,EAAE,SAAS,QAAQ,YAAY,MAAM,GAAG;AAC5D,UAAM,OAAO,KAAK,iBAAiB;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,YAAY;AAAA,QACxB,GAAG;AAAA,QACH,KAAK;AAAA,MACP,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,SAAO;AACT;;;ACpBO,SAAS,eAAgB,KAAK;AACnC,QAAM,OAAO,OAAO,GAAG;AACvB,MAAI,SAAS,aAAa;AACxB,UAAM,MAAM,sBAAsB;AAAA,EACpC;AAGA,SAAO,KAAK,KAAK,SAAS,OAAO,MAAM,KAAK,MAAM,GAAG,EAAE,IAAI;AAC7D;AAMO,SAAS,oBAAqB,MAAM;AACzC,SAAO;AAAA,IACL,SAAS,KAAK;AAAA,IACd,UAAU,IAAI,IAAI,KAAK,WAAW;AAAA,IAClC,GAAI,KAAK,QAAQ,EAAE,MAAM,WAAW,KAAK,IAAI,EAAE;AAAA,EACjD;AACF;AAMO,SAAS,WAAY,MAAM;AAChC,UAAQ,KAAK;AAAA,SACN,SAAS;AACZ,YAAM,EAAE,SAAS,QAAQ,QAAQ,OAAO,IAAI,KAAK;AACjD,aAAO;AAAA,QACL,QAAQ;AAAA,QACR,UAAU;AAAA,UACR,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,IACF;AAAA,SACK,WAAW;AACd,aAAO,EAAE,QAAQ,UAAU;AAAA,IAC7B;AAAA,aACS;AACP,aAAO,EAAE,QAAQ,KAAK,OAAO;AAAA,IAC/B;AAAA;AAEJ;;;AC3CO,SAASC,WAAW,QAAQ;AAIjC,iBAAe,IAAKC,OAAMC,UAAS;AACjC,UAAM,EAAE,UAAU,KAAK,SAAS,SAAS,OAAO,IAAIA;AAEpD,UAAM,OAAO,KAAK,0BAA0B;AAAA,MAC1C;AAAA,MACA;AAAA,MACA,cAAc,kBAAkB;AAAA,QAC9B,KAAK,CAACD,OAAM,eAAe,QAAQ,GAAG,GAAG;AAAA,MAC3C,CAAC;AAAA,MACD;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO;AACT;;;AClBO,SAASE,UAAU,QAAQ;AAIhC,iBAAe,GAAIC,WAAU,CAAC,GAAG;AAE/B,UAAM,EAAE,MAAM,SAAS,SAAS,OAAO,IAAIA;AAE3C,UAAM,WAAW,MAAM,OAAO,KAAK,yBAAyB;AAAA,MAC1D;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,SAAS,OAAO,kBAAkB,EAAE,KAAK,CAAC,IAAI;AAAA,IAC9D,CAAC;AAGD,UAAM,EAAE,eAAe,IAAI,MAAM,SAAS,KAAK;AAE/C,WAAO,eAAe,IAAI,mBAAmB;AAAA,EAC/C;AAEA,SAAO;AACT;;;ACvBO,SAASC,UAAU,QAAQ;AAIhC,iBAAe,GAAIC,OAAMC,WAAU,CAAC,GAAG;AACrC,UAAM,OAAO,KAAK,yBAAyB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,SAASA,SAAQ;AAAA,MACjB,cAAc,kBAAkB;AAAA,QAC9B,KAAKD;AAAA,MACP,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,SAAO;AACT;;;ACjBO,SAAS,cAAe,QAAQ;AACrC,QAAM,SAAS,IAAI,OAAO,MAAM;AAEhC,SAAO;AAAA,IACL,KAAKE,WAAU,MAAM;AAAA,IACrB,IAAIC,UAAS,MAAM;AAAA,IACnB,IAAIC,UAAS,MAAM;AAAA,EACrB;AACF;;;ACNO,SAAS,aAAc,QAAQ;AACpC,QAAM,SAAS,IAAI,OAAO,MAAM;AAEhC,SAAO;AAAA,IACL,KAAKC,WAAU,MAAM;AAAA,IACrB,IAAIC,UAAS,MAAM;AAAA,IACnB,IAAIC,UAAS,MAAM;AAAA,IACnB,OAAOC,aAAY,MAAM;AAAA,IACzB,SAAS,cAAc,MAAM;AAAA,EAC/B;AACF;;;ACVO,SAAS,UAAW,QAAQ;AACjC,SAAO;AAAA,IACL,QAAQ,aAAa,MAAM;AAAA,IAC3B,KAAKC,WAAU,MAAM;AAAA,IACrB,IAAIC,UAAS,MAAM;AAAA,IACnB,OAAO,YAAY,MAAM;AAAA,IACzB,IAAIC,UAAS,MAAM;AAAA,IACnB,QAAQ,aAAa,MAAM;AAAA,EAC7B;AACF;;;ACJA,IAAM,sBAAsB,aAAW;AACrC,MAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,WAAO,QAAQ,IAAI,SAAS;AAAA,EAC9B;AACA,SAAO;AACT;AAMA,IAAM,YAAY,QAAMC,UAAmB,WAAW,EAAE,CAAC;AAMzD,IAAM,aAAa,QAAM,UAAU,OAAO,EAAE;AAM5C,IAAM,cAAc,QAAM,OAAO,KAAKA,UAAmB,UAAU,OAAO,EAAE,GAAG,QAAQ,GAAG;AAM1F,IAAM,mBAAmB,UAAQ,UAAU,OAAOC,YAAqB,IAAI,CAAC;;;ACnCrE,IAAMC,YAAW,UAAU,SAAO;AAIvC,iBAAe,GAAIC,WAAU,CAAC,GAAG;AAC/B,UAAM,EAAE,QAAQ,IAAI,OAAO,MAAM,IAAI,KAAK,aAAa;AAAA,MACrD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC,GAAG,KAAK;AAET,WAAO,oBAAoB,OAAO,KAAK,CAAC;AAAA,EAC1C;AACA,SAAO;AACT,CAAC;;;ACdM,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAO,OAAOC,WAAU,CAAC,GAAG;AACzC,UAAM,MAAM,MAAM,IAAI,KAAK,gBAAgB;AAAA,MACzC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,iBAAiB,KAAK;AAAA,QAC3B,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,EAAE,QAAQ,IAAI,MAAM,IAAI,KAAK;AAEnC,WAAO,WAAW,CAAC;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACjBM,IAAMC,iBAAgB,UAAU,SAAO;AAI5C,iBAAe,QAAS,OAAO,MAAMC,WAAU,CAAC,GAAG;AACjD,UAAM,eAAe,kBAAkB;AAAA,MACrC,KAAK,iBAAiB,KAAK;AAAA,MAC3B,GAAGA;AAAA,IACL,CAAC;AAGD,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAE5D,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC;AAAA,MACA;AAAA,MACA,GACE,MAAM,iBAAiB,CAAC,IAAI,GAAG,YAAYA,SAAQ,OAAO;AAAA,IAE9D,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;AC/BD,IAAMC,OAAM,OAAO,mCAAmC;AAc/C,IAAM,kBAAkB,CAACC,UAAS,gBAAgB;AACvD,SAAO,UAAU,CAAC,QAAQ;AAIxB,mBAAe,UAAW,OAAO,SAASA,WAAU,CAAC,GAAG;AACtD,MAAAA,SAAQ,SAAS,YAAY,UAAU,OAAO,SAASA,SAAQ,MAAM;AAGrE,UAAI;AAEJ,UAAI;AAEJ,YAAM,SAAS,IAAI,QAAQ,CAACC,UAAS,WAAW;AAC9C,eAAOA;AACP,eAAO;AAAA,MACT,CAAC;AAID,YAAM,eAAe,WAAW,MAAM,KAAK,GAAG,GAAI;AAGlD,UAAI,KAAK,cAAc;AAAA,QACrB,QAAQD,SAAQ;AAAA,QAChB,cAAc,kBAAkB;AAAA,UAC9B,KAAK,iBAAiB,KAAK;AAAA,UAC3B,GAAGA;AAAA,QACL,CAAC;AAAA,QACD,SAASA,SAAQ;AAAA,MACnB,CAAC,EACE,MAAM,CAAC,QAAQ;AAEd,oBAAY,YAAY,OAAO,OAAO;AAEtC,aAAK,GAAG;AAAA,MACV,CAAC,EACA,KAAK,CAAC,aAAa;AAClB,qBAAa,YAAY;AAEzB,YAAI,CAAC,UAAU;AAEb;AAAA,QACF;AAEA,qBAAa,UAAU;AAAA,UACrB,WAAW,CAAC,YAAY;AACtB,gBAAI,CAAC,SAAS;AACZ;AAAA,YACF;AAEA,gBAAI,OAAO,YAAY,YAAY;AACjC,sBAAQ,OAAO;AACf;AAAA,YACF;AAEA,gBAAI,OAAO,QAAQ,gBAAgB,YAAY;AAC7C,sBAAQ,YAAY,OAAO;AAAA,YAC7B;AAAA,UACF;AAAA,UACA,OAAO,MAAM,YAAY,YAAY,OAAO,OAAO;AAAA,UACnD,SAASA,SAAQ;AAAA,QACnB,CAAC;AAED,aAAK;AAAA,MACP,CAAC;AAEH,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT,CAAC,EAAEA,QAAO;AACZ;AASA,eAAe,aAAc,UAAU,EAAE,WAAW,OAAO,QAAQ,GAAG;AAnGtE,MAAAE,KAAA;AAoGE,YAAU,WAAWH;AAErB,MAAI;AACF,qBAAiB,OAAO,SAAS,OAAO,GAAG;AACzC,UAAI;AACF,YAAI,CAAC,IAAI,MAAM;AACb;AAAA,QACF;AAEA,YAAI,IAAI,QAAQ,QAAQ,IAAI,SAAS,MAAM;AACzC,oBAAU;AAAA,YACR,MAAM;AAAA,YACN,MAAM,iBAAiB,IAAI,IAAI;AAAA,YAC/B,MAAM,WAAW,IAAI,IAAI;AAAA,YACzB,gBAAgB,YAAY,IAAI,KAAK;AAAA,YACrC,OAAO,UAAU,IAAI,SAAS,EAAE;AAAA,YAChC,KAAK,YAAWG,MAAA,IAAI,QAAJ,OAAAA,MAAW,GAAG;AAAA,YAC9B,WAAW,YAAW,SAAI,cAAJ,YAAiB,GAAG;AAAA,UAC5C,CAAC;AAAA,QACH,OAAO;AACL,oBAAU;AAAA,YACR,MAAM;AAAA,YACN,MAAM,WAAW,IAAI,IAAI;AAAA,YACzB,OAAO,UAAU,IAAI,SAAS,EAAE;AAAA,UAClC,CAAC;AAAA,QACH;AAAA,MACF,SAA4B,KAA1B;AACA,YAAI,UAAU,mCAAmC,IAAI;AACrD,gBAAQ,KAAK,OAAO,GAAG;AAAA,MACzB;AAAA,IACF;AAAA,EACF,SAA4B,KAA1B;AACA,QAAI,CAAC,aAAa,GAAG,GAAG;AACtB,cAAQ,KAAK,IAAI;AAAA,IACnB;AAAA,EACF,UAAE;AACA,UAAM;AAAA,EACR;AACF;AAMA,IAAM,eAAe,WAAS;AAC5B,UAAQ,MAAM;AAAA,SACP;AACH,aAAO;AAAA,SAEJ;AACH,aAAO;AAAA;AAIP,aAAO,MAAM,SAAS;AAAA;AAE5B;;;ACjJO,IAAM,oBAAoB,CAACC,UAAS,gBAAgB;AAIzD,iBAAe,YAAa,OAAO,SAAS;AAC1C,gBAAY,YAAY,OAAO,OAAO;AAAA,EACxC;AACA,SAAO;AACT;;;ACTO,IAAM,sBAAN,MAA0B;AAAA,EAC/B,cAAe;AAEb,SAAK,QAAQ,oBAAI,IAAI;AAAA,EACvB;AAAA,EAOA,UAAW,OAAO,SAAS,QAAQ;AACjC,UAAM,YAAY,KAAK,MAAM,IAAI,KAAK,KAAK,CAAC;AAE5C,QAAI,UAAU,KAAK,OAAK,EAAE,YAAY,OAAO,GAAG;AAC9C,YAAM,IAAI,MAAM,yBAAyB,yBAAyB;AAAA,IACpE;AAGA,UAAM,aAAa,IAAI,gBAAgB;AAEvC,SAAK,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS,WAAW,CAAC,EAAE,OAAO,SAAS,CAAC;AAGjE,QAAI,QAAQ;AACV,aAAO,iBAAiB,SAAS,MAAM,KAAK,YAAY,OAAO,OAAO,CAAC;AAAA,IACzE;AAEA,WAAO,WAAW;AAAA,EACpB;AAAA,EAMA,YAAa,OAAO,SAAS;AAC3B,UAAM,OAAO,KAAK,MAAM,IAAI,KAAK,KAAK,CAAC;AACvC,QAAI;AAEJ,QAAI,SAAS;AACX,WAAK,MAAM,IAAI,OAAO,KAAK,OAAO,OAAK,EAAE,YAAY,OAAO,CAAC;AAC7D,eAAS,KAAK,OAAO,OAAK,EAAE,YAAY,OAAO;AAAA,IACjD,OAAO;AACL,WAAK,MAAM,IAAI,OAAO,CAAC,CAAC;AACxB,eAAS;AAAA,IACX;AAEA,QAAI,EAAE,KAAK,MAAM,IAAI,KAAK,KAAK,CAAC,GAAG,QAAQ;AACzC,WAAK,MAAM,OAAO,KAAK;AAAA,IACzB;AAEA,WAAO,QAAQ,OAAK,EAAE,WAAW,MAAM,CAAC;AAAA,EAC1C;AACF;;;ACrDO,SAASC,cAAc,QAAQ;AACpC,QAAM,sBAAsB,IAAI,oBAAoB;AAEpD,SAAO;AAAA,IACL,IAAIC,UAAS,MAAM;AAAA,IACnB,OAAO,YAAY,MAAM;AAAA,IACzB,SAASC,eAAc,MAAM;AAAA,IAC7B,WAAW,gBAAgB,QAAQ,mBAAmB;AAAA,IACtD,aAAa,kBAAkB,QAAQ,mBAAmB;AAAA,EAC5D;AACF;;;ACXO,IAAM,cAAc,UAAU,SAAO;AAI1C,kBAAiB,UAAWC,WAAU,CAAC,GAAG;AACxC,UAAM,MAAM,MAAM,IAAI,KAAK,cAAc;AAAA,MACvC,QAAQA,SAAQ;AAAA,MAChB,WAAW;AAAA,MACX,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAQ,IAAI,OAAO;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACbM,IAAM,aAAa,UAAU,CAAC,KAAK,SAAS;AAIjD,QAAM,OAAO,iBAAkB,MAAMC,WAAU,CAAC,GAAG;AAEjD,UAAM,UAAU,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAElD,UAAM,MAAM,MAAM,IAAI,KAAK,QAAQ;AAAA,MACjC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,QAAQ,IAAI,SAAO,GAAG,eAAe,aAAa,IAAI,OAAO,GAAG,IAAI,KAAK;AAAA,QAC9E,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,MACjB,WAAW;AAAA,IACb,CAAC;AAED,WAAQ,IAAI,OAAO;AAAA,EACrB;AAEA,SAAO,OAAO,OAAO,MAAM;AAAA,IACzB,OAAO,YAAY,IAAI;AAAA,EACzB,CAAC;AACH,CAAC;;;AC1BM,IAAM,WAAW,UAAU,SAAO;AAIvC,kBAAiB,GAAIC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,MACpC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,MACjB,WAAW,CAACC,SAAQ;AAClB,eAAO;AAAA,UACL,KAAKA,KAAI,QAAQ,IAAI,MAAMA,KAAI,KAAK,IAAI;AAAA,UACxC,MAAMA,KAAI,OAAO,CAAC,GAAG,OAAO,IAAI,MAAMA,KAAI,IAAI,IAAI,IAAI;AAAA,QACxD;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAQ,IAAI,OAAO;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACrBM,IAAMC,cAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,aAAa;AAAA,MACtC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO;AAAA,MACL,YAAY,OAAO,KAAK,UAAU;AAAA,MAClC,UAAU,OAAO,KAAK,QAAQ;AAAA,MAC9B,UAAU,KAAK;AAAA,MACf,SAAS,KAAK;AAAA,MACd,YAAY,OAAO,KAAK,UAAU;AAAA,IACpC;AAAA,EACF;AACA,SAAO;AACT,CAAC;;;ACrBM,IAAM,gBAAgB,UAAU,SAAO;AAI5C,iBAAeC,SAASC,WAAU,CAAC,GAAG;AACpC,UAAM,MAAM,OAAO,MAAM,IAAI,KAAK,gBAAgB;AAAA,MAChD,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC,GAAG,KAAK;AAET,WAAO,IAAI;AAAA,EACb;AACA,SAAOD;AACT,CAAC;;;ACfM,SAAS,WAAY,QAAQ;AAClC,SAAO;AAAA,IACL,IAAI,SAAS,MAAM;AAAA,IACnB,MAAME,YAAW,MAAM;AAAA,IACvB,SAAS,cAAc,MAAM;AAAA,EAC/B;AACF;;;ACLO,IAAM,WAAW,UAAU,SAAO;AAIvC,kBAAiB,GAAIC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,MACjB,WAAW,CAAC,WAAW;AAAA,QACrB,SAAS,OAAO,MAAM,OAAO;AAAA,QAC7B,UAAU,OAAO,MAAM,QAAQ;AAAA,QAC/B,QAAQ,WAAW,MAAM,MAAM;AAAA,QAC/B,SAAS,WAAW,MAAM,OAAO;AAAA,MACnC;AAAA,IACF,CAAC;AAED,WAAQ,IAAI,OAAO;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACrBM,SAAS,YAAa,QAAQ;AACnC,SAAO;AAAA,IACL,SAAS,WAAc,MAAM;AAAA,IAC7B,MAAMC,YAAW,MAAM;AAAA,IACvB,IAAI,SAAS,MAAM;AAAA,EACrB;AACF;;;ACHO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAOC,WAAU,CAAC,GAAG;AAClC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,WAAO,OAAO,KAAK,KAAK,EAAE,IAAI,SAAO;AAAA,MACnC,IAAI,iBAAiB,EAAE;AAAA,MACvB,QAAQ,MAAM,OAAO,CAAC,GAAG,IAAI,OAAK,UAAU,CAAC,CAAC;AAAA,IAChD,EAAE;AAAA,EACJ;AACA,SAAO;AACT,CAAC;;;ACtBM,IAAM,gBAAgB,UAAU,SAAO;AAI5C,iBAAe,QAAS,MAAMC,WAAU,CAAC,GAAG;AAC1C,UAAM,MAAM,MAAM,IAAI,KAAK,iBAAiB;AAAA,MAC1C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,EAAE,QAAQ,IAAI,MAAM,IAAI,KAAK;AAEnC,WAAO,WAAW,CAAC;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;AClBM,IAAM,mBAAmB,UAAU,SAAO;AAI/C,iBAAe,WAAY,MAAMC,WAAU,CAAC,GAAG;AAC7C,UAAM,MAAM,MAAM,IAAI,KAAK,oBAAoB;AAAA,MAC7C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,EAAE,QAAQ,IAAI,MAAM,IAAI,KAAK;AAEnC,WAAO,WAAW,CAAC;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACjBM,IAAM,mBAAmB,UAAU,SAAO;AAI/C,iBAAe,WAAYC,WAAU,CAAC,GAAG;AACvC,UAAM,MAAM,MAAM,IAAI,KAAK,qBAAqB;AAAA,MAC9C,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,UAAM,EAAE,QAAQ,IAAI,MAAM,IAAI,KAAK;AAEnC,YAAQ,WAAW,CAAC,GAAG,IAAI,OAAK,UAAU,CAAC,CAAC;AAAA,EAC9C;AACA,SAAO;AACT,CAAC;;;AChBM,IAAMC,eAAc,UAAU,SAAO;AAI1C,iBAAe,MAAOC,WAAU,CAAC,GAAG;AAClC,UAAM,MAAM,MAAM,IAAI,KAAK,eAAe;AAAA,MACxC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,UAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,YAAQ,SAAS,CAAC,GAAG,IAAI,UAAQ;AAC/B,aAAO;AAAA,QACL,MAAM,UAAU,KAAK,IAAI;AAAA,QACzB,MAAM,iBAAiB,KAAK,IAAI;AAAA,QAChC,OAAO,KAAK;AAAA,QACZ,SAAS,KAAK;AAAA,QACd,SAAS,KAAK;AAAA,QACd,WAAW,KAAK,aAAa,OAAO,SAAY,KAAK,cAAc,IAAI,YAAY;AAAA,MACrF;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AACT,CAAC;;;AC3BM,SAAS,YAAa,QAAQ;AACnC,SAAO;AAAA,IACL,OAAO,YAAY,MAAM;AAAA,IACzB,SAAS,cAAc,MAAM;AAAA,IAC7B,YAAY,iBAAiB,MAAM;AAAA,IACnC,YAAY,iBAAiB,MAAM;AAAA,IACnC,OAAOC,aAAY,MAAM;AAAA,EAC3B;AACF;;;ACFO,IAAMC,gBAAe,UAAU,CAAC,QAAQ;AAI7C,kBAAiB,OAAQ,QAAQC,WAAU,CAAC,GAAG;AAE7C,UAAM,aAAa,IAAI,gBAAgB;AACvC,UAAM,SAAS,YAAY,WAAW,QAAQA,SAAQ,MAAM;AAC5D,UAAM,EAAE,SAAS,MAAM,OAAO,MAAM,IAClC,MAAM,iBAAiB,QAAQ,YAAYA,SAAQ,OAAO;AAO5D,UAAM,CAAC,YAAY,gBAAgB,IAAI,OAAOA,SAAQ,aAAa,aAC/D,sBAAsB,OAAO,OAAOA,SAAQ,QAAQ,IACpD,CAAC,QAAW,MAAS;AAEzB,UAAM,MAAM,MAAM,IAAI,KAAK,OAAO;AAAA,MAChC,cAAc,kBAAkB;AAAA,QAC9B,mBAAmB;AAAA,QACnB,GAAGA;AAAA,QACH,UAAU,QAAQ,UAAU;AAAA,MAC9B,CAAC;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,mBAAe,QAAQ,IAAI,OAAO,GAAG;AACnC,aAAO,cAAc,IAAI;AAEzB,UAAI,KAAK,SAAS,QAAW;AAC3B,cAAMC,iBAAgB,IAAI;AAAA,MAC5B,WAAW,YAAY;AACrB,mBAAW,KAAK,SAAS,GAAG,KAAK,IAAI;AAAA,MACvC;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAWD,IAAM,wBAAwB,CAAC,OAAO,OAAO,aAC3C,QAAQ,CAAC,QAAW,uBAAuB,OAAO,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,MAAS;AAW5F,IAAM,yBAAyB,CAAC,MAAM,OAAO,aAAa;AACxD,MAAI,QAAQ;AACZ,QAAM,QAAQ,MAAM;AACpB,SAAO,CAAC,EAAE,QAAQ,MAAM,MAAM;AAE5B,UAAM,WAAW,KAAK,MAAM,SAAS,QAAQ,IAAI;AACjD,WAAO,QAAQ,OAAO;AACpB,YAAM,EAAE,OAAO,KAAK,MAAAC,MAAK,IAAI,MAAM;AAEnC,UAAI,WAAW,KAAK;AAClB,iBAAS,WAAW,OAAOA,KAAI;AAC/B;AAAA,MAGF,OAAO;AACL,iBAAS,MAAM,OAAOA,KAAI;AAC1B,iBAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF;AACF;AAWA,SAASD,iBAAiB,EAAE,MAAAC,OAAM,MAAM,MAAM,MAAM,OAAO,WAAW,GAAG;AAEvE,QAAM,SAAS;AAAA,IACb,MAAMA;AAAA,IACN,KAAK,IAAI,MAAM,IAAI;AAAA,IACnB,MAAM,SAAS,IAAI;AAAA,EACrB;AAEA,MAAI,QAAQ,MAAM;AAChB,WAAO,OAAO,SAAS,MAAM,CAAC;AAAA,EAChC;AAEA,MAAI,SAAS,MAAM;AACjB,WAAO,QAAQ;AAAA,MACb,MAAM;AAAA,MACN,OAAO,cAAc;AAAA,IACvB;AAAA,EACF;AAEA,SAAO;AACT;;;ACnIA,IAAAC,kBAAiB;;;ACDjB,IAAAC,oBAAoB;AAEpB,IAAAC,uCAA8B;AAC9B,wBAAqB;AACrB,IAAAC,sBAAuB;AACvB,IAAAC,iBAAgB;AAChB,IAAAC,iBAAgB;AAWhB,gBAAiB,gBAAiB,OAAO;AACvC,QAAM;AACR;AAKA,eAAsBC,kBAAkB,OAAO;AAE7C,MAAI,QAAQ,KAAK,GAAG;AAClB,WAAO,gBAAgBC,SAAQ,KAAK,CAAC;AAAA,EACvC;AAEA,MAAI,OAAO,UAAU,YAAY,iBAAiB,QAAQ;AACxD,WAAO,gBAAgBA,SAAQ,MAAM,SAAS,CAAC,CAAC;AAAA,EAClD;AAGA,MAAI,OAAO,KAAK,GAAG;AACjB,eAAO,kBAAAC,SAAS,KAAK;AAAA,EACvB;AAGA,MAAI,iBAAiB,KAAK,GAAG;AAC3B,gBAAQ,qCAAAC,SAAkB,KAAK;AAAA,EACjC;AAGA,MAAI,OAAO,YAAY,SAAS,OAAO,iBAAiB,OAAO;AAE7D,UAAM,eAAW,oBAAAC,SAAW,KAAK;AAGjC,UAAM,EAAE,OAAO,KAAK,IAAI,MAAM,SAAS,KAAK;AAE5C,QAAI,MAAM;AAER,aAAO,gBAAgB,IAAI,WAAW,CAAC,CAAC;AAAA,IAC1C;AAEA,aAAS,KAAK,KAAK;AAGnB,QAAI,OAAO,UAAU,KAAK,GAAG;AAC3B,aAAO,gBAAgB,WAAW,KAAK,UAAM,eAAAC,SAAI,QAAQ,CAAC,CAAC;AAAA,IAC7D;AAGA,QAAI,QAAQ,KAAK,KAAK,OAAO,UAAU,YAAY,iBAAiB,QAAQ;AAC1E,iBAAO,eAAAC,SAAI,UAAUL,QAAO;AAAA,IAC9B;AAAA,EACF;AAEA,YAAM,kBAAAM,SAAQ,IAAI,MAAM,qBAAqB,OAAO,GAAG,sBAAsB;AAC/E;AAKA,SAASN,SAAS,OAAO;AACvB,MAAI,iBAAiB,YAAY;AAC/B,WAAO;AAAA,EACT;AAEA,MAAI,YAAY,OAAO,KAAK,GAAG;AAC7B,WAAO,IAAI,WAAW,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU;AAAA,EACxE;AAEA,MAAI,iBAAiB,aAAa;AAChC,WAAO,IAAI,WAAW,KAAK;AAAA,EAC7B;AAEA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO,WAAW,KAAK,KAAK;AAAA,EAC9B;AAEA,SAAOO,YAAqB,MAAM,SAAS,CAAC;AAC9C;;;AC9FA,IAAAC,oBAAoB;AACpB,IAAAC,uCAA8B;AAC9B,IAAAC,sBAAuB;AAwBvB,gBAAwB,yBAA0B,OAAOC,mBAAkB;AACzE,MAAI,UAAU,QAAQ,UAAU,QAAW;AACzC,cAAM,kBAAAC,SAAQ,IAAI,MAAM,qBAAqB,OAAO,GAAG,sBAAsB;AAAA,EAC/E;AAGA,MAAI,OAAO,UAAU,YAAY,iBAAiB,QAAQ;AACxD,UAAMC,cAAa,MAAM,SAAS,GAAGF,iBAAgB;AACrD;AAAA,EACF;AAIA,MAAI,QAAQ,KAAK,KAAK,OAAO,KAAK,GAAG;AACnC,UAAME,cAAa,OAAOF,iBAAgB;AAC1C;AAAA,EACF;AAGA,MAAI,iBAAiB,KAAK,GAAG;AAC3B,gBAAQ,qCAAAG,SAAkB,KAAK;AAAA,EACjC;AAGA,MAAI,OAAO,YAAY,SAAS,OAAO,iBAAiB,OAAO;AAE7D,UAAM,eAAW,oBAAAC,SAAW,KAAK;AAGjC,UAAM,EAAE,OAAO,KAAK,IAAI,MAAM,SAAS,KAAK;AAE5C,QAAI,MAAM;AAER,YAAM,EAAE,SAAS,CAAC,EAAE;AACpB;AAAA,IACF;AAEA,aAAS,KAAK,KAAK;AAKnB,QAAI,OAAO,UAAU,KAAK,KAAK,QAAQ,KAAK,KAAK,OAAO,UAAU,YAAY,iBAAiB,QAAQ;AACrG,YAAMF,cAAa,UAAUF,iBAAgB;AAC7C;AAAA,IACF;AAEA,cAAM,kBAAAC,SAAQ,IAAI,MAAM,qGAAqG,GAAG,sBAAsB;AAAA,EACxJ;AAKA,MAAI,aAAa,KAAK,GAAG;AACvB,UAAMC,cAAa,OAAOF,iBAAgB;AAC1C;AAAA,EACF;AAEA,YAAM,kBAAAC,SAAQ,IAAI,MAAM,uCAAuC,OAAO,QAAQ,wBAAwB,GAAG,sBAAsB;AACjI;AAMA,eAAeC,cAAc,OAAOF,mBAAkB;AAEpD,QAAM,EAAE,MAAM,MAAM,OAAO,QAAQ,IAAI;AAGvC,QAAM,OAAO;AAAA,IACX,MAAM,QAAQ;AAAA,IACd,MAAM,UAAU,IAAI;AAAA,IACpB,OAAOK,YAAW,KAAK;AAAA,EACzB;AAEA,MAAI,SAAS;AACX,SAAK,UAAU,MAAML,kBAAiB,OAAO;AAAA,EAC/C,WAAW,CAAC,MAAM;AAEhB,SAAK,UAAU,MAAMA,kBAAiB,KAAK;AAAA,EAC7C;AAEA,SAAO;AACT;;;AC5FO,SAASM,gBAAgB,OAAO;AACrC,SAAO,yBAAyB,OAAOC,iBAAgB;AACzD;;;AHPO,SAASC,WAAWC,UAAS;AAClC,QAAMC,OAAMC,cAAaF,QAAO;AAChC,SAAO,UAAU,MAAM;AAIrB,mBAAe,IAAK,OAAOA,WAAU,CAAC,GAAG;AAEvC,aAAO,UAAM,gBAAAG,SAAKF,KAAIG,gBAAe,KAAK,GAAGJ,QAAO,CAAC;AAAA,IACvD;AACA,WAAO;AAAA,EACT,CAAC,EAAEA,QAAO;AACZ;;;AIjBO,IAAM,YAAY,UAAU,SAAO;AAIxC,kBAAiB,IAAK,MAAMK,WAAU,CAAC,GAAG;AACxC,UAAM,MAAM,MAAM,IAAI,KAAK,OAAO;AAAA,MAChC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,KAAK,SAAS;AAAA,QACnB,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAQ,IAAI,SAAS;AAAA,EACvB;AAEA,SAAO;AACT,CAAC;;;AClBM,IAAM,iBAAiB,UAAU,SAAO;AAI7C,QAAM,WAAW,OAAOC,WAAU,CAAC,MAAM;AACvC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,IAAI,KAAK;AAAA,EAClB;AACA,SAAO;AACT,CAAC;;;ACdM,IAAM,YAAY,UAAU,SAAO;AAIxC,QAAM,MAAM,OAAO,QAAQC,WAAU,CAAC,MAAM;AAC1C,UAAM,MAAM,MAAM,IAAI,KAAK,OAAO;AAAA,MAChC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,WAAO,KAAK;AAAA,EACd;AAEA,SAAO;AACT,CAAC;;;ACzBM,IAAM,0BAA0B,UAAU,SAAO;AACtD,SAAO,MAAM;AACX,UAAM,MAAM,IAAI,IAAI,IAAI,KAAK,QAAQ,EAAE;AACvC,WAAO;AAAA,MACL,MAAM,IAAI;AAAA,MACV,MAAM,IAAI;AAAA,MACV,UAAU,IAAI;AAAA,MACd,UAAU,IAAI;AAAA,MACd,YAAY,IAAI;AAAA,IAClB;AAAA,EACF;AACF,CAAC;;;ACJM,IAAMC,aAAY,UAAU,SAAO;AAIxC,kBAAiB,IAAK,MAAMC,WAAU,CAAC,GAAG;AAExC,UAAM,OAAO;AAAA,MACX,KAAK,GAAG,gBAAgB,aAAa,IAAI,OAAO,IAAI,IAAI;AAAA,MACxD,GAAGA;AAAA,IACL;AAEA,QAAI,KAAK,kBAAkB;AACzB,WAAK,uBAAuB,KAAK;AACjC,aAAO,KAAK;AAAA,IACd;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,OAAO;AAAA,MAChC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB,IAAI;AAAA,MACpC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAQ,IAAI,SAAS;AAAA,EACvB;AAEA,SAAO;AACT,CAAC;;;ACxBM,IAAM,WAAW,UAAU,SAAO;AAIvC,iBAAe,GAAIC,WAAU,CAAC,GAAG;AAC/B,UAAM,MAAM,MAAM,IAAI,KAAK,MAAM;AAAA,MAC/B,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAKA,SAAQ,SAASA,SAAQ,OAAO,SAAS,IAAI;AAAA,QAClD,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,UAAM,SAAS;AAAA,MACb,GAAG,cAAc,IAAI;AAAA,IACvB;AAEA,WAAO,KAAK,iBAAiB,OAAO,EAAE;AAEtC,QAAI,OAAO,WAAW;AACpB,aAAO,YAAY,OAAO,UAAU,IAAI,CAAuB,OAAO,UAAU,EAAE,CAAC;AAAA,IACrF;AAGA,WAAO;AAAA,EACT;AACA,SAAO;AACT,CAAC;;;AC9BM,IAAM,iBAAiB,CAAAC,aAAW;AACvC,QAAM,KAAK,SAASA,QAAO;AAK3B,iBAAe,SAAUA,WAAU,CAAC,GAAG;AACrC,UAAM,MAAM,MAAM,GAAGA,QAAO;AAE5B,WAAO,QAAQ,OAAO,IAAI,aAAa,IAAI,UAAU,MAAM;AAAA,EAC7D;AACA,SAAO;AACT;;;ACZO,IAAMC,YAAW,UAAU,CAAC,KAAK,SAAS;AAI/C,kBAAiB,GAAI,MAAMC,WAAU,CAAC,GAAG;AACvC,UAAM,UAAU,GAAG,gBAAgB,aAAa,IAAI,OAAO,IAAI,IAAI;AAKnE,mBAAe,QAAS,MAAM;AAC5B,UAAI,OAAO,KAAK;AAEhB,UAAI,KAAK,SAAS,GAAG,GAAG;AAEtB,cAAM,WAAW,KAAK,WAAW,QAAQ,IAAI,OAAO,SAAS;AAC7D,cAAM,QAAQ,MAAMC,YAAW,IAAI,EAAE,QAAQ;AAE7C,eAAO,MAAM;AAAA,MACf,OAAO;AACL,eAAO,IAAI,MAAM,IAAI;AAAA,MACvB;AAGA,YAAM,QAAQ;AAAA,QACZ,MAAM,KAAK;AAAA,QACX,MAAM,WAAW,KAAK,OAAO,IAAI,KAAK,SAAS;AAAA,QAC/C,MAAM,KAAK;AAAA,QACX,KAAK;AAAA,QACL,MAAM,OAAO,IAAI;AAAA,MACnB;AAEA,UAAI,KAAK,MAAM;AACb,cAAM,OAAO,SAAS,KAAK,MAAM,CAAC;AAAA,MACpC;AAEA,UAAI,KAAK,UAAU,UAAa,KAAK,UAAU,MAAM;AACnD,cAAM,QAAQ;AAAA,UACZ,MAAM,KAAK;AAAA,QACb;AAEA,YAAI,KAAK,eAAe,UAAa,KAAK,eAAe,MAAM;AAC7D,gBAAM,MAAM,QAAQ,KAAK;AAAA,QAC3B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,MAAM,IAAI,KAAK,MAAM;AAAA,MAC/B,QAAQD,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,mBAAe,UAAU,IAAI,OAAO,GAAG;AACrC,eAAS,OAAO;AAEhB,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD;AAEA,eAAS,OAAO;AAChB,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI,MAAM,uCAAuC;AAAA,MACzD;AAEA,YAAM,QAAQ,OAAO;AACrB,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAI,MAAM,gDAAgD;AAAA,MAClE;AAEA,UAAI,CAAC,MAAM,QAAQ;AAEjB,cAAM,QAAQ,MAAM;AAEpB;AAAA,MACF;AAEA,aAAQ,MAAM,IAAI,OAAO;AAAA,IAC3B;AAAA,EACF;AACA,SAAO;AACT,CAAC;AAKD,SAAS,OAAQ,MAAM;AACrB,UAAQ,KAAK;AAAA,SACN;AAAA,SACA;AACH,aAAO;AAAA,SACJ;AACH,aAAO;AAAA;AAEP,aAAO;AAAA;AAEb;;;ACtGO,IAAM,cAAc,UAAU,SAAO;AAI1C,iBAAe,MAAOE,WAAU,CAAC,GAAG;AAClC,UAAM,MAAM,MAAM,IAAI,KAAK,OAAO;AAAA,MAChC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,WAAO,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,EACvC;AACA,SAAO;AACT,CAAC;;;ACdM,IAAM,aAAa,UAAU,SAAO;AAIzC,kBAAiB,KAAM,QAAQC,WAAU,CAAC,GAAG;AAC3C,UAAM,MAAM,MAAM,IAAI,KAAK,QAAQ;AAAA,MACjC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK,GAAG;AAAA,QACR,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,MACjB,WAAW;AAAA,IACb,CAAC;AAED,WAAQ,IAAI,OAAO;AAAA,EACrB;AACA,SAAO;AACT,CAAC;;;ACnBM,IAAMC,iBAAgB,UAAU,SAAO;AAI5C,iBAAeC,SAAS,MAAMC,WAAU,CAAC,GAAG;AAC1C,UAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,MACpC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkB;AAAA,QAC9B,KAAK;AAAA,QACL,GAAGA;AAAA,MACL,CAAC;AAAA,MACD,SAASA,SAAQ;AAAA,IACnB,CAAC;AACD,UAAM,EAAE,KAAK,IAAI,MAAM,IAAI,KAAK;AAChC,WAAO;AAAA,EACT;AACA,SAAOD;AACT,CAAC;;;ACxBD,IAAAE,oBAAoB;AAOb,IAAM,cAAc,UAAU,SAAO;AAI1C,QAAM,QAAQ,OAAOC,WAAU,CAAC,MAAM;AACpC,cAAM,kBAAAC,SAAQ,IAAI,MAAM,iBAAiB,GAAG,qBAAqB;AAAA,EACnE;AAEA,SAAO;AACT,CAAC;;;ACTM,IAAM,aAAa,UAAU,SAAO;AAIzC,iBAAe,KAAMC,WAAU,CAAC,GAAG;AACjC,UAAM,MAAM,MAAM,IAAI,KAAK,YAAY;AAAA,MACrC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAED,UAAM,IAAI,KAAK;AAAA,EACjB;AACA,SAAO;AACT,CAAC;;;ACbM,IAAMC,iBAAgB,UAAU,SAAO;AAI5C,iBAAeC,SAASC,WAAU,CAAC,GAAG;AACpC,UAAM,MAAM,MAAM,IAAI,KAAK,WAAW;AAAA,MACpC,QAAQA,SAAQ;AAAA,MAChB,cAAc,kBAAkBA,QAAO;AAAA,MACvC,SAASA,SAAQ;AAAA,IACnB,CAAC;AAGD,WAAO;AAAA,MACL,GAAG,cAAc,MAAM,IAAI,KAAK,CAAC;AAAA,MACjC,oBAAoB;AAAA,IACtB;AAAA,EACF;AAEA,SAAOD;AACT,CAAC;;;ACiBD,yBAA6B;AA0G7B,wBAAqC;AAvF9B,SAASE,QAAQC,WAAU,CAAC,GAAG;AAIpC,QAAM,KAAK;AAAA,IACT,MAAM,SAAS;AAAA,IACf,MAAM,SAAS;AAAA,IACf,QAAQ,CAACC,QAAOA;AAAA,IAChB,QAAQ,CAACA,QAAOA;AAAA,EAClB;AAGA,QAAM,kBAAkB,OAAO,OAAO,KAAK;AAE3C,GAACD,SAAQ,QAAQA,SAAQ,KAAK,QAAQA,SAAQ,KAAK,QAAQ,CAAC,GAAG,QAAQ,CAAAE,UAAQ,gBAAgB,KAAKA,KAAI,CAAC;AAEzG,QAAM,aAAa,IAAI,WAAW;AAAA,IAChC,OAAO;AAAA,IACP,UAAUF,SAAQ,QAAQA,SAAQ,KAAK;AAAA,EACzC,CAAC;AAGD,QAAM,cAAc,OAAO,OAAO,MAAM;AAExC,GAAC,aAAO,aAASG,cAAS,aAAS,EAAE,EAAE,OAAQH,SAAQ,QAAQA,SAAQ,KAAK,UAAW,CAAC,CAAC,EAAE,QAAQ,WAAS,YAAY,KAAK,KAAK,CAAC;AAEnI,QAAM,cAAc,IAAI,YAAY;AAAA,IAClC,QAAQ;AAAA,IACR,WAAWA,SAAQ,QAAQA,SAAQ,KAAK;AAAA,EAC1C,CAAC;AAGD,QAAM,mBAAmB,OAAO,OAAO,MAAM;AAE7C,GAACA,SAAQ,QAAQA,SAAQ,KAAK,UAAUA,SAAQ,KAAK,UAAU,CAAC,GAAG,QAAQ,YAAU,iBAAiB,KAAK,MAAM,CAAC;AAElH,QAAM,cAAc,IAAI,YAAY;AAAA,IAClC,SAAS;AAAA,IACT,YAAYA,SAAQ,QAAQA,SAAQ,KAAK;AAAA,EAC3C,CAAC;AAGD,QAAM,SAAS;AAAA,IACb,KAAKI,WAAUJ,QAAO;AAAA,IACtB,QAAQK,cAAaL,QAAO;AAAA,IAC5B,SAAS,cAAcA,QAAO;AAAA,IAC9B,OAAO,YAAYA,QAAO;AAAA,IAC1B,WAAW,gBAAgBA,QAAO;AAAA,IAClC,KAAK,UAAUA,QAAO;AAAA,IACtB,UAAU,eAAeA,QAAO;AAAA,IAChC,QAAQ,aAAaA,QAAO;AAAA,IAC5B,KAAK,UAAU,aAAaA,QAAO;AAAA,IACnC,KAAK,UAAUA,QAAO;AAAA,IACtB,MAAM,WAAWA,QAAO;AAAA,IACxB,KAAK,UAAUA,QAAO;AAAA,IACtB,OAAO,YAAYA,QAAO;AAAA,IAC1B,KAAKM,WAAUN,QAAO;AAAA,IACtB,mBAAmB,wBAAwBA,QAAO;AAAA,IAClD,IAAI,SAASA,QAAO;AAAA,IACpB,UAAU,eAAeA,QAAO;AAAA,IAChC,KAAK,UAAUA,QAAO;AAAA,IACtB,KAAK,UAAUA,QAAO;AAAA,IACtB,IAAIO,UAASP,QAAO;AAAA,IACpB,OAAO,YAAYA,QAAO;AAAA,IAC1B,MAAM,WAAWA,QAAO;AAAA,IACxB,QAAQ,aAAa,aAAaA,QAAO;AAAA,IACzC,KAAK,UAAUA,QAAO;AAAA,IACtB,MAAM,WAAWA,QAAO;AAAA,IACxB,QAAQQ,cAAaR,QAAO;AAAA,IAC5B,MAAM,WAAWA,QAAO;AAAA,IACxB,MAAM,WAAWA,QAAO;AAAA,IACxB,SAASS,eAAcT,QAAO;AAAA,IAC9B,OAAO,YAAYA,QAAO;AAAA,IAC1B,OAAO,YAAYA,QAAO;AAAA,IAC1B,MAAM,WAAWA,QAAO;AAAA,IACxB,OAAO,YAAYA,QAAO;AAAA,IAC1B,SAASU,eAAcV,QAAO;AAAA,IAC9B,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,EACX;AAEA,SAAO;AACT;AAKO,IAAM,aAAa,mBAAAW;",
  "names": ["exports", "module", "encode", "MSB", "REST", "MSBALL", "INT", "exports", "module", "read", "MSB", "REST", "buf", "exports", "module", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "exports", "module", "exports", "module", "code", "exports", "module", "exports", "module", "exports", "module", "options", "parse", "name", "exports", "module", "coerce", "debug", "self", "name", "exports", "module", "exports", "HTTPError", "require_browser", "exports", "module", "global", "exports", "module", "exports", "module", "require_fetch_browser", "exports", "module", "Response", "options", "name", "resolve", "exports", "module", "exports", "module", "name", "globalThis", "symbol", "merge", "options", "exports", "module", "URL", "base", "exports", "module", "location", "base", "exports", "module", "URLSearchParams", "exports", "module", "anySignal", "exports", "module", "HTTPError", "merge", "URL", "URLSearchParams", "anySignal", "resolve", "HTTP", "options", "buf", "exports", "module", "symbol", "exports", "module", "options", "exports", "module", "all", "exports", "module", "map", "exports", "module", "resolve", "params", "offset", "exports", "base64", "length", "string", "encode", "buffer", "i", "decode", "exports", "module", "exports", "module", "buf", "exports", "string", "buffer", "exports", "module", "alloc", "slice", "size", "buf", "exports", "module", "from", "length", "exports", "merge", "src", "name", "i", "exports", "module", "base64", "create", "alloc", "buf", "exports", "module", "buf", "exports", "module", "buffer", "create_array", "create", "buf", "length", "exports", "module", "buffer", "exports", "module", "self", "err", "exports", "exports", "module", "exports", "configure", "require_minimal", "exports", "module", "exports", "module", "first", "exports", "module", "last", "exports", "module", "exports", "module", "blobToIt", "exports", "module", "exports", "module", "HTTP", "options", "name", "options", "base", "options", "code", "table", "options", "code", "table", "decode", "encode", "buf", "decode", "code", "code", "digest", "decode", "equals", "name", "encode", "length", "i", "j", "decode", "string", "buffer", "name", "decoders", "encode", "decode", "alphabet", "string", "codes", "buffer", "version", "code", "digest", "equals", "base", "decode", "length", "cid", "size", "base", "textEncoder", "name", "encode", "decode", "code", "decode", "encode", "name", "typeOf", "name", "textDecoder", "textEncoder", "isBuffer", "buf", "toString", "fromString", "string", "length", "isBuffer", "string", "length", "buf", "options", "buf", "encodedSize", "options", "buf", "encodedSize", "compareTokens", "length", "buf", "options", "fromString", "encodedSize", "compareTokens", "toToken", "length", "options", "toString", "toToken", "length", "options", "buf", "encodedSize", "toToken", "length", "options", "buf", "encodedSize", "options", "buf", "encodedSize", "options", "buf", "encodedSize", "ui8a", "options", "length", "buf", "encode", "options", "decode", "name", "code", "encode", "decode", "esm_exports", "code", "decode", "encode", "name", "from", "name", "code", "encode", "digest", "buf", "is", "fromString", "mapSorter", "defaultEncodeOptions", "encode", "options", "options", "decode", "cidEncoder", "undefinedEncoder", "numberEncoder", "encodeOptions", "options", "decodeOptions", "name", "code", "encode", "decode", "code", "decode", "encode", "name", "encode", "decode", "fromSplit", "encode", "decode", "name", "code", "fromSplit", "encode", "decode", "code", "name", "encode", "identity_exports", "identity", "identity", "buf", "encode", "decode", "name", "from", "code", "decode", "encode", "name", "name", "code", "encode", "decode", "json_exports", "code", "decode", "encode", "name", "textEncoder", "textDecoder", "identity_exports", "json_exports", "options", "toString", "options", "clonedRegexp", "string", "string", "name", "encode", "decode", "buf", "string", "toString", "base", "toString", "word", "buf", "length", "code", "name", "import_varint", "fromString", "string", "base", "concat", "length", "buf", "toString", "fromString", "varint", "concat", "decode", "import_varint", "concat", "buf", "varint", "code", "toString", "fromString", "import_varint", "equals", "fromString", "codes", "code", "buf", "varint", "tuple", "toString", "equals", "options", "errCode", "debug", "name", "import_index", "mergeOptions", "last", "_a", "parts", "options", "HTTP", "options", "import_err_code", "errCode", "options", "arg", "options", "options", "import_err_code", "symbol", "symbol", "_a", "equals", "decode", "buf", "options", "options", "options", "import_err_code", "browserStreamToIt", "itPeekable", "all", "errCode", "import_err_code", "import_browser_readablestream_to_it", "import_it_peekable", "import_err_code", "$protobuf", "Data", "encode", "decode", "UnixTime", "Metadata", "parseMtime", "errcode", "normaliseContent", "errCode", "browserStreamToIt", "itPeekable", "map", "value", "parseMtime", "modeToString", "modeToString", "options", "options", "cid", "toCoreInterface", "createStat", "options", "createStat", "options", "options", "options", "options", "createRm", "options", "createRm", "options", "createList", "options", "createList", "createGet", "options", "options", "options", "fromString", "options", "createGet", "options", "import_err_code", "codecs", "options", "cid", "errCode", "import_err_code", "createGet", "codecs", "options", "first", "last", "errCode", "options", "createPut", "codecs", "options", "resolve", "options", "codecs", "createGet", "createPut", "_a", "fromString", "options", "options", "createGet", "options", "toString", "options", "createPut", "options", "toString", "options", "createGet", "createPut", "options", "options", "options", "options", "options", "src", "options", "options", "toCoreInterface", "options", "options", "read", "options", "toIterable", "import_http", "createRm", "options", "HTTP", "createStat", "options", "toCoreInterface", "options", "options", "createRm", "createStat", "import_err_code", "createExport", "name", "options", "errCode", "name", "options", "createImport", "name", "options", "import_err_code", "name", "options", "errCode", "createList", "options", "options", "createRm", "name", "options", "createExport", "createImport", "createList", "createRm", "level", "options", "createLs", "options", "options", "createLs", "options", "createResolve", "resolve", "options", "name", "options", "options", "options", "createResolve", "options", "data", "createGet", "options", "fromString", "options", "options", "createPut", "codecs", "options", "createStat", "options", "options", "options", "options", "options", "codecs", "createGet", "createPut", "createStat", "import_err_code", "normaliseInput", "errCode", "first", "cid", "options", "normaliseInput", "import_it_last", "createAdd", "all", "options", "last", "toPin", "createLs", "options", "options", "normaliseInput", "import_it_last", "createRm", "all", "options", "last", "name", "encodeCID", "all", "createAdd", "createLs", "createRm", "createRmAll", "createAdd", "name", "options", "createLs", "options", "createRm", "name", "options", "createAdd", "createLs", "createRm", "createAdd", "createLs", "createRm", "createRmAll", "createAdd", "createLs", "createRm", "toString", "fromString", "createLs", "options", "options", "createPublish", "options", "log", "options", "resolve", "_a", "options", "createPubsub", "createLs", "createPublish", "options", "options", "options", "res", "createStat", "options", "version", "options", "createStat", "options", "createStat", "options", "options", "options", "options", "createPeers", "options", "createPeers", "createAddAll", "options", "toCoreInterface", "name", "import_it_last", "import_err_code", "import_browser_readablestream_to_it", "import_it_peekable", "import_it_all", "import_it_map", "normaliseContent", "toBytes", "blobToIt", "browserStreamToIt", "itPeekable", "all", "map", "errCode", "fromString", "import_err_code", "import_browser_readablestream_to_it", "import_it_peekable", "normaliseContent", "errCode", "toFileObject", "browserStreamToIt", "itPeekable", "parseMtime", "normaliseInput", "normaliseContent", "createAdd", "options", "all", "createAddAll", "last", "normaliseInput", "options", "options", "options", "createGet", "options", "options", "options", "createLs", "options", "createStat", "options", "options", "createResolve", "resolve", "options", "import_err_code", "options", "errCode", "options", "createVersion", "version", "options", "create", "options", "id", "base", "esm_exports", "createAdd", "createAddAll", "createGet", "createLs", "createPubsub", "createResolve", "createVersion", "globSourceImport"]
}
